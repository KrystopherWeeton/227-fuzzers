; ModuleID = '../../v8/src/inspector/v8-console-message.cc'
source_filename = "../../v8/src/inspector/v8-console-message.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8_inspector::V8ConsoleMessage" = type { i32, double, %"class.v8_inspector::String16", %"class.v8_inspector::String16", i32, i32, %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.9", %"class.v8_inspector::String16", %"class.v8_inspector::String16" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.v8_inspector::V8StackTraceImpl"* }
%"class.v8_inspector::V8StackTraceImpl" = type { %"class.v8_inspector::V8StackTrace", %"class.std::__1::vector", i32, %"class.std::__1::weak_ptr", %"struct.v8_inspector::V8StackTraceId" }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::shared_ptr" = type opaque
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::weak_ptr" = type { %"class.v8_inspector::AsyncStackTrace"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8_inspector::AsyncStackTrace" = type { i32, i64, i8*, %"class.v8_inspector::String16", %"class.std::__1::vector", %"class.std::__1::weak_ptr", %"struct.v8_inspector::V8StackTraceId" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair", i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::Global"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::unique_ptr.11"* }
%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.v8_inspector::V8ConsoleMessageStorage" = type { %"class.v8_inspector::V8InspectorImpl"*, i32, i32, %"class.std::__1::deque", %"class.std::__1::map.668" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.664" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"**, %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.v8_inspector::V8ConsoleMessage"* }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.std::__1::unique_ptr.645"** }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i64 }
%"class.std::__1::map.668" = type { %"class.std::__1::__tree.669" }
%"class.std::__1::__tree.669" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.v8_inspector::V8InspectorImpl" = type { %"class.v8_inspector::V8Inspector", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorClient"*, %"class.std::__1::unique_ptr.95", %"class.v8::Global.257", i32, i32, i32, i32, i64, %"class.std::__1::unordered_map.259", %"class.std::__1::unordered_map.283", %"class.std::__1::unordered_map.307", %"class.std::__1::unordered_map.331", %"class.std::__1::unordered_map.259", %"class.std::__1::map", %"class.std::__1::unique_ptr.363", %"class.v8_inspector::V8Inspector::Counters"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.v8_inspector::V8Debugger"* }
%"class.v8_inspector::V8Debugger" = type { %"class.v8::debug::DebugDelegate", %"class.v8::debug::AsyncEventDelegate", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorImpl"*, i32, i32, i32, i64, i8, i8, i32, i32, i32, %"class.v8_inspector::String16", %"class.std::__1::unique_ptr", %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", i32, i32, %"class.std::__1::vector.138", %"class.std::__1::vector.145", %"class.std::__1::vector.153", i32, %"class.std::__1::list", %"class.std::__1::unordered_map.164", i8*, i8, i8, i8, i32, i8, [7 x i8], %"class.std::__1::unordered_map.192", i64, %"class.std::__1::unordered_map.220", %"class.std::__1::unique_ptr.248" }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.114", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.117" }
%"class.std::__1::__hash_table.117" = type <{ %"class.std::__1::unique_ptr.118", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120", %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"struct.std::__1::__hash_node_base.121"** }
%"struct.std::__1::__hash_node_base.121" = type { %"struct.std::__1::__hash_node_base.121"* }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.std::__1::__bucket_list_deallocator.123" }
%"class.std::__1::__bucket_list_deallocator.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.121" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { i8**, i8**, %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i8** }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.std::__1::shared_ptr.147"*, %"class.std::__1::shared_ptr.147"*, %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::shared_ptr.147" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.std::__1::shared_ptr.147"* }
%"class.std::__1::vector.153" = type { %"class.std::__1::__vector_base.154" }
%"class.std::__1::__vector_base.154" = type { %"struct.v8_inspector::V8StackTraceId"*, %"struct.v8_inspector::V8StackTraceId"*, %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.v8_inspector::V8StackTraceId"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.160" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::unordered_map.164" = type { %"class.std::__1::__hash_table.165" }
%"class.std::__1::__hash_table.165" = type <{ %"class.std::__1::unique_ptr.166", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", [4 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base.169"** }
%"struct.std::__1::__hash_node_base.169" = type { %"struct.std::__1::__hash_node_base.169"* }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::__bucket_list_deallocator.171" }
%"class.std::__1::__bucket_list_deallocator.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.169" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.192" = type { %"class.std::__1::__hash_table.193" }
%"class.std::__1::__hash_table.193" = type <{ %"class.std::__1::unique_ptr.194", %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.209", %"class.std::__1::__compressed_pair.214", [4 x i8] }>
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196", %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base.197"** }
%"struct.std::__1::__hash_node_base.197" = type { %"struct.std::__1::__hash_node_base.197"* }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.std::__1::__bucket_list_deallocator.199" }
%"class.std::__1::__bucket_list_deallocator.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.197" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.220" = type { %"class.std::__1::__hash_table.221" }
%"class.std::__1::__hash_table.221" = type <{ %"class.std::__1::unique_ptr.222", %"class.std::__1::__compressed_pair.232", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", [4 x i8] }>
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224", %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base.225"** }
%"struct.std::__1::__hash_node_base.225" = type { %"struct.std::__1::__hash_node_base.225"* }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.std::__1::__bucket_list_deallocator.227" }
%"class.std::__1::__bucket_list_deallocator.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.225" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback"* }
%"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback" = type { i32 (...)** }
%"class.v8::Global.257" = type { %"class.v8::PersistentBase.258" }
%"class.v8::PersistentBase.258" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.std::__1::unordered_map.283" = type { %"class.std::__1::__hash_table.284" }
%"class.std::__1::__hash_table.284" = type <{ %"class.std::__1::unique_ptr.285", %"class.std::__1::__compressed_pair.295", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.303", [4 x i8] }>
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287", %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.std::__1::__hash_node_base.288"** }
%"struct.std::__1::__hash_node_base.288" = type { %"struct.std::__1::__hash_node_base.288"* }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::__bucket_list_deallocator.290" }
%"class.std::__1::__bucket_list_deallocator.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.std::__1::__hash_node_base.288" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.307" = type { %"class.std::__1::__hash_table.308" }
%"class.std::__1::__hash_table.308" = type <{ %"class.std::__1::unique_ptr.309", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base.312"** }
%"struct.std::__1::__hash_node_base.312" = type { %"struct.std::__1::__hash_node_base.312"* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__bucket_list_deallocator.314" }
%"class.std::__1::__bucket_list_deallocator.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base.312" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.355", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.v8_inspector::V8Console"* }
%"class.v8_inspector::V8Console" = type { %"class.v8::debug::ConsoleDelegate", %"class.v8_inspector::V8InspectorImpl"* }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8_inspector::V8Inspector::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::Isolate"*, %"class.std::__1::unordered_map.370" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr.369" }
%"class.std::__1::weak_ptr.369" = type { %"class.v8_inspector::V8Inspector::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unordered_map.370" = type { %"class.std::__1::__hash_table.371" }
%"class.std::__1::__hash_table.371" = type <{ %"class.std::__1::unique_ptr.372", %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374", %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.375"** }
%"struct.std::__1::__hash_node_base.375" = type { %"struct.std::__1::__hash_node_base.375"* }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.std::__1::__bucket_list_deallocator.377" }
%"class.std::__1::__bucket_list_deallocator.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.std::__1::__hash_node_base.375" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.v8_inspector::protocol::Console::Frontend" = type { %"class.v8_crdtp::FrontendChannel"* }
%"class.v8_crdtp::FrontendChannel" = type { i32 (...)** }
%"class.v8_inspector::protocol::Console::ConsoleMessage" = type { %"class.v8_crdtp::ProtocolObject", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe.25", %"class.v8_crdtp::detail::ValueMaybe.25" }
%"class.v8_crdtp::ProtocolObject" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_crdtp::Serializable" = type { i32 (...)** }
%"class.v8_crdtp::detail::ValueMaybe" = type { i8, %"class.v8_inspector::String16" }
%"class.v8_crdtp::detail::ValueMaybe.25" = type { i8, i32 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"*, %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.v8_inspector::protocol::Runtime::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::RemoteObject" = type { %"class.v8_crdtp::ProtocolObject.40", %"class.v8_inspector::protocol::Runtime::API::RemoteObject", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe.49", %"class.v8_crdtp::detail::PtrMaybe.74" }
%"class.v8_crdtp::ProtocolObject.40" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.v8_crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.43" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.v8_inspector::protocol::Value"* }
%"class.v8_inspector::protocol::Value" = type <{ %"class.v8_crdtp::Serializable", i32, [4 x i8] }>
%"class.v8_crdtp::detail::PtrMaybe.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8_inspector::protocol::Runtime::ObjectPreview"* }
%"class.v8_inspector::protocol::Runtime::ObjectPreview" = type { %"class.v8_crdtp::ProtocolObject.53", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", i8, %"class.std::__1::unique_ptr.56", %"class.v8_crdtp::detail::PtrMaybe.63" }
%"class.v8_crdtp::ProtocolObject.53" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::vector.59"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.712" }
%"class.std::__1::__vector_base.712" = type { %"class.std::__1::unique_ptr.713"*, %"class.std::__1::unique_ptr.713"*, %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8_inspector::protocol::Runtime::PropertyPreview"* }
%"class.v8_inspector::protocol::Runtime::PropertyPreview" = type { %"class.v8_crdtp::ProtocolObject.716", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe.49", %"class.v8_crdtp::detail::ValueMaybe" }
%"class.v8_crdtp::ProtocolObject.716" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.std::__1::unique_ptr.713"* }
%"class.v8_crdtp::detail::PtrMaybe.63" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.std::__1::vector.67"* }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.727" }
%"class.std::__1::__vector_base.727" = type { %"class.std::__1::unique_ptr.728"*, %"class.std::__1::unique_ptr.728"*, %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8_inspector::protocol::Runtime::EntryPreview"* }
%"class.v8_inspector::protocol::Runtime::EntryPreview" = type { %"class.v8_crdtp::ProtocolObject.731", %"class.v8_crdtp::detail::PtrMaybe.49", %"class.std::__1::unique_ptr.50" }
%"class.v8_crdtp::ProtocolObject.731" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.std::__1::unique_ptr.728"* }
%"class.v8_crdtp::detail::PtrMaybe.74" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.v8_inspector::protocol::Runtime::CustomPreview"* }
%"class.v8_inspector::protocol::Runtime::CustomPreview" = type { %"class.v8_crdtp::ProtocolObject.78", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe" }
%"class.v8_crdtp::ProtocolObject.78" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::unique_ptr.37"* }
%"class.v8_inspector::V8InspectorSessionImpl" = type <{ %"class.v8_inspector::V8InspectorSession", %"class.v8_crdtp::FrontendChannel", i32, i32, %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8Inspector::Channel"*, i8, [7 x i8], %"class.v8_crdtp::UberDispatcher", %"class.std::__1::unique_ptr.414", %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.508", %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.520", %"class.std::__1::unique_ptr.526", %"class.std::__1::unique_ptr.532", %"class.std::__1::vector.538", i8, [7 x i8] }>
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.v8_inspector::V8Inspector::Channel" = type { i32 (...)** }
%"class.v8_crdtp::UberDispatcher" = type { i32 (...)**, %"class.v8_crdtp::FrontendChannel"*, %"class.std::__1::vector.398", %"class.std::__1::vector.406" }
%"class.std::__1::vector.398" = type { %"class.std::__1::__vector_base.399" }
%"class.std::__1::__vector_base.399" = type { %"struct.std::__1::pair.400"*, %"struct.std::__1::pair.400"*, %"class.std::__1::__compressed_pair.401" }
%"struct.std::__1::pair.400" = type opaque
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::pair.400"* }
%"class.std::__1::vector.406" = type { %"class.std::__1::__vector_base.407" }
%"class.std::__1::__vector_base.407" = type { %"struct.std::__1::pair.408"*, %"struct.std::__1::pair.408"*, %"class.std::__1::__compressed_pair.409" }
%"struct.std::__1::pair.408" = type opaque
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::pair.408"* }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.v8_inspector::protocol::DictionaryValue"* }
%"class.v8_inspector::protocol::DictionaryValue" = type { %"class.v8_inspector::protocol::Value.base", [4 x i8], %"class.std::__1::unordered_map.417", %"class.std::__1::vector.444" }
%"class.v8_inspector::protocol::Value.base" = type <{ %"class.v8_crdtp::Serializable", i32 }>
%"class.std::__1::unordered_map.417" = type { %"class.std::__1::__hash_table.418" }
%"class.std::__1::__hash_table.418" = type <{ %"class.std::__1::unique_ptr.419", %"class.std::__1::__compressed_pair.429", %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.438", [4 x i8] }>
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421", %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.422"** }
%"struct.std::__1::__hash_node_base.422" = type { %"struct.std::__1::__hash_node_base.422"* }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.std::__1::__bucket_list_deallocator.424" }
%"class.std::__1::__bucket_list_deallocator.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.std::__1::__hash_node_base.422" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::vector.444" = type { %"class.std::__1::__vector_base.445" }
%"class.std::__1::__vector_base.445" = type { %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"*, %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.v8_inspector::String16"* }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.v8_inspector::V8RuntimeAgentImpl"* }
%"class.v8_inspector::V8RuntimeAgentImpl" = type { %"class.v8_inspector::protocol::Runtime::Backend", %"class.v8_inspector::V8InspectorSessionImpl"*, %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::Runtime::Frontend", %"class.v8_inspector::V8InspectorImpl"*, i8, [7 x i8], %"class.std::__1::unordered_map.457", %"class.std::__1::unordered_map.481" }
%"class.v8_inspector::protocol::Runtime::Backend" = type { i32 (...)** }
%"class.v8_inspector::protocol::Runtime::Frontend" = type { %"class.v8_crdtp::FrontendChannel"* }
%"class.std::__1::unordered_map.457" = type { %"class.std::__1::__hash_table.458" }
%"class.std::__1::__hash_table.458" = type <{ %"class.std::__1::unique_ptr.459", %"class.std::__1::__compressed_pair.469", %"class.std::__1::__compressed_pair.474", %"class.std::__1::__compressed_pair.477", [4 x i8] }>
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461", %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"struct.std::__1::__hash_node_base.462"** }
%"struct.std::__1::__hash_node_base.462" = type { %"struct.std::__1::__hash_node_base.462"* }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.std::__1::__bucket_list_deallocator.464" }
%"class.std::__1::__bucket_list_deallocator.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"struct.std::__1::__hash_node_base.462" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.481" = type { %"class.std::__1::__hash_table.482" }
%"class.std::__1::__hash_table.482" = type <{ %"class.std::__1::unique_ptr.483", %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.501", [4 x i8] }>
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485", %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"struct.std::__1::__hash_node_base.486"** }
%"struct.std::__1::__hash_node_base.486" = type { %"struct.std::__1::__hash_node_base.486"* }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.std::__1::__bucket_list_deallocator.488" }
%"class.std::__1::__bucket_list_deallocator.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.std::__1::__hash_node_base.486" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.v8_inspector::V8DebuggerAgentImpl"* }
%"class.v8_inspector::V8DebuggerAgentImpl" = type opaque
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.v8_inspector::V8HeapProfilerAgentImpl"* }
%"class.v8_inspector::V8HeapProfilerAgentImpl" = type opaque
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.v8_inspector::V8ProfilerAgentImpl"* }
%"class.v8_inspector::V8ProfilerAgentImpl" = type opaque
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.v8_inspector::V8ConsoleAgentImpl"* }
%"class.v8_inspector::V8ConsoleAgentImpl" = type <{ %"class.v8_inspector::protocol::Console::Backend", %"class.v8_inspector::V8InspectorSessionImpl"*, %"class.v8_inspector::protocol::DictionaryValue"*, %"class.v8_inspector::protocol::Console::Frontend", i8, [7 x i8] }>
%"class.v8_inspector::protocol::Console::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.v8_inspector::V8SchemaAgentImpl"* }
%"class.v8_inspector::V8SchemaAgentImpl" = type opaque
%"class.std::__1::vector.538" = type { %"class.std::__1::__vector_base.539" }
%"class.std::__1::__vector_base.539" = type { %"class.std::__1::unique_ptr.540"*, %"class.std::__1::unique_ptr.540"*, %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::unique_ptr.540" = type opaque
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.std::__1::unique_ptr.540"* }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8_inspector::InspectedContext" = type { %"class.v8_inspector::V8InspectorImpl"*, %"class.v8::Global.257", i32, i32, %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::V8DebuggerId", %"class.std::__1::unordered_set.546", %"class.std::__1::unordered_map.568", %"class.v8_inspector::InspectedContext::WeakCallbackData"*, %"class.v8::Global.592" }
%"class.v8_inspector::V8DebuggerId" = type { i64, i64 }
%"class.std::__1::unordered_set.546" = type { %"class.std::__1::__hash_table.547" }
%"class.std::__1::__hash_table.547" = type <{ %"class.std::__1::unique_ptr.548", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.565", [4 x i8] }>
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550", %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"struct.std::__1::__hash_node_base.551"** }
%"struct.std::__1::__hash_node_base.551" = type { %"struct.std::__1::__hash_node_base.551"* }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.std::__1::__bucket_list_deallocator.553" }
%"class.std::__1::__bucket_list_deallocator.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"struct.std::__1::__hash_node_base.551" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::unordered_map.568" = type { %"class.std::__1::__hash_table.569" }
%"class.std::__1::__hash_table.569" = type <{ %"class.std::__1::unique_ptr.570", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.585", %"class.std::__1::__compressed_pair.588", [4 x i8] }>
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572", %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"struct.std::__1::__hash_node_base.573"** }
%"struct.std::__1::__hash_node_base.573" = type { %"struct.std::__1::__hash_node_base.573"* }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.std::__1::__bucket_list_deallocator.575" }
%"class.std::__1::__bucket_list_deallocator.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"struct.std::__1::__hash_node_base.573" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.v8_inspector::InspectedContext::WeakCallbackData" = type opaque
%"class.v8::Global.592" = type { %"class.v8::PersistentBase.593" }
%"class.v8::PersistentBase.593" = type { %"class.v8::debug::WeakMap"* }
%"class.v8::debug::WeakMap" = type { i8 }
%"class.v8::Array" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8_crdtp::detail::PtrMaybe.603" = type { %"class.std::__1::unique_ptr.604" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.v8_inspector::protocol::Runtime::StackTrace"* }
%"class.v8_inspector::protocol::Runtime::StackTrace" = type { %"class.v8_crdtp::ProtocolObject.614", %"class.v8_inspector::protocol::Runtime::API::StackTrace", %"class.v8_crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.617", %"class.v8_crdtp::detail::PtrMaybe.603", %"class.v8_crdtp::detail::PtrMaybe.624" }
%"class.v8_crdtp::ProtocolObject.614" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::Runtime::API::StackTrace" = type { %"class.v8_inspector::protocol::Exported" }
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.std::__1::vector.620"* }
%"class.std::__1::vector.620" = type { %"class.std::__1::__vector_base.742" }
%"class.std::__1::__vector_base.742" = type { %"class.std::__1::unique_ptr.743"*, %"class.std::__1::unique_ptr.743"*, %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"class.v8_inspector::protocol::Runtime::CallFrame"* }
%"class.v8_inspector::protocol::Runtime::CallFrame" = type { %"class.v8_crdtp::ProtocolObject.746", %"class.v8_inspector::String16", %"class.v8_inspector::String16", %"class.v8_inspector::String16", i32, i32 }
%"class.v8_crdtp::ProtocolObject.746" = type { %"class.v8_crdtp::Serializable" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.std::__1::unique_ptr.743"* }
%"class.v8_crdtp::detail::PtrMaybe.624" = type { %"class.std::__1::unique_ptr.625" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.v8_inspector::protocol::Runtime::StackTraceId"* }
%"class.v8_inspector::protocol::Runtime::StackTraceId" = type { %"class.v8_crdtp::ProtocolObject.628", %"class.v8_inspector::protocol::Runtime::API::StackTraceId", %"class.v8_inspector::String16", %"class.v8_crdtp::detail::ValueMaybe" }
%"class.v8_crdtp::ProtocolObject.628" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_inspector::protocol::Runtime::API::StackTraceId" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Runtime::ExceptionDetails" = type { %"class.v8_crdtp::ProtocolObject.600", i32, %"class.v8_inspector::String16", i32, i32, %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::PtrMaybe.603", %"class.v8_crdtp::detail::PtrMaybe.610", %"class.v8_crdtp::detail::ValueMaybe.25" }
%"class.v8_crdtp::ProtocolObject.600" = type { %"class.v8_crdtp::Serializable" }
%"class.v8_crdtp::detail::PtrMaybe.610" = type { %"class.std::__1::unique_ptr.37" }
%"class.v8_inspector::protocol::StringValue" = type { %"class.v8_inspector::protocol::Value.base", %"class.v8_inspector::String16" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.v8::Local.594"*, %"class.v8::Local.594"*, %"class.std::__1::__compressed_pair.653" }
%"class.v8::Local.594" = type { %"class.v8::Value"* }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::Local.594"* }
%"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder" = type { i32, %"class.v8::Isolate"*, %"class.v8_inspector::String16Builder", %"class.std::__1::vector.762", %"class.v8::TryCatch", %"class.v8::Local" }
%"class.v8_inspector::String16Builder" = type { %"class.std::__1::vector.758" }
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { i16*, i16*, %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { i16* }
%"class.std::__1::vector.762" = type { %"class.std::__1::__vector_base.763" }
%"class.std::__1::__vector_base.763" = type { %"class.v8::Local.595"*, %"class.v8::Local.595"*, %"class.std::__1::__compressed_pair.764" }
%"class.v8::Local.595" = type { %"class.v8::Array"* }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.v8::Local.595"* }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.658 }
%union.anon.658 = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.800" }
%"struct.std::__1::pair.800" = type { i32, %"struct.v8_inspector::V8ConsoleMessageStorage::PerContextData" }
%"struct.v8_inspector::V8ConsoleMessageStorage::PerContextData" = type { %"class.std::__1::set", %"class.std::__1::map.688", %"class.std::__1::map.697" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.680" }
%"class.std::__1::__tree.680" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.681", %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::map.688" = type { %"class.std::__1::__tree.689" }
%"class.std::__1::__tree.689" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.690", %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::map.697" = type { %"class.std::__1::__tree.698" }
%"class.std::__1::__tree.698" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.std::__1::__tree_node.806" = type { %"class.std::__1::__tree_node_base.base", %"class.v8_inspector::String16" }
%"class.std::__1::tuple.836" = type { %"struct.std::__1::__tuple_impl.837" }
%"struct.std::__1::__tuple_impl.837" = type { %"class.std::__1::__tuple_leaf.838" }
%"class.std::__1::__tuple_leaf.838" = type { %"class.v8_inspector::String16"* }
%"class.std::__1::tuple.818" = type { i8 }
%"class.std::__1::__tree_node.803" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.804" }
%"struct.std::__1::__value_type.804" = type { %"struct.std::__1::pair.805" }
%"struct.std::__1::pair.805" = type <{ %"class.v8_inspector::String16", i32, [4 x i8] }>
%"class.std::__1::__tree_node.801" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.802" }
%"struct.std::__1::__value_type.802" = type { %"struct.std::__1::pair.708" }
%"struct.std::__1::pair.708" = type { %"class.v8_inspector::String16", double }
%"class.v8::String" = type { i8 }
%"class.v8::StringObject" = type { i8 }
%"class.v8::BigIntObject" = type { i8 }
%"class.v8::BigInt" = type { i8 }
%"class.v8::Symbol" = type { i8 }
%"class.v8::SymbolObject" = type { i8 }
%"class.v8::NumberObject" = type { i8 }
%"class.v8::BooleanObject" = type { i8 }

$_ZNK12v8_inspector8String169substringEmm = comdat any

$_ZN12v8_inspector8protocol7Console14ConsoleMessage6setUrlERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol7Runtime16ExceptionDetails11setScriptIdERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol7Runtime16ExceptionDetails6setUrlERKNS_8String16E = comdat any

$_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt = comdat any

$_ZNSt3__112__deque_baseINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12RemoteObjectENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2v86GlobalINS2_5ValueEEENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__15dequeINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__114__split_bufferIPNS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE10push_frontEOS7_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE5eraseENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEE = comdat any

@.str = private unnamed_addr constant [6 x i8] c"data:\00", align 1
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum3LogE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum5DebugE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum5ErrorE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum7WarningE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum4InfoE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum10ConsoleApiE = external local_unnamed_addr global i8*, align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"console\00", align 1
@_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6StringE = external local_unnamed_addr global i8*, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN12v8_inspector12_GLOBAL__N_132kGlobalConsoleMessageHandleLabelE = internal constant [17 x i8] c"DevTools console\00", align 16
@.str.3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"<message collected>\00", align 1
@_ZTVN12v8_inspector8protocol7Console14ConsoleMessageE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol7Runtime16ExceptionDetailsE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTVN12v8_inspector8protocol11StringValueE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum3LogE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5DebugE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum4InfoE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5ErrorE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum7WarningE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5ClearE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum3DirE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum6DirxmlE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5TableE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5TraceE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum10StartGroupE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum19StartGroupCollapsedE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum8EndGroupE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum6AssertE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum7TimeEndE = external local_unnamed_addr global i8*, align 8
@_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5CountE = external local_unnamed_addr global i8*, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"[object Proxy]\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Symbol(\00", align 1
@_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic521 = internal global i64 0, align 8
@.str.10 = private unnamed_addr constant [11 x i8] c"v8.console\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"V8ConsoleMessage::Exception\00", align 1
@_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic524 = internal global i64 0, align 8
@.str.12 = private unnamed_addr constant [24 x i8] c"V8ConsoleMessage::Error\00", align 1
@_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic527 = internal global i64 0, align 8
@.str.13 = private unnamed_addr constant [25 x i8] c"V8ConsoleMessage::Assert\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector23V8ConsoleMessageStorage10addMessageENS_10unique_ptrINS4_16V8ConsoleMessageENS_14default_deleteIS7_EEEEE3$_0FvPNS4_22V8InspectorSessionImplEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector23V8ConsoleMessageStorage5clearEvE3$_1FvPNS4_22V8InspectorSessionImplEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@switch.table._ZNK12v8_inspector16V8ConsoleMessage16reportToFrontendEPNS_8protocol7Runtime8FrontendEPNS_22V8InspectorSessionImplEb = private unnamed_addr constant [16 x i8**] [i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum3LogE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5DebugE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum4InfoE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5ErrorE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum7WarningE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum3DirE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum6DirxmlE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5TableE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5TraceE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum10StartGroupE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum19StartGroupCollapsedE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum8EndGroupE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5ClearE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum6AssertE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum7TimeEndE, i8** @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum5CountE], align 8

@_ZN12v8_inspector16V8ConsoleMessageC1ENS_15V8MessageOriginEdRKNS_8String16E = hidden unnamed_addr alias void (%"class.v8_inspector::V8ConsoleMessage"*, i32, double, %"class.v8_inspector::String16"*), void (%"class.v8_inspector::V8ConsoleMessage"*, i32, double, %"class.v8_inspector::String16"*)* @_ZN12v8_inspector16V8ConsoleMessageC2ENS_15V8MessageOriginEdRKNS_8String16E
@_ZN12v8_inspector16V8ConsoleMessageD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::V8ConsoleMessage"*), void (%"class.v8_inspector::V8ConsoleMessage"*)* @_ZN12v8_inspector16V8ConsoleMessageD2Ev
@_ZN12v8_inspector23V8ConsoleMessageStorageC1EPNS_15V8InspectorImplEi = hidden unnamed_addr alias void (%"class.v8_inspector::V8ConsoleMessageStorage"*, %"class.v8_inspector::V8InspectorImpl"*, i32), void (%"class.v8_inspector::V8ConsoleMessageStorage"*, %"class.v8_inspector::V8InspectorImpl"*, i32)* @_ZN12v8_inspector23V8ConsoleMessageStorageC2EPNS_15V8InspectorImplEi
@_ZN12v8_inspector23V8ConsoleMessageStorageD1Ev = hidden unnamed_addr alias void (%"class.v8_inspector::V8ConsoleMessageStorage"*), void (%"class.v8_inspector::V8ConsoleMessageStorage"*)* @_ZN12v8_inspector23V8ConsoleMessageStorageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8ConsoleMessageC2ENS_15V8MessageOriginEdRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessage"*, i32, double, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 1
  store double %2, double* %6, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2
  %8 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  %14 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #10
  br label %190

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.v8_inspector::String16"* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #11
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #11
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #12
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = getelementptr i16, i16* %44, i64 %56
  %58 = sub i64 %45, %56
  %59 = getelementptr i16, i16* %17, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %44, i64 %68
  %71 = getelementptr i16, i16* %17, i64 %68
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !2
  %74 = getelementptr i16, i16* %71, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !2
  %77 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = getelementptr i16, i16* %70, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !5, !noalias !2
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %44, i64 %80
  %82 = getelementptr i16, i16* %17, i64 %80
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !2
  %85 = getelementptr i16, i16* %82, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !2
  %88 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = getelementptr i16, i16* %81, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !5, !noalias !2
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %44, i64 %91
  %93 = getelementptr i16, i16* %17, i64 %91
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !2
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !2
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !5, !noalias !2
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %44, i64 %102
  %104 = getelementptr i16, i16* %17, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !2
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !2
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !5, !noalias !2
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !7

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %44, i64 %120
  %123 = getelementptr i16, i16* %17, i64 %120
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !2
  %126 = getelementptr i16, i16* %123, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !2
  %129 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = getelementptr i16, i16* %122, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !5, !noalias !2
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !9

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %57, %135 ]
  %139 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %59, %135 ]
  %141 = add i64 %139, -1
  %142 = and i64 %139, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i16* [ %151, %144 ], [ %138, %137 ]
  %146 = phi i64 [ %150, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %152, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %147, align 2
  store i16 %149, i16* %145, align 2
  %150 = add i64 %146, -1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = getelementptr inbounds i16, i16* %147, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !11

155:                                              ; preds = %144, %137
  %156 = phi i16* [ %138, %137 ], [ %151, %144 ]
  %157 = phi i64 [ %139, %137 ], [ %150, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %152, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i16* [ %187, %160 ], [ %156, %155 ]
  %162 = phi i64 [ %186, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %188, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %161, align 2
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %163, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = getelementptr inbounds i16, i16* %163, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = getelementptr inbounds i16, i16* %163, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = getelementptr inbounds i16, i16* %163, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = getelementptr inbounds i16, i16* %163, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = getelementptr inbounds i16, i16* %163, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = getelementptr inbounds i16, i16* %163, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %162, -8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = getelementptr inbounds i16, i16* %163, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !12

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 1
  %192 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3
  %195 = bitcast %"class.v8_inspector::String16"* %194 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 160, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8ConsoleMessageD2Ev(%"class.v8_inspector::V8ConsoleMessage"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 15
  %3 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.v8_inspector::String16"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 14
  %12 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13
  %21 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr.11"* %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::unique_ptr.11"* %22 to i8*
  %26 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.11"* %27, %22
  br i1 %28, label %48, label %29

29:                                               ; preds = %24, %43
  %30 = phi %"class.std::__1::unique_ptr.11"* [ %31, %43 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.v8::Global"*, %"class.v8::Global"** %32, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %32, align 8
  %34 = icmp eq %"class.v8::Global"* %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %33, i64 0, i32 0, i32 0
  %37 = load %"class.v8::Value"*, %"class.v8::Value"** %36, align 8
  %38 = icmp eq %"class.v8::Value"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.v8::Value"* %37 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %40) #10
  br label %41

41:                                               ; preds = %39, %35
  %42 = bitcast %"class.v8::Global"* %33 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %41, %29
  %44 = icmp eq %"class.std::__1::unique_ptr.11"* %31, %22
  br i1 %44, label %45, label %29

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.9"* %20 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %24
  %49 = phi i8* [ %47, %45 ], [ %25, %24 ]
  store %"class.std::__1::unique_ptr.11"* %22, %"class.std::__1::unique_ptr.11"** %26, align 8
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %19, %48
  %51 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %52 = load %"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8StackTraceImpl"** %51, align 8
  store %"class.v8_inspector::V8StackTraceImpl"* null, %"class.v8_inspector::V8StackTraceImpl"** %51, align 8
  %53 = icmp eq %"class.v8_inspector::V8StackTraceImpl"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.v8_inspector::V8StackTraceImpl"* %52 to void (%"class.v8_inspector::V8StackTraceImpl"*)***
  %56 = load void (%"class.v8_inspector::V8StackTraceImpl"*)**, void (%"class.v8_inspector::V8StackTraceImpl"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::V8StackTraceImpl"*)** %56, i64 8
  %58 = load void (%"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::V8StackTraceImpl"*)** %57, align 8
  tail call void %58(%"class.v8_inspector::V8StackTraceImpl"* nonnull %52) #10
  br label %59

59:                                               ; preds = %50, %54
  %60 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3
  %61 = bitcast %"class.v8_inspector::String16"* %60 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %61, i64 0, i32 1, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = bitcast %"class.v8_inspector::String16"* %60 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %59, %65
  %69 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2
  %70 = bitcast %"class.v8_inspector::String16"* %69 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = bitcast %"class.v8_inspector::String16"* %69 to i8**
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %68, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8ConsoleMessage11setLocationERKNS_8String16EjjNSt3__110unique_ptrINS_16V8StackTraceImplENS4_14default_deleteIS6_EEEEi(%"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::String16"* dereferenceable(32), i32, i32, %"class.v8_inspector::V8StackTraceImpl"*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca [15 x i8], align 8
  %10 = ptrtoint %"class.v8_inspector::V8StackTraceImpl"* %4 to i64
  %11 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #10
  call void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* nonnull sret %7, %"class.v8_inspector::String16"* %1, i64 0, i64 5)
  %12 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #10
  %13 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  %25 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %23 to i64
  %28 = select i1 %24, i64 %26, i64 %27
  %29 = icmp eq i64 %20, %28
  br i1 %29, label %30, label %53

30:                                               ; preds = %6
  %31 = icmp eq i64 %20, 0
  br i1 %31, label %53, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.v8_inspector::String16"* %8 to i16*
  %36 = select i1 %24, i16* %34, i16* %35
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = bitcast %"class.v8_inspector::String16"* %7 to i16*
  %40 = select i1 %16, i16* %38, i16* %39
  br label %41

41:                                               ; preds = %48, %32
  %42 = phi i64 [ %49, %48 ], [ %20, %32 ]
  %43 = phi i16* [ %51, %48 ], [ %36, %32 ]
  %44 = phi i16* [ %50, %48 ], [ %40, %32 ]
  %45 = load i16, i16* %44, align 2
  %46 = load i16, i16* %43, align 2
  %47 = icmp eq i16 %46, %45
  br i1 %47, label %48, label %53

48:                                               ; preds = %41
  %49 = add i64 %42, -1
  %50 = getelementptr inbounds i16, i16* %44, i64 1
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = icmp eq i64 %49, 0
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %48, %6, %30
  %54 = phi i1 [ false, %6 ], [ true, %30 ], [ false, %41 ], [ true, %48 ]
  br i1 %24, label %55, label %59

55:                                               ; preds = %53
  %56 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #12
  %58 = load i8, i8* %14, align 1
  br label %59

59:                                               ; preds = %53, %55
  %60 = phi i8 [ %15, %53 ], [ %58, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #10
  br i1 %54, label %66, label %83

66:                                               ; preds = %65
  %67 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %67)
  %68 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3
  %69 = bitcast %"class.v8_inspector::String16"* %68 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %69, i64 0, i32 1, i32 1
  %71 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 15, i1 false)
  %72 = load i8, i8* %70, align 1
  %73 = icmp slt i8 %72, 0
  %74 = bitcast %"class.v8_inspector::String16"* %68 to i8**
  br i1 %73, label %75, label %77

75:                                               ; preds = %66
  %76 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %66, %75
  store i8* null, i8** %74, align 8
  %78 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast i64* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %67, i64 15, i1 false)
  %80 = bitcast %"class.v8_inspector::V8ConsoleMessage"* %0 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 71
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3, i32 1
  store i64 0, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %67)
  br label %90

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3, i32 0
  %85 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0
  %86 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %84, %"class.std::__1::basic_string"* dereferenceable(24) %85) #10
  %87 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3, i32 1
  store i64 %88, i64* %89, align 8
  br label %90

90:                                               ; preds = %83, %77
  %91 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 4
  store i32 %2, i32* %91, align 8
  %92 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 5
  store i32 %3, i32* %92, align 4
  %93 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 6
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8StackTraceImpl"** %94, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %10, i64* %96, align 8
  %97 = icmp eq %"class.v8_inspector::V8StackTraceImpl"* %95, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %90
  %99 = bitcast %"class.v8_inspector::V8StackTraceImpl"* %95 to void (%"class.v8_inspector::V8StackTraceImpl"*)***
  %100 = load void (%"class.v8_inspector::V8StackTraceImpl"*)**, void (%"class.v8_inspector::V8StackTraceImpl"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::V8StackTraceImpl"*)** %100, i64 8
  %102 = load void (%"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::V8StackTraceImpl"*)** %101, align 8
  call void %102(%"class.v8_inspector::V8StackTraceImpl"* nonnull %95) #10
  br label %103

103:                                              ; preds = %98, %90
  %104 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 7
  store i32 %5, i32* %104, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12v8_inspector8String169substringEmm(%"class.v8_inspector::String16"* noalias sret, %"class.v8_inspector::String16"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1, !noalias !13
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !13
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp ult i64 %14, %2
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %17) #11
  unreachable

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8, !noalias !13
  %21 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %22 = select i1 %10, i16* %20, i16* %21
  %23 = getelementptr inbounds i16, i16* %22, i64 %2
  %24 = sub i64 %14, %2
  %25 = icmp ult i64 %24, %3
  %26 = select i1 %25, i64 %24, i64 %3
  %27 = icmp ugt i64 %26, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #11
  unreachable

30:                                               ; preds = %18
  %31 = icmp ult i64 %26, 11
  br i1 %31, label %45, label %32

32:                                               ; preds = %30
  %33 = add nuw nsw i64 %26, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #11
  unreachable

37:                                               ; preds = %32
  %38 = shl i64 %34, 1
  %39 = tail call i8* @_Znwm(i64 %38) #12
  %40 = bitcast i8* %39 to i16*
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %39, i8** %41, align 8, !alias.scope !13
  %42 = or i64 %34, -9223372036854775808
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %42, i64* %43, align 8, !alias.scope !13
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %44, align 8, !alias.scope !13
  br label %51

45:                                               ; preds = %30
  %46 = trunc i64 %26 to i8
  %47 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %47, i64 0, i32 1, i32 1
  store i8 %46, i8* %48, align 1, !alias.scope !13
  %49 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %50 = icmp eq i64 %26, 0
  br i1 %50, label %198, label %51

51:                                               ; preds = %45, %37
  %52 = phi i16* [ %40, %37 ], [ %49, %45 ]
  %53 = icmp ult i64 %26, 16
  br i1 %53, label %143, label %54

54:                                               ; preds = %51
  %55 = getelementptr i16, i16* %52, i64 %26
  %56 = add i64 %26, %2
  %57 = getelementptr i16, i16* %22, i64 %56
  %58 = icmp ult i16* %52, %57
  %59 = icmp ult i16* %23, %55
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %54
  %62 = and i64 %26, -16
  %63 = getelementptr i16, i16* %52, i64 %62
  %64 = sub i64 %26, %62
  %65 = getelementptr i16, i16* %23, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %52, i64 %74
  %77 = getelementptr i16, i16* %23, i64 %74
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !16
  %80 = getelementptr i16, i16* %77, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !16
  %83 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !19, !noalias !16
  %84 = getelementptr i16, i16* %76, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !19, !noalias !16
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %52, i64 %86
  %88 = getelementptr i16, i16* %23, i64 %86
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !16
  %91 = getelementptr i16, i16* %88, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !16
  %94 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !19, !noalias !16
  %95 = getelementptr i16, i16* %87, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !19, !noalias !16
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %52, i64 %97
  %99 = getelementptr i16, i16* %23, i64 %97
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !16
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !16
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !19, !noalias !16
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !19, !noalias !16
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %52, i64 %108
  %110 = getelementptr i16, i16* %23, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !16
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !16
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !19, !noalias !16
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !19, !noalias !16
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !21

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %52, i64 %126
  %129 = getelementptr i16, i16* %23, i64 %126
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !16
  %132 = getelementptr i16, i16* %129, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !16
  %135 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !19, !noalias !16
  %136 = getelementptr i16, i16* %128, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !19, !noalias !16
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !22

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %26, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %54, %51
  %144 = phi i16* [ %52, %54 ], [ %52, %51 ], [ %63, %141 ]
  %145 = phi i64 [ %26, %54 ], [ %26, %51 ], [ %64, %141 ]
  %146 = phi i16* [ %23, %54 ], [ %23, %51 ], [ %65, %141 ]
  %147 = add i64 %145, -1
  %148 = and i64 %145, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i16* [ %157, %150 ], [ %144, %143 ]
  %152 = phi i64 [ %156, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %158, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %153, align 2
  store i16 %155, i16* %151, align 2
  %156 = add i64 %152, -1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = getelementptr inbounds i16, i16* %153, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !23

161:                                              ; preds = %150, %143
  %162 = phi i16* [ %144, %143 ], [ %157, %150 ]
  %163 = phi i64 [ %145, %143 ], [ %156, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %158, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i16* [ %193, %166 ], [ %162, %161 ]
  %168 = phi i64 [ %192, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %194, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %167, align 2
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = getelementptr inbounds i16, i16* %169, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = getelementptr inbounds i16, i16* %169, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = getelementptr inbounds i16, i16* %169, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = getelementptr inbounds i16, i16* %169, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = getelementptr inbounds i16, i16* %169, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = getelementptr inbounds i16, i16* %169, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = getelementptr inbounds i16, i16* %169, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %168, -8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = getelementptr inbounds i16, i16* %169, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !24

196:                                              ; preds = %161, %166, %141
  %197 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  br label %198

198:                                              ; preds = %196, %45
  %199 = phi %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* [ %197, %196 ], [ %47, %45 ]
  %200 = phi i16* [ %52, %196 ], [ %49, %45 ]
  %201 = getelementptr inbounds i16, i16* %200, i64 %26
  store i16 0, i16* %201, align 2
  call void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %199, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %198
  %206 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %207 = load i8*, i8** %206, align 8
  call void @_ZdlPv(i8* %207) #12
  br label %208

208:                                              ; preds = %198, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

declare void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector16V8ConsoleMessage16reportToFrontendEPNS_8protocol7Console8FrontendE(%"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::protocol::Console::Frontend"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = load i8*, i8** @_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum3LogE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* %10) #10
  %11 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %62 [
    i32 1, label %13
    i32 15, label %13
    i32 14, label %13
    i32 3, label %23
    i32 13, label %23
    i32 4, label %33
    i32 2, label %43
  ]

13:                                               ; preds = %2, %2, %2
  %14 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #10
  %15 = load i8*, i8** @_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum5DebugE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %4, i8* %15) #10
  %16 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %53

20:                                               ; preds = %13
  %21 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #12
  br label %53

23:                                               ; preds = %2, %2
  %24 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  %25 = load i8*, i8** @_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum5ErrorE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* %25) #10
  %26 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %53

30:                                               ; preds = %23
  %31 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #12
  br label %53

33:                                               ; preds = %2
  %34 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #10
  %35 = load i8*, i8** @_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum7WarningE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* %35) #10
  %36 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %53

40:                                               ; preds = %33
  %41 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #12
  br label %53

43:                                               ; preds = %2
  %44 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #10
  %45 = load i8*, i8** @_ZN12v8_inspector8protocol7Console14ConsoleMessage9LevelEnum4InfoE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %45) #10
  %46 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %43, %50, %33, %40, %23, %30, %13, %20
  %54 = phi i8* [ %14, %20 ], [ %14, %13 ], [ %24, %30 ], [ %24, %23 ], [ %34, %40 ], [ %34, %33 ], [ %44, %50 ], [ %44, %43 ]
  %55 = phi %"class.v8_inspector::String16"* [ %4, %20 ], [ %4, %13 ], [ %5, %30 ], [ %5, %23 ], [ %6, %40 ], [ %6, %33 ], [ %7, %50 ], [ %7, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %54, i64 24, i1 false) #10
  %56 = bitcast %"class.v8_inspector::String16"* %55 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %56, i64 0, i32 1, i32 1
  store i8 0, i8* %57, align 1
  %58 = bitcast %"class.v8_inspector::String16"* %55 to i16*
  store i16 0, i16* %58, align 8
  %59 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %55, i64 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  store i64 %60, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #10
  br label %62

62:                                               ; preds = %53, %2
  %63 = call i8* @_Znwm(i64 160) #12
  %64 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Console14ConsoleMessageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 8
  %66 = getelementptr inbounds i8, i8* %63, i64 112
  %67 = getelementptr inbounds i8, i8* %63, i64 148
  %68 = bitcast i8* %67 to i32*
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %63, i64 152
  store i8 0, i8* %69, align 4
  %70 = getelementptr inbounds i8, i8* %63, i64 156
  %71 = bitcast i8* %70 to i32*
  store i32 0, i32* %71, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 97, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 33, i1 false) #10
  %72 = bitcast i8* %63 to %"class.v8_inspector::protocol::Console::ConsoleMessage"*
  %73 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %73) #10
  %74 = load i8*, i8** @_ZN12v8_inspector8protocol7Console14ConsoleMessage10SourceEnum10ConsoleApiE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* %74) #10
  %75 = bitcast i8* %65 to %"class.std::__1::basic_string"*
  %76 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %76) #10
  %78 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds i8, i8* %63, i64 32
  %81 = bitcast i8* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds i8, i8* %63, i64 40
  %83 = bitcast i8* %82 to %"class.std::__1::basic_string"*
  %84 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %85 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %84) #10
  %86 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds i8, i8* %63, i64 64
  %89 = bitcast i8* %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %63, i64 72
  %91 = bitcast i8* %90 to %"class.std::__1::basic_string"*
  %92 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 0
  %93 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %91, %"class.std::__1::basic_string"* dereferenceable(24) %92) #10
  %94 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds i8, i8* %63, i64 96
  %97 = bitcast i8* %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %62
  %103 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %62, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %73) #10
  %106 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %68, align 4
  %108 = getelementptr inbounds i8, i8* %63, i64 144
  store i8 1, i8* %108, align 4
  %109 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 5
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %71, align 4
  store i8 1, i8* %69, align 4
  %111 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3
  call void @_ZN12v8_inspector8protocol7Console14ConsoleMessage6setUrlERKNS_8String16E(%"class.v8_inspector::protocol::Console::ConsoleMessage"* nonnull %72, %"class.v8_inspector::String16"* dereferenceable(32) %111)
  call void @_ZN12v8_inspector8protocol7Console8Frontend12messageAddedENSt3__110unique_ptrINS1_14ConsoleMessageENS3_14default_deleteIS5_EEEE(%"class.v8_inspector::protocol::Console::Frontend"* %1, %"class.v8_inspector::protocol::Console::ConsoleMessage"* nonnull %72) #10
  %112 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %105
  %117 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %118 = load i8*, i8** %117, align 8
  call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %105, %116
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Console14ConsoleMessage6setUrlERKNS_8String16E(%"class.v8_inspector::protocol::Console::ConsoleMessage"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #11
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #12
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !25
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !25
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !28, !noalias !25
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !28, !noalias !25
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !25
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !25
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !28, !noalias !25
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !28, !noalias !25
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !25
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !25
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !28, !noalias !25
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !28, !noalias !25
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !25
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !25
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !28, !noalias !25
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !28, !noalias !25
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !30

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !25
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !25
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !28, !noalias !25
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !28, !noalias !25
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !31

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !32

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !33

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #10
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Console::ConsoleMessage", %"class.v8_inspector::protocol::Console::ConsoleMessage"* %0, i64 0, i32 4, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare void @_ZN12v8_inspector8protocol7Console8Frontend12messageAddedENSt3__110unique_ptrINS1_14ConsoleMessageENS3_14default_deleteIS5_EEEE(%"class.v8_inspector::protocol::Console::Frontend"*, %"class.v8_inspector::protocol::Console::ConsoleMessage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.35"* @_ZNK12v8_inspector16V8ConsoleMessage13wrapArgumentsEPNS_22V8InspectorSessionImplEb(%"class.v8_inspector::V8ConsoleMessage"* nocapture readonly, %"class.v8_inspector::V8InspectorSessionImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.std::__1::unique_ptr.37", align 8
  %7 = alloca %"class.std::__1::unique_ptr.37", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %1, i64 0, i32 4
  %10 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13
  %16 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13, i32 0, i32 1
  %17 = bitcast %"class.std::__1::unique_ptr.11"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.9"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp ne i64 %18, %20
  %22 = icmp ne i32 %14, 0
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %317

24:                                               ; preds = %3
  %25 = tail call %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEii(%"class.v8_inspector::V8InspectorImpl"* %10, i32 %12, i32 %14) #10
  %26 = icmp eq %"class.v8_inspector::InspectedContext"* %25, null
  br i1 %26, label %317, label %27

27:                                               ; preds = %24
  %28 = tail call %"class.v8::Isolate"* @_ZNK12v8_inspector16InspectedContext7isolateEv(%"class.v8_inspector::InspectedContext"* nonnull %25) #10
  %29 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #10
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %28) #10
  %30 = call %"class.v8::Context"* @_ZNK12v8_inspector16InspectedContext7contextEv(%"class.v8_inspector::InspectedContext"* nonnull %25) #10
  %31 = call i8* @_Znwm(i64 24) #12
  %32 = bitcast i8* %31 to %"class.std::__1::vector.35"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #10
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %15, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.v8::Global"*, %"class.v8::Global"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.v8::Value"*, %"class.v8::Value"** %38, align 8
  %40 = icmp eq %"class.v8::Value"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %27
  %42 = bitcast %"class.v8::Value"* %39 to i64*
  %43 = bitcast %"class.v8::Isolate"* %28 to %"class.v8::internal::Isolate"*
  %44 = load i64, i64* %42, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %43, i64 %44) #10
  %46 = bitcast i64* %45 to %"class.v8::Value"*
  br label %47

47:                                               ; preds = %27, %41
  %48 = phi %"class.v8::Value"* [ %46, %41 ], [ null, %27 ]
  %49 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %48) #10
  br i1 %49, label %50, label %178

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 9
  %52 = load i32, i32* %51, align 8
  %53 = icmp ne i32 %52, 7
  %54 = xor i1 %2, true
  %55 = or i1 %53, %54
  br i1 %55, label %178, label %56

56:                                               ; preds = %50
  %57 = load i64, i64* %17, align 8
  %58 = load i64, i64* %19, align 8
  %59 = sub i64 %57, %58
  %60 = ashr exact i64 %59, 3
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %62, label %105

62:                                               ; preds = %56
  %63 = inttoptr i64 %58 to %"class.std::__1::unique_ptr.11"*
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %63, i64 1, i32 0, i32 0, i32 0
  %65 = load %"class.v8::Global"*, %"class.v8::Global"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.v8::Value"*, %"class.v8::Value"** %66, align 8
  %68 = icmp eq %"class.v8::Value"* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.v8::Value"* %67 to i64*
  %71 = bitcast %"class.v8::Isolate"* %28 to %"class.v8::internal::Isolate"*
  %72 = load i64, i64* %70, align 8
  %73 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %71, i64 %72) #10
  %74 = bitcast i64* %73 to %"class.v8::Value"*
  br label %75

75:                                               ; preds = %62, %69
  %76 = phi i64* [ %73, %69 ], [ null, %62 ]
  %77 = phi %"class.v8::Value"* [ %74, %69 ], [ null, %62 ]
  %78 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %77) #10
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = ptrtoint %"class.v8::Value"* %77 to i64
  br label %105

81:                                               ; preds = %75
  %82 = load i64, i64* %76, align 8
  %83 = and i64 %82, 3
  %84 = icmp eq i64 %83, 1
  br i1 %84, label %85, label %105

85:                                               ; preds = %81
  %86 = add i64 %82, -1
  %87 = inttoptr i64 %86 to i32*
  %88 = load i32, i32* %87, align 4
  %89 = and i64 %82, -4294967296
  %90 = zext i32 %88 to i64
  %91 = or i64 %89, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load i16, i16* %93, align 2
  %95 = icmp ult i16 %94, 64
  br i1 %95, label %96, label %105

96:                                               ; preds = %85
  %97 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %97) #10
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %28) #10
  %98 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %28, i32 0) #10
  %99 = bitcast %"class.v8::Array"* %98 to %"class.v8::Object"*
  %100 = call i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %99, %"class.v8::Context"* %30, i32 0, %"class.v8::Value"* %77) #10
  %101 = trunc i16 %100 to i8
  %102 = icmp eq i8 %101, 0
  %103 = ptrtoint %"class.v8::Array"* %98 to i64
  %104 = select i1 %102, i64 0, i64 %103
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %97) #10
  br label %105

105:                                              ; preds = %81, %79, %96, %85, %56
  %106 = phi i64 [ 0, %56 ], [ %80, %79 ], [ %104, %96 ], [ 0, %85 ], [ 0, %81 ]
  %107 = bitcast %"class.std::__1::unique_ptr.37"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10
  %108 = bitcast %"class.v8::Value"* %48 to %"class.v8::Object"*
  %109 = inttoptr i64 %106 to %"class.v8::Array"*
  %110 = call %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZN12v8_inspector22V8InspectorSessionImpl9wrapTableEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEENS1_10MaybeLocalINS1_5ArrayEEE(%"class.v8_inspector::V8InspectorSessionImpl"* %1, %"class.v8::Context"* %30, %"class.v8::Object"* %108, %"class.v8::Array"* %109) #10
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* %110, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %111, align 8
  %112 = call %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEii(%"class.v8_inspector::V8InspectorImpl"* %10, i32 %12, i32 %14) #10
  %113 = icmp eq %"class.v8_inspector::InspectedContext"* %112, null
  %114 = ptrtoint %"class.v8_inspector::protocol::Runtime::RemoteObject"* %110 to i64
  br i1 %113, label %115, label %123

115:                                              ; preds = %105
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %111, align 8
  %116 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %110, null
  br i1 %116, label %122, label %117

117:                                              ; preds = %115
  %118 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %110 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %119 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %119, i64 2
  %121 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %120, align 8
  call void %121(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %110) #10
  br label %122

122:                                              ; preds = %117, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  br label %284

123:                                              ; preds = %105
  %124 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %110, null
  br i1 %124, label %139, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds i8, i8* %31, i64 8
  %127 = bitcast i8* %126 to %"class.std::__1::unique_ptr.37"**
  %128 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %127, align 8
  %129 = getelementptr inbounds i8, i8* %31, i64 16
  %130 = bitcast i8* %129 to %"class.std::__1::unique_ptr.37"**
  %131 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %130, align 8
  %132 = icmp ult %"class.std::__1::unique_ptr.37"* %128, %131
  br i1 %132, label %133, label %138

133:                                              ; preds = %125
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %111, align 8
  %134 = bitcast %"class.std::__1::unique_ptr.37"* %128 to i64*
  store i64 %114, i64* %134, align 8
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %128, i64 1
  %136 = ptrtoint %"class.std::__1::unique_ptr.37"* %135 to i64
  %137 = bitcast i8* %126 to i64*
  store i64 %136, i64* %137, align 8
  br label %168

138:                                              ; preds = %125
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12RemoteObjectENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.35"* nonnull %32, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %6) #10
  br label %168

139:                                              ; preds = %123
  %140 = bitcast i8* %31 to %"class.std::__1::unique_ptr.37"**
  %141 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %140, align 8
  %142 = icmp eq %"class.std::__1::unique_ptr.37"* %141, null
  br i1 %142, label %167, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.std::__1::unique_ptr.37"* %141 to i8*
  %145 = getelementptr inbounds i8, i8* %31, i64 8
  %146 = bitcast i8* %145 to %"class.std::__1::unique_ptr.37"**
  %147 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %146, align 8
  %148 = icmp eq %"class.std::__1::unique_ptr.37"* %147, %141
  br i1 %148, label %165, label %149

149:                                              ; preds = %143, %160
  %150 = phi %"class.std::__1::unique_ptr.37"* [ %151, %160 ], [ %147, %143 ]
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %150, i64 -1
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %151, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %152, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %152, align 8
  %154 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %149
  %156 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %153 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %157 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %157, i64 2
  %159 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %158, align 8
  call void %159(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %153) #10
  br label %160

160:                                              ; preds = %155, %149
  %161 = icmp eq %"class.std::__1::unique_ptr.37"* %151, %141
  br i1 %161, label %162, label %149

162:                                              ; preds = %160
  %163 = bitcast i8* %31 to i8**
  %164 = load i8*, i8** %163, align 8
  br label %165

165:                                              ; preds = %162, %143
  %166 = phi i8* [ %164, %162 ], [ %144, %143 ]
  store %"class.std::__1::unique_ptr.37"* %141, %"class.std::__1::unique_ptr.37"** %146, align 8
  call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %139, %165
  call void @_ZdlPv(i8* nonnull %31) #12
  br label %168

168:                                              ; preds = %138, %133, %167
  %169 = phi i64 [ 0, %167 ], [ %33, %133 ], [ %33, %138 ]
  %170 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %111, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %111, align 8
  %171 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %170, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %168
  %173 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %170 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %174 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %174, i64 2
  %176 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %175, align 8
  call void %176(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %170) #10
  br label %177

177:                                              ; preds = %168, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  br label %315

178:                                              ; preds = %50, %47
  %179 = load i64, i64* %17, align 8
  %180 = load i64, i64* %19, align 8
  %181 = icmp eq i64 %179, %180
  br i1 %181, label %315, label %182

182:                                              ; preds = %178
  %183 = bitcast %"class.std::__1::unique_ptr.37"* %7 to i8*
  %184 = bitcast %"class.v8::Isolate"* %28 to %"class.v8::internal::Isolate"*
  %185 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %7, i64 0, i32 0, i32 0, i32 0
  %187 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %187, i64 0, i32 1, i32 1
  %189 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  br label %190

190:                                              ; preds = %182, %275
  %191 = phi i64 [ %180, %182 ], [ %278, %275 ]
  %192 = phi i64 [ 0, %182 ], [ %276, %275 ]
  %193 = phi i64 [ %33, %182 ], [ %265, %275 ]
  %194 = inttoptr i64 %191 to %"class.std::__1::unique_ptr.11"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #10
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %194, i64 %192, i32 0, i32 0, i32 0
  %196 = load %"class.v8::Global"*, %"class.v8::Global"** %195, align 8
  %197 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %196, i64 0, i32 0, i32 0
  %198 = load %"class.v8::Value"*, %"class.v8::Value"** %197, align 8
  %199 = icmp eq %"class.v8::Value"* %198, null
  br i1 %199, label %205, label %200

200:                                              ; preds = %190
  %201 = bitcast %"class.v8::Value"* %198 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %184, i64 %202) #10
  %204 = bitcast i64* %203 to %"class.v8::Value"*
  br label %205

205:                                              ; preds = %190, %200
  %206 = phi %"class.v8::Value"* [ %204, %200 ], [ null, %190 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %185) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #10
  %207 = call %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZN12v8_inspector22V8InspectorSessionImpl10wrapObjectEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_8String16Eb(%"class.v8_inspector::V8InspectorSessionImpl"* %1, %"class.v8::Context"* %30, %"class.v8::Value"* %206, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8, i1 zeroext %2) #10
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* %207, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %186, align 8
  %208 = load i8, i8* %188, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %205
  %211 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %205, %210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %185) #10
  %213 = call %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEii(%"class.v8_inspector::V8InspectorImpl"* %10, i32 %12, i32 %14) #10
  %214 = icmp eq %"class.v8_inspector::InspectedContext"* %213, null
  br i1 %214, label %264, label %215

215:                                              ; preds = %212
  %216 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %186, align 8
  %217 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %216, null
  %218 = inttoptr i64 %193 to %"class.std::__1::vector.35"*
  %219 = ptrtoint %"class.v8_inspector::protocol::Runtime::RemoteObject"* %216 to i64
  br i1 %217, label %220, label %252

220:                                              ; preds = %215
  %221 = icmp eq i64 %193, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %220
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #10
  br label %315

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %218, i64 0, i32 0, i32 0
  %225 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %224, align 8
  %226 = icmp eq %"class.std::__1::unique_ptr.37"* %225, null
  br i1 %226, label %250, label %227

227:                                              ; preds = %223
  %228 = bitcast %"class.std::__1::unique_ptr.37"* %225 to i8*
  %229 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %218, i64 0, i32 0, i32 1
  %230 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %229, align 8
  %231 = icmp eq %"class.std::__1::unique_ptr.37"* %230, %225
  br i1 %231, label %248, label %232

232:                                              ; preds = %227, %243
  %233 = phi %"class.std::__1::unique_ptr.37"* [ %234, %243 ], [ %230, %227 ]
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %233, i64 -1
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %234, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %235, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %235, align 8
  %237 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %232
  %239 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %236 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %240 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %240, i64 2
  %242 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %241, align 8
  call void %242(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %236) #10
  br label %243

243:                                              ; preds = %238, %232
  %244 = icmp eq %"class.std::__1::unique_ptr.37"* %234, %225
  br i1 %244, label %245, label %232

245:                                              ; preds = %243
  %246 = inttoptr i64 %193 to i8**
  %247 = load i8*, i8** %246, align 8
  br label %248

248:                                              ; preds = %245, %227
  %249 = phi i8* [ %247, %245 ], [ %228, %227 ]
  store %"class.std::__1::unique_ptr.37"* %225, %"class.std::__1::unique_ptr.37"** %229, align 8
  call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %248, %223
  %251 = inttoptr i64 %193 to i8*
  call void @_ZdlPv(i8* %251) #12
  br label %264

252:                                              ; preds = %215
  %253 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %218, i64 0, i32 0, i32 1
  %254 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %253, align 8
  %255 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %218, i64 0, i32 0, i32 2, i32 0, i32 0
  %256 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %255, align 8
  %257 = icmp ult %"class.std::__1::unique_ptr.37"* %254, %256
  br i1 %257, label %258, label %263

258:                                              ; preds = %252
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %186, align 8
  %259 = bitcast %"class.std::__1::unique_ptr.37"* %254 to i64*
  store i64 %219, i64* %259, align 8
  %260 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %254, i64 1
  %261 = ptrtoint %"class.std::__1::unique_ptr.37"* %260 to i64
  %262 = bitcast %"class.std::__1::unique_ptr.37"** %253 to i64*
  store i64 %261, i64* %262, align 8
  br label %264

263:                                              ; preds = %252
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12RemoteObjectENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.35"* %218, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %7) #10
  br label %264

264:                                              ; preds = %263, %258, %250, %212
  %265 = phi i64 [ %193, %263 ], [ %193, %258 ], [ 0, %250 ], [ %193, %212 ]
  %266 = phi i32 [ 0, %263 ], [ 0, %258 ], [ 2, %250 ], [ 1, %212 ]
  %267 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %186, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %186, align 8
  %268 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %267, null
  br i1 %268, label %274, label %269

269:                                              ; preds = %264
  %270 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %267 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %271 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %271, i64 2
  %273 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %272, align 8
  call void %273(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %267) #10
  br label %274

274:                                              ; preds = %264, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #10
  switch i32 %266, label %282 [
    i32 0, label %275
    i32 2, label %315
  ]

275:                                              ; preds = %274
  %276 = add nuw i64 %192, 1
  %277 = load i64, i64* %17, align 8
  %278 = load i64, i64* %19, align 8
  %279 = sub i64 %277, %278
  %280 = ashr exact i64 %279, 3
  %281 = icmp ult i64 %276, %280
  br i1 %281, label %190, label %315

282:                                              ; preds = %274
  %283 = icmp eq i64 %265, 0
  br i1 %283, label %315, label %284

284:                                              ; preds = %122, %282
  %285 = phi i64 [ %33, %122 ], [ %265, %282 ]
  %286 = inttoptr i64 %285 to %"class.std::__1::vector.35"*
  %287 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %286, i64 0, i32 0, i32 0
  %288 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %287, align 8
  %289 = icmp eq %"class.std::__1::unique_ptr.37"* %288, null
  br i1 %289, label %313, label %290

290:                                              ; preds = %284
  %291 = bitcast %"class.std::__1::unique_ptr.37"* %288 to i8*
  %292 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %286, i64 0, i32 0, i32 1
  %293 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %292, align 8
  %294 = icmp eq %"class.std::__1::unique_ptr.37"* %293, %288
  br i1 %294, label %311, label %295

295:                                              ; preds = %290, %306
  %296 = phi %"class.std::__1::unique_ptr.37"* [ %297, %306 ], [ %293, %290 ]
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %296, i64 -1
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %297, i64 0, i32 0, i32 0, i32 0
  %299 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %298, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %298, align 8
  %300 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %299, null
  br i1 %300, label %306, label %301

301:                                              ; preds = %295
  %302 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %299 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %303 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %303, i64 2
  %305 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %304, align 8
  call void %305(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %299) #10
  br label %306

306:                                              ; preds = %301, %295
  %307 = icmp eq %"class.std::__1::unique_ptr.37"* %297, %288
  br i1 %307, label %308, label %295

308:                                              ; preds = %306
  %309 = inttoptr i64 %285 to i8**
  %310 = load i8*, i8** %309, align 8
  br label %311

311:                                              ; preds = %308, %290
  %312 = phi i8* [ %310, %308 ], [ %291, %290 ]
  store %"class.std::__1::unique_ptr.37"* %288, %"class.std::__1::unique_ptr.37"** %292, align 8
  call void @_ZdlPv(i8* %312) #12
  br label %313

313:                                              ; preds = %311, %284
  %314 = inttoptr i64 %285 to i8*
  call void @_ZdlPv(i8* %314) #12
  br label %315

315:                                              ; preds = %275, %274, %178, %222, %177, %282, %313
  %316 = phi i64 [ 0, %282 ], [ 0, %313 ], [ %169, %177 ], [ 0, %222 ], [ %33, %178 ], [ %265, %274 ], [ %265, %275 ]
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #10
  br label %317

317:                                              ; preds = %24, %3, %315
  %318 = phi i64 [ %316, %315 ], [ 0, %3 ], [ 0, %24 ]
  %319 = inttoptr i64 %318 to %"class.std::__1::vector.35"*
  ret %"class.std::__1::vector.35"* %319
}

declare %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEii(%"class.v8_inspector::V8InspectorImpl"*, i32, i32) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZNK12v8_inspector16InspectedContext7isolateEv(%"class.v8_inspector::InspectedContext"*) local_unnamed_addr #2

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Context"* @_ZNK12v8_inspector16InspectedContext7contextEv(%"class.v8_inspector::InspectedContext"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare i16 @_ZN2v86Object3SetENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZN12v8_inspector22V8InspectorSessionImpl9wrapTableEN2v85LocalINS1_7ContextEEENS2_INS1_6ObjectEEENS1_10MaybeLocalINS1_5ArrayEEE(%"class.v8_inspector::V8InspectorSessionImpl"*, %"class.v8::Context"*, %"class.v8::Object"*, %"class.v8::Array"*) local_unnamed_addr #2

declare %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZN12v8_inspector22V8InspectorSessionImpl10wrapObjectEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_8String16Eb(%"class.v8_inspector::V8InspectorSessionImpl"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::String16"* dereferenceable(32), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12v8_inspector16V8ConsoleMessage16reportToFrontendEPNS_8protocol7Runtime8FrontendEPNS_22V8InspectorSessionImplEb(%"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::protocol::Runtime::Frontend"*, %"class.v8_inspector::V8InspectorSessionImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.std::__1::unique_ptr.37", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_crdtp::detail::ValueMaybe", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = alloca %"class.v8_crdtp::detail::PtrMaybe.603", align 8
  %12 = alloca %"class.v8_crdtp::detail::ValueMaybe", align 8
  %13 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %2, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %2, i64 0, i32 4
  %16 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %555 [
    i32 1, label %19
    i32 2, label %139
    i32 0, label %143
  ]

19:                                               ; preds = %4
  %20 = tail call %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZNK12v8_inspector16V8ConsoleMessage13wrapExceptionEPNS_22V8InspectorSessionImplEb(%"class.v8_inspector::V8ConsoleMessage"* %0, %"class.v8_inspector::V8InspectorSessionImpl"* %2, i1 zeroext %3)
  %21 = ptrtoint %"class.v8_inspector::protocol::Runtime::RemoteObject"* %20 to i64
  %22 = tail call zeroext i1 @_ZN12v8_inspector15V8InspectorImpl24hasConsoleMessageStorageEi(%"class.v8_inspector::V8InspectorImpl"* %16, i32 %14) #10
  br i1 %22, label %23, label %130

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 160) #12
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime16ExceptionDetailsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 16
  %27 = getelementptr inbounds i8, i8* %24, i64 64
  %28 = getelementptr inbounds i8, i8* %24, i64 104
  %29 = getelementptr inbounds i8, i8* %24, i64 156
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %24, i64 8
  %32 = bitcast i8* %31 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 41, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 49, i1 false) #10
  %33 = bitcast i8* %24 to %"class.v8_inspector::protocol::Runtime::ExceptionDetails"*
  %34 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 10
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %32, align 8
  %36 = icmp ne %"class.v8_inspector::protocol::Runtime::RemoteObject"* %20, null
  %37 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2
  %38 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 14
  %39 = select i1 %36, %"class.v8_inspector::String16"* %37, %"class.v8_inspector::String16"* %38
  %40 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %41 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %39, i64 0, i32 0
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %40, %"class.std::__1::basic_string"* dereferenceable(24) %41) #10
  %43 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %39, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %24, i64 40
  %46 = bitcast i8* %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  %50 = add i32 %48, -1
  %51 = select i1 %49, i32 0, i32 %50
  %52 = getelementptr inbounds i8, i8* %24, i64 48
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = add i32 %55, -1
  %58 = select i1 %56, i32 0, i32 %57
  %59 = getelementptr inbounds i8, i8* %24, i64 52
  %60 = bitcast i8* %59 to i32*
  store i32 %58, i32* %60, align 4
  %61 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 7
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %23
  %65 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  call void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* nonnull sret %5, i32 %62) #10
  call void @_ZN12v8_inspector8protocol7Runtime16ExceptionDetails11setScriptIdERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ExceptionDetails"* nonnull %33, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5)
  %66 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %64, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  br label %74

74:                                               ; preds = %23, %73
  %75 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3
  %76 = bitcast %"class.v8_inspector::String16"* %75 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  br label %85

83:                                               ; preds = %74
  %84 = zext i8 %78 to i64
  br label %85

85:                                               ; preds = %80, %83
  %86 = phi i64 [ %82, %80 ], [ %84, %83 ]
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  call void @_ZN12v8_inspector8protocol7Runtime16ExceptionDetails6setUrlERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ExceptionDetails"* nonnull %33, %"class.v8_inspector::String16"* dereferenceable(32) %75)
  br label %89

89:                                               ; preds = %88, %85
  %90 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %91 = load %"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8StackTraceImpl"** %90, align 8
  %92 = icmp eq %"class.v8_inspector::V8StackTraceImpl"* %91, null
  br i1 %92, label %108, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::V8Debugger"** %94, align 8
  %96 = call %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerE(%"class.v8_inspector::V8StackTraceImpl"* nonnull %91, %"class.v8_inspector::V8Debugger"* %95) #10
  %97 = ptrtoint %"class.v8_inspector::protocol::Runtime::StackTrace"* %96 to i64
  %98 = getelementptr inbounds i8, i8* %24, i64 136
  %99 = bitcast i8* %98 to %"class.v8_inspector::protocol::Runtime::StackTrace"**
  %100 = load %"class.v8_inspector::protocol::Runtime::StackTrace"*, %"class.v8_inspector::protocol::Runtime::StackTrace"** %99, align 8
  %101 = bitcast i8* %98 to i64*
  store i64 %97, i64* %101, align 8
  %102 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTrace"* %100, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %93
  %104 = bitcast %"class.v8_inspector::protocol::Runtime::StackTrace"* %100 to void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)***
  %105 = load void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)** %105, i64 2
  %107 = load void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)** %106, align 8
  call void %107(%"class.v8_inspector::protocol::Runtime::StackTrace"* nonnull %100) #10
  br label %108

108:                                              ; preds = %89, %103, %93
  %109 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 8
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %108
  store i32 %110, i32* %30, align 4
  %113 = getelementptr inbounds i8, i8* %24, i64 152
  store i8 1, i8* %113, align 4
  br label %114

114:                                              ; preds = %108, %112
  br i1 %36, label %115, label %126

115:                                              ; preds = %114
  %116 = getelementptr inbounds i8, i8* %24, i64 144
  %117 = bitcast i8* %116 to %"class.v8_inspector::protocol::Runtime::RemoteObject"**
  %118 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %117, align 8
  %119 = bitcast i8* %116 to i64*
  store i64 %21, i64* %119, align 8
  %120 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %118, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %115
  %122 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %118 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %123 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %123, i64 2
  %125 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %124, align 8
  call void %125(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %118) #10
  br label %126

126:                                              ; preds = %114, %115, %121
  %127 = phi i64 [ %21, %114 ], [ 0, %115 ], [ 0, %121 ]
  %128 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 1
  %129 = load double, double* %128, align 8
  call void @_ZN12v8_inspector8protocol7Runtime8Frontend15exceptionThrownEdNSt3__110unique_ptrINS1_16ExceptionDetailsENS3_14default_deleteIS5_EEEE(%"class.v8_inspector::protocol::Runtime::Frontend"* %1, double %129, %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* nonnull %33) #10
  br label %130

130:                                              ; preds = %19, %126
  %131 = phi i64 [ %127, %126 ], [ %21, %19 ]
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %556, label %133

133:                                              ; preds = %130
  %134 = inttoptr i64 %131 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  %135 = inttoptr i64 %131 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %136 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %136, i64 2
  %138 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %137, align 8
  call void %138(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %134) #10
  br label %556

139:                                              ; preds = %4
  %140 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2
  %141 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 11
  %142 = load i32, i32* %141, align 8
  tail call void @_ZN12v8_inspector8protocol7Runtime8Frontend16exceptionRevokedERKNS_8String16Ei(%"class.v8_inspector::protocol::Runtime::Frontend"* %1, %"class.v8_inspector::String16"* dereferenceable(32) %140, i32 %142) #10
  br label %556

143:                                              ; preds = %4
  %144 = tail call %"class.std::__1::vector.35"* @_ZNK12v8_inspector16V8ConsoleMessage13wrapArgumentsEPNS_22V8InspectorSessionImplEb(%"class.v8_inspector::V8ConsoleMessage"* %0, %"class.v8_inspector::V8InspectorSessionImpl"* %2, i1 zeroext %3)
  %145 = tail call zeroext i1 @_ZN12v8_inspector15V8InspectorImpl24hasConsoleMessageStorageEi(%"class.v8_inspector::V8InspectorImpl"* %16, i32 %14) #10
  br i1 %145, label %146, label %524

146:                                              ; preds = %143
  %147 = ptrtoint %"class.std::__1::vector.35"* %144 to i64
  %148 = icmp eq %"class.std::__1::vector.35"* %144, null
  br i1 %148, label %149, label %235

149:                                              ; preds = %146
  %150 = tail call i8* @_Znwm(i64 24) #12
  %151 = bitcast i8* %150 to %"class.std::__1::vector.35"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 24, i1 false) #10
  %152 = ptrtoint i8* %150 to i64
  %153 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2
  %154 = bitcast %"class.v8_inspector::String16"* %153 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %154, i64 0, i32 1, i32 1
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8
  br label %163

161:                                              ; preds = %149
  %162 = zext i8 %156 to i64
  br label %163

163:                                              ; preds = %158, %161
  %164 = phi i64 [ %160, %158 ], [ %162, %161 ]
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %235, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.std::__1::unique_ptr.37"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #10
  %168 = tail call i8* @_Znwm(i64 272) #12
  %169 = bitcast i8* %168 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN12v8_inspector8protocol7Runtime12RemoteObjectE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %169, align 8
  %170 = getelementptr inbounds i8, i8* %168, i64 16
  %171 = getelementptr inbounds i8, i8* %168, i64 56
  %172 = getelementptr inbounds i8, i8* %168, i64 96
  %173 = getelementptr inbounds i8, i8* %168, i64 144
  %174 = getelementptr inbounds i8, i8* %168, i64 184
  %175 = getelementptr inbounds i8, i8* %168, i64 224
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %170, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 41, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %173, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 33, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 48, i1 false) #10
  %176 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %176) #10
  %177 = load i8*, i8** @_ZN12v8_inspector8protocol7Runtime12RemoteObject8TypeEnum6StringE, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* %177) #10
  %178 = bitcast i8* %170 to %"class.std::__1::basic_string"*
  %179 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %180 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %178, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %179) #10
  %181 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds i8, i8* %168, i64 40
  %184 = bitcast i8* %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %6, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr.37"* %6 to i8**
  store i8* %168, i8** %186, align 8
  %187 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %187, i64 0, i32 1, i32 1
  %189 = load i8, i8* %188, align 1
  %190 = icmp slt i8 %189, 0
  %191 = bitcast i8* %168 to %"class.v8_inspector::protocol::Runtime::RemoteObject"*
  br i1 %190, label %192, label %196

192:                                              ; preds = %166
  %193 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %194 = load i8*, i8** %193, align 8
  call void @_ZdlPv(i8* %194) #12
  %195 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %185, align 8
  br label %196

196:                                              ; preds = %192, %166
  %197 = phi %"class.v8_inspector::protocol::Runtime::RemoteObject"* [ %195, %192 ], [ %191, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %176) #10
  %198 = call %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32) %153)
  %199 = ptrtoint %"class.v8_inspector::protocol::StringValue"* %198 to i64
  %200 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::RemoteObject", %"class.v8_inspector::protocol::Runtime::RemoteObject"* %197, i64 0, i32 5
  %201 = getelementptr inbounds %"class.v8_crdtp::detail::PtrMaybe", %"class.v8_crdtp::detail::PtrMaybe"* %200, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8_inspector::protocol::Value"*, %"class.v8_inspector::protocol::Value"** %201, align 8
  %203 = bitcast %"class.v8_crdtp::detail::PtrMaybe"* %200 to i64*
  store i64 %199, i64* %203, align 8
  %204 = icmp eq %"class.v8_inspector::protocol::Value"* %202, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %196
  %206 = bitcast %"class.v8_inspector::protocol::Value"* %202 to void (%"class.v8_inspector::protocol::Value"*)***
  %207 = load void (%"class.v8_inspector::protocol::Value"*)**, void (%"class.v8_inspector::protocol::Value"*)*** %206, align 8
  %208 = getelementptr inbounds void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %207, i64 2
  %209 = load void (%"class.v8_inspector::protocol::Value"*)*, void (%"class.v8_inspector::protocol::Value"*)** %208, align 8
  call void %209(%"class.v8_inspector::protocol::Value"* nonnull %202) #10
  br label %210

210:                                              ; preds = %205, %196
  %211 = getelementptr inbounds i8, i8* %150, i64 8
  %212 = bitcast i8* %211 to %"class.std::__1::unique_ptr.37"**
  %213 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %212, align 8
  %214 = getelementptr inbounds i8, i8* %150, i64 16
  %215 = bitcast i8* %214 to %"class.std::__1::unique_ptr.37"**
  %216 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %215, align 8
  %217 = icmp ult %"class.std::__1::unique_ptr.37"* %213, %216
  br i1 %217, label %218, label %225

218:                                              ; preds = %210
  %219 = bitcast %"class.std::__1::unique_ptr.37"* %6 to i64*
  %220 = load i64, i64* %219, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %185, align 8
  %221 = bitcast %"class.std::__1::unique_ptr.37"* %213 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %213, i64 1
  %223 = ptrtoint %"class.std::__1::unique_ptr.37"* %222 to i64
  %224 = bitcast i8* %211 to i64*
  store i64 %223, i64* %224, align 8
  br label %226

225:                                              ; preds = %210
  call void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12RemoteObjectENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.35"* nonnull %151, %"class.std::__1::unique_ptr.37"* nonnull dereferenceable(8) %6) #10
  br label %226

226:                                              ; preds = %218, %225
  %227 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %185, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %185, align 8
  %228 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %227, null
  br i1 %228, label %234, label %229

229:                                              ; preds = %226
  %230 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %227 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %231 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %230, align 8
  %232 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %231, i64 2
  %233 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %232, align 8
  call void %233(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %227) #10
  br label %234

234:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #10
  br label %235

235:                                              ; preds = %146, %163, %234
  %236 = phi i64 [ %147, %146 ], [ %152, %163 ], [ %152, %234 ]
  %237 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %237) #10
  store i8 0, i8* %237, align 8
  %238 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %8, i64 0, i32 1
  %239 = bitcast %"class.v8_inspector::String16"* %238 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 32, i1 false) #10
  %240 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 15
  %241 = bitcast %"class.v8_inspector::String16"* %240 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %235
  %246 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  br label %250

248:                                              ; preds = %235
  %249 = zext i8 %243 to i64
  br label %250

250:                                              ; preds = %245, %248
  %251 = phi i64 [ %247, %245 ], [ %249, %248 ]
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %448, label %253

253:                                              ; preds = %250
  br i1 %244, label %257, label %254

254:                                              ; preds = %253
  %255 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  %256 = bitcast %"class.v8_inspector::String16"* %240 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %255, i8* align 8 %256, i64 24, i1 false) #10
  br label %432

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load i16*, i16** %258, align 8
  %260 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = icmp ult i64 %261, 11
  br i1 %262, label %263, label %268

263:                                              ; preds = %257
  %264 = bitcast %"class.v8_inspector::String16"* %9 to i16*
  %265 = trunc i64 %261 to i8
  %266 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %266, i64 0, i32 1, i32 1
  store i8 %265, i8* %267, align 1
  br label %285

268:                                              ; preds = %257
  %269 = icmp ugt i64 %261, 9223372036854775791
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = bitcast %"class.v8_inspector::String16"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %271) #11
  unreachable

272:                                              ; preds = %268
  %273 = add nuw nsw i64 %261, 8
  %274 = and i64 %273, -8
  %275 = icmp slt i64 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %272
  call void @abort() #11
  unreachable

277:                                              ; preds = %272
  %278 = shl i64 %274, 1
  %279 = call i8* @_Znwm(i64 %278) #12
  %280 = bitcast i8* %279 to i16*
  %281 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  store i8* %279, i8** %281, align 8
  %282 = or i64 %274, -9223372036854775808
  %283 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %261, i64* %284, align 8
  br label %285

285:                                              ; preds = %277, %263
  %286 = phi i16* [ %264, %263 ], [ %280, %277 ]
  %287 = add nuw nsw i64 %261, 1
  %288 = add i64 %261, 1
  %289 = icmp ult i64 %288, 16
  br i1 %289, label %379, label %290

290:                                              ; preds = %285
  %291 = add i64 %261, 1
  %292 = getelementptr i16, i16* %286, i64 %291
  %293 = getelementptr i16, i16* %259, i64 %291
  %294 = icmp ult i16* %286, %293
  %295 = icmp ult i16* %259, %292
  %296 = and i1 %294, %295
  br i1 %296, label %379, label %297

297:                                              ; preds = %290
  %298 = and i64 %288, -16
  %299 = getelementptr i16, i16* %286, i64 %298
  %300 = sub i64 %287, %298
  %301 = getelementptr i16, i16* %259, i64 %298
  %302 = add i64 %298, -16
  %303 = lshr exact i64 %302, 4
  %304 = add nuw nsw i64 %303, 1
  %305 = and i64 %304, 3
  %306 = icmp ult i64 %302, 48
  br i1 %306, label %358, label %307

307:                                              ; preds = %297
  %308 = sub nsw i64 %304, %305
  br label %309

309:                                              ; preds = %309, %307
  %310 = phi i64 [ 0, %307 ], [ %355, %309 ]
  %311 = phi i64 [ %308, %307 ], [ %356, %309 ]
  %312 = getelementptr i16, i16* %286, i64 %310
  %313 = getelementptr i16, i16* %259, i64 %310
  %314 = bitcast i16* %313 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !34
  %316 = getelementptr i16, i16* %313, i64 8
  %317 = bitcast i16* %316 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !34
  %319 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %319, align 2, !alias.scope !37, !noalias !34
  %320 = getelementptr i16, i16* %312, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %321, align 2, !alias.scope !37, !noalias !34
  %322 = or i64 %310, 16
  %323 = getelementptr i16, i16* %286, i64 %322
  %324 = getelementptr i16, i16* %259, i64 %322
  %325 = bitcast i16* %324 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !34
  %327 = getelementptr i16, i16* %324, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !34
  %330 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !37, !noalias !34
  %331 = getelementptr i16, i16* %323, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !37, !noalias !34
  %333 = or i64 %310, 32
  %334 = getelementptr i16, i16* %286, i64 %333
  %335 = getelementptr i16, i16* %259, i64 %333
  %336 = bitcast i16* %335 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !34
  %338 = getelementptr i16, i16* %335, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !34
  %341 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %341, align 2, !alias.scope !37, !noalias !34
  %342 = getelementptr i16, i16* %334, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %343, align 2, !alias.scope !37, !noalias !34
  %344 = or i64 %310, 48
  %345 = getelementptr i16, i16* %286, i64 %344
  %346 = getelementptr i16, i16* %259, i64 %344
  %347 = bitcast i16* %346 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !34
  %349 = getelementptr i16, i16* %346, i64 8
  %350 = bitcast i16* %349 to <8 x i16>*
  %351 = load <8 x i16>, <8 x i16>* %350, align 2, !alias.scope !34
  %352 = bitcast i16* %345 to <8 x i16>*
  store <8 x i16> %348, <8 x i16>* %352, align 2, !alias.scope !37, !noalias !34
  %353 = getelementptr i16, i16* %345, i64 8
  %354 = bitcast i16* %353 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %354, align 2, !alias.scope !37, !noalias !34
  %355 = add i64 %310, 64
  %356 = add i64 %311, -4
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %309, !llvm.loop !39

358:                                              ; preds = %309, %297
  %359 = phi i64 [ 0, %297 ], [ %355, %309 ]
  %360 = icmp eq i64 %305, 0
  br i1 %360, label %377, label %361

361:                                              ; preds = %358, %361
  %362 = phi i64 [ %374, %361 ], [ %359, %358 ]
  %363 = phi i64 [ %375, %361 ], [ %305, %358 ]
  %364 = getelementptr i16, i16* %286, i64 %362
  %365 = getelementptr i16, i16* %259, i64 %362
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !34
  %368 = getelementptr i16, i16* %365, i64 8
  %369 = bitcast i16* %368 to <8 x i16>*
  %370 = load <8 x i16>, <8 x i16>* %369, align 2, !alias.scope !34
  %371 = bitcast i16* %364 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %371, align 2, !alias.scope !37, !noalias !34
  %372 = getelementptr i16, i16* %364, i64 8
  %373 = bitcast i16* %372 to <8 x i16>*
  store <8 x i16> %370, <8 x i16>* %373, align 2, !alias.scope !37, !noalias !34
  %374 = add i64 %362, 16
  %375 = add i64 %363, -1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %361, !llvm.loop !40

377:                                              ; preds = %361, %358
  %378 = icmp eq i64 %288, %298
  br i1 %378, label %432, label %379

379:                                              ; preds = %377, %290, %285
  %380 = phi i16* [ %286, %290 ], [ %286, %285 ], [ %299, %377 ]
  %381 = phi i64 [ %287, %290 ], [ %287, %285 ], [ %300, %377 ]
  %382 = phi i16* [ %259, %290 ], [ %259, %285 ], [ %301, %377 ]
  %383 = add i64 %381, -1
  %384 = and i64 %381, 7
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %397, label %386

386:                                              ; preds = %379, %386
  %387 = phi i16* [ %393, %386 ], [ %380, %379 ]
  %388 = phi i64 [ %392, %386 ], [ %381, %379 ]
  %389 = phi i16* [ %394, %386 ], [ %382, %379 ]
  %390 = phi i64 [ %395, %386 ], [ %384, %379 ]
  %391 = load i16, i16* %389, align 2
  store i16 %391, i16* %387, align 2
  %392 = add i64 %388, -1
  %393 = getelementptr inbounds i16, i16* %387, i64 1
  %394 = getelementptr inbounds i16, i16* %389, i64 1
  %395 = add i64 %390, -1
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %397, label %386, !llvm.loop !41

397:                                              ; preds = %386, %379
  %398 = phi i16* [ %380, %379 ], [ %393, %386 ]
  %399 = phi i64 [ %381, %379 ], [ %392, %386 ]
  %400 = phi i16* [ %382, %379 ], [ %394, %386 ]
  %401 = icmp ult i64 %383, 7
  br i1 %401, label %432, label %402

402:                                              ; preds = %397, %402
  %403 = phi i16* [ %429, %402 ], [ %398, %397 ]
  %404 = phi i64 [ %428, %402 ], [ %399, %397 ]
  %405 = phi i16* [ %430, %402 ], [ %400, %397 ]
  %406 = load i16, i16* %405, align 2
  store i16 %406, i16* %403, align 2
  %407 = getelementptr inbounds i16, i16* %403, i64 1
  %408 = getelementptr inbounds i16, i16* %405, i64 1
  %409 = load i16, i16* %408, align 2
  store i16 %409, i16* %407, align 2
  %410 = getelementptr inbounds i16, i16* %403, i64 2
  %411 = getelementptr inbounds i16, i16* %405, i64 2
  %412 = load i16, i16* %411, align 2
  store i16 %412, i16* %410, align 2
  %413 = getelementptr inbounds i16, i16* %403, i64 3
  %414 = getelementptr inbounds i16, i16* %405, i64 3
  %415 = load i16, i16* %414, align 2
  store i16 %415, i16* %413, align 2
  %416 = getelementptr inbounds i16, i16* %403, i64 4
  %417 = getelementptr inbounds i16, i16* %405, i64 4
  %418 = load i16, i16* %417, align 2
  store i16 %418, i16* %416, align 2
  %419 = getelementptr inbounds i16, i16* %403, i64 5
  %420 = getelementptr inbounds i16, i16* %405, i64 5
  %421 = load i16, i16* %420, align 2
  store i16 %421, i16* %419, align 2
  %422 = getelementptr inbounds i16, i16* %403, i64 6
  %423 = getelementptr inbounds i16, i16* %405, i64 6
  %424 = load i16, i16* %423, align 2
  store i16 %424, i16* %422, align 2
  %425 = getelementptr inbounds i16, i16* %403, i64 7
  %426 = getelementptr inbounds i16, i16* %405, i64 7
  %427 = load i16, i16* %426, align 2
  store i16 %427, i16* %425, align 2
  %428 = add i64 %404, -8
  %429 = getelementptr inbounds i16, i16* %403, i64 8
  %430 = getelementptr inbounds i16, i16* %405, i64 8
  %431 = icmp eq i64 %428, 0
  br i1 %431, label %432, label %402, !llvm.loop !42

432:                                              ; preds = %397, %402, %377, %254
  %433 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 1
  %434 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 15, i32 1
  %435 = load i64, i64* %434, align 8
  store i64 %435, i64* %433, align 8
  %436 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %8, i64 0, i32 1, i32 0
  %437 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %9, i64 0, i32 0
  %438 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %436, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %437) #10
  %439 = load i64, i64* %433, align 8
  %440 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %8, i64 0, i32 1, i32 1
  store i64 %439, i64* %440, align 8
  store i8 1, i8* %237, align 8
  %441 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %442 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %441, i64 0, i32 1, i32 1
  %443 = load i8, i8* %442, align 1
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %448

445:                                              ; preds = %432
  %446 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %447 = load i8*, i8** %446, align 8
  call void @_ZdlPv(i8* %447) #12
  br label %448

448:                                              ; preds = %445, %432, %250
  %449 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %450 = load %"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8StackTraceImpl"** %449, align 8
  %451 = icmp eq %"class.v8_inspector::V8StackTraceImpl"* %450, null
  br i1 %451, label %465, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 9
  %454 = load i32, i32* %453, align 8
  switch i32 %454, label %460 [
    i32 13, label %455
    i32 3, label %455
    i32 8, label %455
    i32 4, label %455
  ]

455:                                              ; preds = %452, %452, %452, %452
  %456 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %457 = load %"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::V8Debugger"** %456, align 8
  %458 = call %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerE(%"class.v8_inspector::V8StackTraceImpl"* nonnull %450, %"class.v8_inspector::V8Debugger"* %457) #10
  %459 = ptrtoint %"class.v8_inspector::protocol::Runtime::StackTrace"* %458 to i64
  br label %465

460:                                              ; preds = %452
  %461 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %462 = load %"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::V8Debugger"** %461, align 8
  %463 = call %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerEi(%"class.v8_inspector::V8StackTraceImpl"* nonnull %450, %"class.v8_inspector::V8Debugger"* %462, i32 0) #10
  %464 = ptrtoint %"class.v8_inspector::protocol::Runtime::StackTrace"* %463 to i64
  br label %465

465:                                              ; preds = %448, %455, %460
  %466 = phi i64 [ %464, %460 ], [ %459, %455 ], [ 0, %448 ]
  %467 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %467) #10
  %468 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 9
  %469 = load i32, i32* %468, align 8
  %470 = icmp ult i32 %469, 16
  br i1 %470, label %471, label %475

471:                                              ; preds = %465
  %472 = sext i32 %469 to i64
  %473 = getelementptr inbounds [16 x i8**], [16 x i8**]* @switch.table._ZNK12v8_inspector16V8ConsoleMessage16reportToFrontendEPNS_8protocol7Runtime8FrontendEPNS_22V8InspectorSessionImplEb, i64 0, i64 %472
  %474 = load i8**, i8*** %473, align 8
  br label %475

475:                                              ; preds = %465, %471
  %476 = phi i8** [ %474, %471 ], [ @_ZN12v8_inspector8protocol7Runtime16ConsoleAPICalled8TypeEnum3LogE, %465 ]
  %477 = load i8*, i8** %476, align 8
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %10, i8* %477) #10
  %478 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 8
  %479 = load i32, i32* %478, align 4
  %480 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 1
  %481 = load double, double* %480, align 8
  %482 = bitcast %"class.v8_crdtp::detail::PtrMaybe.603"* %11 to i64*
  store i64 %466, i64* %482, align 8
  %483 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %12, i64 0, i32 0
  %484 = load i8, i8* %237, align 8, !range !43
  store i8 %484, i8* %483, align 8
  %485 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %12, i64 0, i32 1
  %486 = bitcast %"class.v8_inspector::String16"* %485 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %486, i8* align 8 %239, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 24, i1 false) #10
  %487 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %12, i64 0, i32 1, i32 1
  %488 = getelementptr inbounds %"class.v8_crdtp::detail::ValueMaybe", %"class.v8_crdtp::detail::ValueMaybe"* %8, i64 0, i32 1, i32 1
  %489 = load i64, i64* %488, align 8
  store i64 %489, i64* %487, align 8
  %490 = inttoptr i64 %236 to %"class.std::__1::vector.35"*
  call void @_ZN12v8_inspector8protocol7Runtime8Frontend16consoleAPICalledERKNS_8String16ENSt3__110unique_ptrINS6_6vectorINS7_INS1_12RemoteObjectENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEENSA_ISF_EEEEidN8v8_crdtp6detail8PtrMaybeINS1_10StackTraceEEENSJ_10ValueMaybeIS3_EE(%"class.v8_inspector::protocol::Runtime::Frontend"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %10, %"class.std::__1::vector.35"* %490, i32 %479, double %481, %"class.v8_crdtp::detail::PtrMaybe.603"* nonnull %11, %"class.v8_crdtp::detail::ValueMaybe"* nonnull %12) #10
  %491 = bitcast %"class.v8_inspector::String16"* %485 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %492 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %491, i64 0, i32 1, i32 1
  %493 = load i8, i8* %492, align 1
  %494 = icmp slt i8 %493, 0
  br i1 %494, label %495, label %498

495:                                              ; preds = %475
  %496 = bitcast %"class.v8_inspector::String16"* %485 to i8**
  %497 = load i8*, i8** %496, align 8
  call void @_ZdlPv(i8* %497) #12
  br label %498

498:                                              ; preds = %475, %495
  %499 = getelementptr inbounds %"class.v8_crdtp::detail::PtrMaybe.603", %"class.v8_crdtp::detail::PtrMaybe.603"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %500 = load %"class.v8_inspector::protocol::Runtime::StackTrace"*, %"class.v8_inspector::protocol::Runtime::StackTrace"** %499, align 8
  store %"class.v8_inspector::protocol::Runtime::StackTrace"* null, %"class.v8_inspector::protocol::Runtime::StackTrace"** %499, align 8
  %501 = icmp eq %"class.v8_inspector::protocol::Runtime::StackTrace"* %500, null
  br i1 %501, label %507, label %502

502:                                              ; preds = %498
  %503 = bitcast %"class.v8_inspector::protocol::Runtime::StackTrace"* %500 to void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)***
  %504 = load void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)**, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*** %503, align 8
  %505 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)** %504, i64 2
  %506 = load void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)*, void (%"class.v8_inspector::protocol::Runtime::StackTrace"*)** %505, align 8
  call void %506(%"class.v8_inspector::protocol::Runtime::StackTrace"* nonnull %500) #10
  br label %507

507:                                              ; preds = %498, %502
  %508 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %509 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %508, i64 0, i32 1, i32 1
  %510 = load i8, i8* %509, align 1
  %511 = icmp slt i8 %510, 0
  br i1 %511, label %512, label %515

512:                                              ; preds = %507
  %513 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %514 = load i8*, i8** %513, align 8
  call void @_ZdlPv(i8* %514) #12
  br label %515

515:                                              ; preds = %512, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %467) #10
  %516 = bitcast %"class.v8_inspector::String16"* %238 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %517 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %516, i64 0, i32 1, i32 1
  %518 = load i8, i8* %517, align 1
  %519 = icmp slt i8 %518, 0
  br i1 %519, label %520, label %523

520:                                              ; preds = %515
  %521 = bitcast %"class.v8_inspector::String16"* %238 to i8**
  %522 = load i8*, i8** %521, align 8
  call void @_ZdlPv(i8* %522) #12
  br label %523

523:                                              ; preds = %520, %515
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %237) #10
  br label %556

524:                                              ; preds = %143
  %525 = icmp eq %"class.std::__1::vector.35"* %144, null
  br i1 %525, label %556, label %526

526:                                              ; preds = %524
  %527 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %144, i64 0, i32 0, i32 0
  %528 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %527, align 8
  %529 = icmp eq %"class.std::__1::unique_ptr.37"* %528, null
  br i1 %529, label %553, label %530

530:                                              ; preds = %526
  %531 = bitcast %"class.std::__1::unique_ptr.37"* %528 to i8*
  %532 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %144, i64 0, i32 0, i32 1
  %533 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %532, align 8
  %534 = icmp eq %"class.std::__1::unique_ptr.37"* %533, %528
  br i1 %534, label %551, label %535

535:                                              ; preds = %530, %546
  %536 = phi %"class.std::__1::unique_ptr.37"* [ %537, %546 ], [ %533, %530 ]
  %537 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %536, i64 -1
  %538 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %537, i64 0, i32 0, i32 0, i32 0
  %539 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %538, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %538, align 8
  %540 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %539, null
  br i1 %540, label %546, label %541

541:                                              ; preds = %535
  %542 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %539 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %543 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %542, align 8
  %544 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %543, i64 2
  %545 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %544, align 8
  tail call void %545(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %539) #10
  br label %546

546:                                              ; preds = %541, %535
  %547 = icmp eq %"class.std::__1::unique_ptr.37"* %537, %528
  br i1 %547, label %548, label %535

548:                                              ; preds = %546
  %549 = bitcast %"class.std::__1::vector.35"* %144 to i8**
  %550 = load i8*, i8** %549, align 8
  br label %551

551:                                              ; preds = %548, %530
  %552 = phi i8* [ %550, %548 ], [ %531, %530 ]
  store %"class.std::__1::unique_ptr.37"* %528, %"class.std::__1::unique_ptr.37"** %532, align 8
  tail call void @_ZdlPv(i8* %552) #12
  br label %553

553:                                              ; preds = %551, %526
  %554 = bitcast %"class.std::__1::vector.35"* %144 to i8*
  tail call void @_ZdlPv(i8* %554) #12
  br label %556

555:                                              ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

556:                                              ; preds = %553, %524, %523, %133, %130, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZNK12v8_inspector16V8ConsoleMessage13wrapExceptionEPNS_22V8InspectorSessionImplEb(%"class.v8_inspector::V8ConsoleMessage"* nocapture readonly, %"class.v8_inspector::V8InspectorSessionImpl"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.11"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %53, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %1, i64 0, i32 4
  %19 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = tail call %"class.v8_inspector::InspectedContext"* @_ZNK12v8_inspector15V8InspectorImpl10getContextEii(%"class.v8_inspector::V8InspectorImpl"* %19, i32 %21, i32 %15) #10
  %23 = icmp eq %"class.v8_inspector::InspectedContext"* %22, null
  br i1 %23, label %53, label %24

24:                                               ; preds = %17
  %25 = tail call %"class.v8::Isolate"* @_ZNK12v8_inspector16InspectedContext7isolateEv(%"class.v8_inspector::InspectedContext"* nonnull %22) #10
  %26 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %25) #10
  %27 = call %"class.v8::Context"* @_ZNK12v8_inspector16InspectedContext7contextEv(%"class.v8_inspector::InspectedContext"* nonnull %22) #10
  %28 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.v8::Global"*, %"class.v8::Global"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.v8::Value"*, %"class.v8::Value"** %32, align 8
  %34 = icmp eq %"class.v8::Value"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %24
  %36 = bitcast %"class.v8::Value"* %33 to i64*
  %37 = bitcast %"class.v8::Isolate"* %25 to %"class.v8::internal::Isolate"*
  %38 = load i64, i64* %36, align 8
  %39 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %37, i64 %38) #10
  %40 = bitcast i64* %39 to %"class.v8::Value"*
  br label %41

41:                                               ; preds = %24, %35
  %42 = phi %"class.v8::Value"* [ %40, %35 ], [ null, %24 ]
  %43 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #10
  %44 = call %"class.v8_inspector::protocol::Runtime::RemoteObject"* @_ZN12v8_inspector22V8InspectorSessionImpl10wrapObjectEN2v85LocalINS1_7ContextEEENS2_INS1_5ValueEEERKNS_8String16Eb(%"class.v8_inspector::V8InspectorSessionImpl"* %1, %"class.v8::Context"* %27, %"class.v8::Value"* %42, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5, i1 zeroext %2) #10
  %45 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %41, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #10
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  br label %53

53:                                               ; preds = %17, %3, %13, %52
  %54 = phi %"class.v8_inspector::protocol::Runtime::RemoteObject"* [ %44, %52 ], [ null, %13 ], [ null, %3 ], [ null, %17 ]
  ret %"class.v8_inspector::protocol::Runtime::RemoteObject"* %54
}

declare zeroext i1 @_ZN12v8_inspector15V8InspectorImpl24hasConsoleMessageStorageEi(%"class.v8_inspector::V8InspectorImpl"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime16ExceptionDetails11setScriptIdERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ExceptionDetails"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #11
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #12
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !44
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !44
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !47, !noalias !44
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !47, !noalias !44
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !44
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !44
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !47, !noalias !44
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !47, !noalias !44
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !44
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !44
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !47, !noalias !44
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !47, !noalias !44
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !44
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !44
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !47, !noalias !44
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !47, !noalias !44
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !49

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !44
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !44
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !47, !noalias !44
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !47, !noalias !44
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !50

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !51

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !52

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ExceptionDetails", %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* %0, i64 0, i32 5, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #10
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ExceptionDetails", %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* %0, i64 0, i32 5, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ExceptionDetails", %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* %0, i64 0, i32 5, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare void @_ZN12v8_inspector8String1611fromIntegerEi(%"class.v8_inspector::String16"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12v8_inspector8protocol7Runtime16ExceptionDetails6setUrlERKNS_8String16E(%"class.v8_inspector::protocol::Runtime::ExceptionDetails"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  %10 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %186

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i16*, i16** %12, align 8
  %14 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 11
  br i1 %16, label %17, label %22

17:                                               ; preds = %11
  %18 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  %19 = trunc i64 %15 to i8
  %20 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  store i8 %19, i8* %21, align 1
  br label %39

22:                                               ; preds = %11
  %23 = icmp ugt i64 %15, 9223372036854775791
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.v8_inspector::String16"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %25) #11
  unreachable

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %15, 8
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #12
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  %37 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %17
  %40 = phi i16* [ %18, %17 ], [ %34, %31 ]
  %41 = add nuw nsw i64 %15, 1
  %42 = add i64 %15, 1
  %43 = icmp ult i64 %42, 16
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  %45 = add i64 %15, 1
  %46 = getelementptr i16, i16* %40, i64 %45
  %47 = getelementptr i16, i16* %13, i64 %45
  %48 = icmp ult i16* %40, %47
  %49 = icmp ult i16* %13, %46
  %50 = and i1 %48, %49
  br i1 %50, label %133, label %51

51:                                               ; preds = %44
  %52 = and i64 %42, -16
  %53 = getelementptr i16, i16* %40, i64 %52
  %54 = sub i64 %41, %52
  %55 = getelementptr i16, i16* %13, i64 %52
  %56 = add i64 %52, -16
  %57 = lshr exact i64 %56, 4
  %58 = add nuw nsw i64 %57, 1
  %59 = and i64 %58, 3
  %60 = icmp ult i64 %56, 48
  br i1 %60, label %112, label %61

61:                                               ; preds = %51
  %62 = sub nsw i64 %58, %59
  br label %63

63:                                               ; preds = %63, %61
  %64 = phi i64 [ 0, %61 ], [ %109, %63 ]
  %65 = phi i64 [ %62, %61 ], [ %110, %63 ]
  %66 = getelementptr i16, i16* %40, i64 %64
  %67 = getelementptr i16, i16* %13, i64 %64
  %68 = bitcast i16* %67 to <8 x i16>*
  %69 = load <8 x i16>, <8 x i16>* %68, align 2, !alias.scope !53
  %70 = getelementptr i16, i16* %67, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !53
  %73 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %69, <8 x i16>* %73, align 2, !alias.scope !56, !noalias !53
  %74 = getelementptr i16, i16* %66, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %75, align 2, !alias.scope !56, !noalias !53
  %76 = or i64 %64, 16
  %77 = getelementptr i16, i16* %40, i64 %76
  %78 = getelementptr i16, i16* %13, i64 %76
  %79 = bitcast i16* %78 to <8 x i16>*
  %80 = load <8 x i16>, <8 x i16>* %79, align 2, !alias.scope !53
  %81 = getelementptr i16, i16* %78, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !53
  %84 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %80, <8 x i16>* %84, align 2, !alias.scope !56, !noalias !53
  %85 = getelementptr i16, i16* %77, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %86, align 2, !alias.scope !56, !noalias !53
  %87 = or i64 %64, 32
  %88 = getelementptr i16, i16* %40, i64 %87
  %89 = getelementptr i16, i16* %13, i64 %87
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !53
  %92 = getelementptr i16, i16* %89, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !53
  %95 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %95, align 2, !alias.scope !56, !noalias !53
  %96 = getelementptr i16, i16* %88, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %97, align 2, !alias.scope !56, !noalias !53
  %98 = or i64 %64, 48
  %99 = getelementptr i16, i16* %40, i64 %98
  %100 = getelementptr i16, i16* %13, i64 %98
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !53
  %103 = getelementptr i16, i16* %100, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !53
  %106 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !56, !noalias !53
  %107 = getelementptr i16, i16* %99, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !56, !noalias !53
  %109 = add i64 %64, 64
  %110 = add i64 %65, -4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %63, !llvm.loop !58

112:                                              ; preds = %63, %51
  %113 = phi i64 [ 0, %51 ], [ %109, %63 ]
  %114 = icmp eq i64 %59, 0
  br i1 %114, label %131, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %128, %115 ], [ %113, %112 ]
  %117 = phi i64 [ %129, %115 ], [ %59, %112 ]
  %118 = getelementptr i16, i16* %40, i64 %116
  %119 = getelementptr i16, i16* %13, i64 %116
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !53
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !53
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !56, !noalias !53
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !56, !noalias !53
  %128 = add i64 %116, 16
  %129 = add i64 %117, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %115, !llvm.loop !59

131:                                              ; preds = %115, %112
  %132 = icmp eq i64 %42, %52
  br i1 %132, label %186, label %133

133:                                              ; preds = %131, %44, %39
  %134 = phi i16* [ %40, %44 ], [ %40, %39 ], [ %53, %131 ]
  %135 = phi i64 [ %41, %44 ], [ %41, %39 ], [ %54, %131 ]
  %136 = phi i16* [ %13, %44 ], [ %13, %39 ], [ %55, %131 ]
  %137 = add i64 %135, -1
  %138 = and i64 %135, 7
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133, %140
  %141 = phi i16* [ %147, %140 ], [ %134, %133 ]
  %142 = phi i64 [ %146, %140 ], [ %135, %133 ]
  %143 = phi i16* [ %148, %140 ], [ %136, %133 ]
  %144 = phi i64 [ %149, %140 ], [ %138, %133 ]
  %145 = load i16, i16* %143, align 2
  store i16 %145, i16* %141, align 2
  %146 = add i64 %142, -1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = getelementptr inbounds i16, i16* %143, i64 1
  %149 = add i64 %144, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %140, !llvm.loop !60

151:                                              ; preds = %140, %133
  %152 = phi i16* [ %134, %133 ], [ %147, %140 ]
  %153 = phi i64 [ %135, %133 ], [ %146, %140 ]
  %154 = phi i16* [ %136, %133 ], [ %148, %140 ]
  %155 = icmp ult i64 %137, 7
  br i1 %155, label %186, label %156

156:                                              ; preds = %151, %156
  %157 = phi i16* [ %183, %156 ], [ %152, %151 ]
  %158 = phi i64 [ %182, %156 ], [ %153, %151 ]
  %159 = phi i16* [ %184, %156 ], [ %154, %151 ]
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %157, align 2
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = getelementptr inbounds i16, i16* %159, i64 2
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = getelementptr inbounds i16, i16* %159, i64 3
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = getelementptr inbounds i16, i16* %159, i64 4
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = getelementptr inbounds i16, i16* %159, i64 5
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = getelementptr inbounds i16, i16* %159, i64 6
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = getelementptr inbounds i16, i16* %159, i64 7
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = add i64 %158, -8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i64 %182, 0
  br i1 %185, label %186, label %156, !llvm.loop !61

186:                                              ; preds = %151, %156, %131, %8
  %187 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %188 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  store i64 %189, i64* %187, align 8
  %190 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ExceptionDetails", %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* %0, i64 0, i32 6, i32 1, i32 0
  %191 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0
  %192 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %190, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %191) #10
  %193 = load i64, i64* %187, align 8
  %194 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ExceptionDetails", %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* %0, i64 0, i32 6, i32 1, i32 1
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::ExceptionDetails", %"class.v8_inspector::protocol::Runtime::ExceptionDetails"* %0, i64 0, i32 6, i32 0
  store i8 1, i8* %195, align 8
  %196 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %186
  %201 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %202 = load i8*, i8** %201, align 8
  call void @_ZdlPv(i8* %202) #12
  br label %203

203:                                              ; preds = %186, %200
  ret void
}

declare %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerE(%"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8Debugger"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector8protocol7Runtime8Frontend15exceptionThrownEdNSt3__110unique_ptrINS1_16ExceptionDetailsENS3_14default_deleteIS5_EEEE(%"class.v8_inspector::protocol::Runtime::Frontend"*, double, %"class.v8_inspector::protocol::Runtime::ExceptionDetails"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector8protocol7Runtime8Frontend16exceptionRevokedERKNS_8String16Ei(%"class.v8_inspector::protocol::Runtime::Frontend"*, %"class.v8_inspector::String16"* dereferenceable(32), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8_inspector::protocol::StringValue"* @_ZN12v8_inspector8protocol11StringValue6createERKNS_8String16E(%"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #12
  %3 = bitcast i8* %2 to %"class.v8_inspector::protocol::StringValue"*
  %4 = bitcast i8* %2 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 4, i32* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN12v8_inspector8protocol11StringValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast %"class.v8_inspector::String16"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8_inspector::String16"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %13, i64 24, i1 false) #10
  br label %193

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast i16* %16 to i8*
  %18 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = trunc i64 %19 to i8
  %23 = getelementptr inbounds i8, i8* %2, i64 39
  store i8 %22, i8* %23, align 1
  br label %42

24:                                               ; preds = %14
  %25 = icmp ugt i64 %19, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast i8* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #11
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %19, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #11
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #12
  %36 = bitcast i8* %7 to i8**
  store i8* %35, i8** %36, align 8
  %37 = or i64 %30, -9223372036854775808
  %38 = getelementptr inbounds i8, i8* %2, i64 32
  %39 = bitcast i8* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %2, i64 24
  %41 = bitcast i8* %40 to i64*
  store i64 %19, i64* %41, align 8
  br label %42

42:                                               ; preds = %33, %21
  %43 = phi i8* [ %7, %21 ], [ %35, %33 ]
  %44 = bitcast i8* %43 to i16*
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %140, label %48

48:                                               ; preds = %42
  %49 = shl i64 %19, 1
  %50 = add i64 %49, 2
  %51 = getelementptr i8, i8* %43, i64 %50
  %52 = add i64 %19, 1
  %53 = getelementptr i16, i16* %16, i64 %52
  %54 = bitcast i16* %53 to i8*
  %55 = icmp ult i8* %43, %54
  %56 = icmp ugt i8* %51, %17
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %48
  %59 = and i64 %46, -16
  %60 = getelementptr i16, i16* %44, i64 %59
  %61 = sub i64 %45, %59
  %62 = getelementptr i16, i16* %16, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %44, i64 %71
  %74 = getelementptr i16, i16* %16, i64 %71
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !62
  %77 = getelementptr i16, i16* %74, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !62
  %80 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !65, !noalias !62
  %81 = getelementptr i16, i16* %73, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !65, !noalias !62
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %44, i64 %83
  %85 = getelementptr i16, i16* %16, i64 %83
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !62
  %88 = getelementptr i16, i16* %85, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !62
  %91 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !65, !noalias !62
  %92 = getelementptr i16, i16* %84, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !65, !noalias !62
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %44, i64 %94
  %96 = getelementptr i16, i16* %16, i64 %94
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !62
  %99 = getelementptr i16, i16* %96, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !62
  %102 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !65, !noalias !62
  %103 = getelementptr i16, i16* %95, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !65, !noalias !62
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %44, i64 %105
  %107 = getelementptr i16, i16* %16, i64 %105
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !62
  %110 = getelementptr i16, i16* %107, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !62
  %113 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !65, !noalias !62
  %114 = getelementptr i16, i16* %106, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !65, !noalias !62
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !67

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %44, i64 %123
  %126 = getelementptr i16, i16* %16, i64 %123
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !62
  %129 = getelementptr i16, i16* %126, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !62
  %132 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !65, !noalias !62
  %133 = getelementptr i16, i16* %125, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !65, !noalias !62
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !68

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %46, %59
  br i1 %139, label %193, label %140

140:                                              ; preds = %138, %48, %42
  %141 = phi i16* [ %44, %48 ], [ %44, %42 ], [ %60, %138 ]
  %142 = phi i64 [ %45, %48 ], [ %45, %42 ], [ %61, %138 ]
  %143 = phi i16* [ %16, %48 ], [ %16, %42 ], [ %62, %138 ]
  %144 = add i64 %142, -1
  %145 = and i64 %142, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i16* [ %154, %147 ], [ %141, %140 ]
  %149 = phi i64 [ %153, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %155, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %150, align 2
  store i16 %152, i16* %148, align 2
  %153 = add i64 %149, -1
  %154 = getelementptr inbounds i16, i16* %148, i64 1
  %155 = getelementptr inbounds i16, i16* %150, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !69

158:                                              ; preds = %147, %140
  %159 = phi i16* [ %141, %140 ], [ %154, %147 ]
  %160 = phi i64 [ %142, %140 ], [ %153, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %155, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %193, label %163

163:                                              ; preds = %158, %163
  %164 = phi i16* [ %190, %163 ], [ %159, %158 ]
  %165 = phi i64 [ %189, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %191, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %164, align 2
  %168 = getelementptr inbounds i16, i16* %164, i64 1
  %169 = getelementptr inbounds i16, i16* %166, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %164, i64 2
  %172 = getelementptr inbounds i16, i16* %166, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %164, i64 3
  %175 = getelementptr inbounds i16, i16* %166, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %164, i64 4
  %178 = getelementptr inbounds i16, i16* %166, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %164, i64 5
  %181 = getelementptr inbounds i16, i16* %166, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %164, i64 6
  %184 = getelementptr inbounds i16, i16* %166, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %164, i64 7
  %187 = getelementptr inbounds i16, i16* %166, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %165, -8
  %190 = getelementptr inbounds i16, i16* %164, i64 8
  %191 = getelementptr inbounds i16, i16* %166, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %193, label %163, !llvm.loop !70

193:                                              ; preds = %158, %163, %138, %12
  %194 = getelementptr inbounds i8, i8* %2, i64 40
  %195 = bitcast i8* %194 to i64*
  %196 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %0, i64 0, i32 1
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  ret %"class.v8_inspector::protocol::StringValue"* %3
}

declare %"class.v8_inspector::protocol::Runtime::StackTrace"* @_ZNK12v8_inspector16V8StackTraceImpl24buildInspectorObjectImplEPNS_10V8DebuggerEi(%"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8Debugger"*, i32) local_unnamed_addr #2

declare void @_ZN12v8_inspector8protocol7Runtime8Frontend16consoleAPICalledERKNS_8String16ENSt3__110unique_ptrINS6_6vectorINS7_INS1_12RemoteObjectENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEENSA_ISF_EEEEidN8v8_crdtp6detail8PtrMaybeINS1_10StackTraceEEENSJ_10ValueMaybeIS3_EE(%"class.v8_inspector::protocol::Runtime::Frontend"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.std::__1::vector.35"*, i32, double, %"class.v8_crdtp::detail::PtrMaybe.603"*, %"class.v8_crdtp::detail::ValueMaybe"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector16V8ConsoleMessage6originEv(%"class.v8_inspector::V8ConsoleMessage"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK12v8_inspector16V8ConsoleMessage4typeEv(%"class.v8_inspector::V8ConsoleMessage"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::V8ConsoleMessage"* @_ZN12v8_inspector16V8ConsoleMessage19createForConsoleAPIEN2v85LocalINS1_7ContextEEEiiPNS_15V8InspectorImplEdNS_14ConsoleAPITypeERKNSt3__16vectorINS2_INS1_5ValueEEENS8_9allocatorISB_EEEERKNS_8String16ENS8_10unique_ptrINS_16V8StackTraceImplENS8_14default_deleteISL_EEEE(%"class.v8::Context"*, i32, i32, %"class.v8_inspector::V8InspectorImpl"* nocapture readonly, double, i32, %"class.std::__1::vector.651"* dereferenceable(24), %"class.v8_inspector::String16"* dereferenceable(32), i64) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::StringView", align 8
  %13 = alloca %"class.std::__1::unique_ptr.11", align 8
  %14 = alloca %"class.v8_inspector::String16", align 8
  %15 = alloca %"class.v8_inspector::String16", align 8
  %16 = alloca %"class.v8_inspector::StringView", align 8
  %17 = alloca %"class.v8_inspector::StringView", align 8
  %18 = inttoptr i64 %8 to %"class.v8_inspector::V8StackTraceImpl"*
  %19 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #10
  %20 = tail call i8* @_Znwm(i64 208) #12
  %21 = bitcast i8* %20 to %"class.v8_inspector::V8ConsoleMessage"*
  %22 = bitcast i8* %20 to i32*
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to double*
  store double %4, double* %24, align 8
  %25 = getelementptr inbounds i8, i8* %20, i64 16
  %26 = bitcast i8* %25 to %"class.v8_inspector::String16"*
  %27 = bitcast i8* %25 to i16**
  %28 = getelementptr inbounds i8, i8* %20, i64 24
  %29 = bitcast i8* %28 to i64*
  %30 = getelementptr inbounds i8, i8* %20, i64 32
  %31 = getelementptr inbounds i8, i8* %20, i64 39
  %32 = getelementptr inbounds i8, i8* %20, i64 48
  %33 = bitcast i8* %32 to %"class.v8_inspector::String16"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 192, i1 false)
  %34 = icmp eq i64 %8, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %9
  %36 = inttoptr i64 %8 to i1 (%"class.v8_inspector::V8StackTraceImpl"*)***
  %37 = load i1 (%"class.v8_inspector::V8StackTraceImpl"*)**, i1 (%"class.v8_inspector::V8StackTraceImpl"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.v8_inspector::V8StackTraceImpl"*)*, i1 (%"class.v8_inspector::V8StackTraceImpl"*)** %37, i64 1
  %39 = load i1 (%"class.v8_inspector::V8StackTraceImpl"*)*, i1 (%"class.v8_inspector::V8StackTraceImpl"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.v8_inspector::V8StackTraceImpl"* nonnull %18) #10
  br i1 %40, label %75, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #10
  %44 = inttoptr i64 %8 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)***
  %45 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)** %45, i64 2
  %47 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::V8StackTraceImpl"*)** %46, align 8
  call void %47(%"class.v8_inspector::StringView"* nonnull sret %12, %"class.v8_inspector::V8StackTraceImpl"* nonnull %18) #10
  call void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* nonnull sret %11, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %12) #10
  %48 = getelementptr inbounds i8, i8* %20, i64 71
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %41
  %52 = bitcast i8* %32 to i8**
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %51, %41
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %42, i64 24, i1 false) #10
  %55 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %55, i64 0, i32 1, i32 1
  store i8 0, i8* %56, align 1
  %57 = bitcast %"class.v8_inspector::String16"* %11 to i16*
  store i16 0, i16* %57, align 8
  %58 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %11, i64 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds i8, i8* %20, i64 72
  %61 = bitcast i8* %60 to i64*
  store i64 %59, i64* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #10
  %62 = inttoptr i64 %8 to i32 (%"class.v8_inspector::V8StackTraceImpl"*)***
  %63 = load i32 (%"class.v8_inspector::V8StackTraceImpl"*)**, i32 (%"class.v8_inspector::V8StackTraceImpl"*)*** %62, align 8
  %64 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTraceImpl"*)*, i32 (%"class.v8_inspector::V8StackTraceImpl"*)** %63, i64 3
  %65 = load i32 (%"class.v8_inspector::V8StackTraceImpl"*)*, i32 (%"class.v8_inspector::V8StackTraceImpl"*)** %64, align 8
  %66 = call i32 %65(%"class.v8_inspector::V8StackTraceImpl"* nonnull %18) #10
  %67 = getelementptr inbounds i8, i8* %20, i64 80
  %68 = bitcast i8* %67 to i32*
  store i32 %66, i32* %68, align 8
  %69 = load i32 (%"class.v8_inspector::V8StackTraceImpl"*)**, i32 (%"class.v8_inspector::V8StackTraceImpl"*)*** %62, align 8
  %70 = getelementptr inbounds i32 (%"class.v8_inspector::V8StackTraceImpl"*)*, i32 (%"class.v8_inspector::V8StackTraceImpl"*)** %69, i64 4
  %71 = load i32 (%"class.v8_inspector::V8StackTraceImpl"*)*, i32 (%"class.v8_inspector::V8StackTraceImpl"*)** %70, align 8
  %72 = call i32 %71(%"class.v8_inspector::V8StackTraceImpl"* nonnull %18) #10
  %73 = getelementptr inbounds i8, i8* %20, i64 84
  %74 = bitcast i8* %73 to i32*
  store i32 %72, i32* %74, align 4
  br label %75

75:                                               ; preds = %9, %54, %35
  %76 = getelementptr inbounds i8, i8* %20, i64 88
  %77 = bitcast i8* %76 to %"class.v8_inspector::V8StackTraceImpl"**
  %78 = load %"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8StackTraceImpl"** %77, align 8
  %79 = bitcast i8* %76 to i64*
  store i64 %8, i64* %79, align 8
  %80 = icmp eq %"class.v8_inspector::V8StackTraceImpl"* %78, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.v8_inspector::V8StackTraceImpl"* %78 to void (%"class.v8_inspector::V8StackTraceImpl"*)***
  %83 = load void (%"class.v8_inspector::V8StackTraceImpl"*)**, void (%"class.v8_inspector::V8StackTraceImpl"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::V8StackTraceImpl"*)** %83, i64 8
  %85 = load void (%"class.v8_inspector::V8StackTraceImpl"*)*, void (%"class.v8_inspector::V8StackTraceImpl"*)** %84, align 8
  call void %85(%"class.v8_inspector::V8StackTraceImpl"* nonnull %78) #10
  br label %86

86:                                               ; preds = %75, %81
  %87 = getelementptr inbounds i8, i8* %20, i64 176
  %88 = bitcast i8* %87 to %"class.std::__1::basic_string"*
  %89 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 0
  %90 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %88, %"class.std::__1::basic_string"* dereferenceable(24) %89) #10
  %91 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %7, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds i8, i8* %20, i64 200
  %94 = bitcast i8* %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %20, i64 104
  %96 = bitcast i8* %95 to i32*
  store i32 %5, i32* %96, align 8
  %97 = getelementptr inbounds i8, i8* %20, i64 100
  %98 = bitcast i8* %97 to i32*
  store i32 %1, i32* %98, align 4
  %99 = getelementptr inbounds %"class.std::__1::vector.651", %"class.std::__1::vector.651"* %6, i64 0, i32 0, i32 1
  %100 = bitcast %"class.v8::Local.594"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::vector.651"* %6 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %101, %103
  br i1 %104, label %212, label %105

105:                                              ; preds = %86
  %106 = bitcast %"class.std::__1::unique_ptr.11"* %13 to i8*
  %107 = bitcast %"class.v8::Isolate"* %19 to %"class.v8::internal::Isolate"*
  %108 = bitcast %"class.std::__1::unique_ptr.11"* %13 to i64*
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %13, i64 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds i8, i8* %20, i64 128
  %111 = bitcast i8* %110 to %"class.std::__1::unique_ptr.11"**
  %112 = getelementptr inbounds i8, i8* %20, i64 136
  %113 = bitcast i8* %112 to %"class.std::__1::unique_ptr.11"**
  %114 = getelementptr inbounds i8, i8* %20, i64 120
  %115 = bitcast i8* %114 to %"class.std::__1::vector.9"*
  %116 = bitcast i8* %110 to i64*
  %117 = getelementptr inbounds i8, i8* %20, i64 116
  %118 = bitcast i8* %117 to i32*
  br label %156

119:                                              ; preds = %205
  %120 = icmp eq i64 %209, 0
  br i1 %120, label %212, label %121

121:                                              ; preds = %119
  %122 = bitcast %"class.v8_inspector::String16"* %14 to i8*
  %123 = bitcast i8* %25 to %"class.std::__1::basic_string"*
  %124 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %124, i64 0, i32 1, i32 1
  %126 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = bitcast %"class.v8_inspector::String16"* %14 to i16*
  %129 = bitcast i8* %30 to i64*
  %130 = bitcast i8* %25 to i16*
  %131 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %132 = bitcast %"class.v8_inspector::String16"* %15 to i8*
  %133 = getelementptr inbounds %"class.std::__1::vector.651", %"class.std::__1::vector.651"* %6, i64 0, i32 0, i32 0
  %134 = bitcast %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10 to i8*
  %135 = ptrtoint %"class.v8::Context"* %0 to i64
  %136 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 0
  %137 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 1
  %138 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 2
  %139 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 3
  %140 = bitcast %"class.std::__1::vector.762"* %139 to i8*
  %141 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 4
  %142 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 5
  %143 = bitcast %"class.v8::Local"* %142 to i64*
  %144 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 3, i32 0, i32 0
  %145 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 3, i32 0, i32 1
  %146 = bitcast %"class.v8::Local.595"** %145 to i64*
  %147 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %10, i64 0, i32 2, i32 0, i32 0, i32 1
  %149 = bitcast i16** %148 to i64*
  %150 = bitcast %"class.v8_inspector::String16"* %15 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %150, i64 0, i32 1, i32 1
  %152 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = bitcast %"class.v8_inspector::String16"* %15 to i16*
  %155 = bitcast %"class.v8_inspector::String16"* %15 to i8**
  br label %213

156:                                              ; preds = %105, %205
  %157 = phi i64 [ %103, %105 ], [ %208, %205 ]
  %158 = phi i64 [ 0, %105 ], [ %206, %205 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #10
  %159 = call i8* @_Znwm(i64 8) #12
  %160 = inttoptr i64 %157 to %"class.v8::Local.594"*
  %161 = getelementptr inbounds %"class.v8::Local.594", %"class.v8::Local.594"* %160, i64 %158, i32 0
  %162 = load %"class.v8::Value"*, %"class.v8::Value"** %161, align 8
  %163 = icmp eq %"class.v8::Value"* %162, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %156
  %165 = bitcast %"class.v8::Value"* %162 to i64*
  %166 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %107, i64* nonnull %165) #10
  br label %167

167:                                              ; preds = %156, %164
  %168 = phi i64* [ %166, %164 ], [ null, %156 ]
  %169 = bitcast i8* %159 to i64**
  store i64* %168, i64** %169, align 8
  %170 = ptrtoint i8* %159 to i64
  store i64 %170, i64* %108, align 8
  call void @_ZN2v82V822AnnotateStrongRetainerEPmPKc(i64* %168, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN12v8_inspector12_GLOBAL__N_132kGlobalConsoleMessageHandleLabelE, i64 0, i64 0)) #10
  %171 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %111, align 8
  %172 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %113, align 8
  %173 = icmp ult %"class.std::__1::unique_ptr.11"* %171, %172
  br i1 %173, label %174, label %179

174:                                              ; preds = %167
  %175 = load i64, i64* %108, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %109, align 8
  %176 = bitcast %"class.std::__1::unique_ptr.11"* %171 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %171, i64 1
  %178 = ptrtoint %"class.std::__1::unique_ptr.11"* %177 to i64
  store i64 %178, i64* %116, align 8
  br label %180

179:                                              ; preds = %167
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2v86GlobalINS2_5ValueEEENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.9"* %115, %"class.std::__1::unique_ptr.11"* nonnull dereferenceable(8) %13) #10
  br label %180

180:                                              ; preds = %174, %179
  %181 = load i64, i64* %100, align 8
  %182 = load i64, i64* %102, align 8
  %183 = sub i64 %181, %182
  %184 = ashr exact i64 %183, 3
  %185 = icmp ugt i64 %184, %158
  br i1 %185, label %188, label %186

186:                                              ; preds = %180
  %187 = bitcast %"class.std::__1::vector.651"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %187) #11
  unreachable

188:                                              ; preds = %180
  %189 = inttoptr i64 %182 to %"class.v8::Local.594"*
  %190 = getelementptr inbounds %"class.v8::Local.594", %"class.v8::Local.594"* %189, i64 %158, i32 0
  %191 = load %"class.v8::Value"*, %"class.v8::Value"** %190, align 8
  %192 = call i32 @_ZN2v85debug18EstimatedValueSizeEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %19, %"class.v8::Value"* %191) #10
  %193 = load i32, i32* %118, align 4
  %194 = add nsw i32 %193, %192
  store i32 %194, i32* %118, align 4
  %195 = load %"class.v8::Global"*, %"class.v8::Global"** %109, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %109, align 8
  %196 = icmp eq %"class.v8::Global"* %195, null
  br i1 %196, label %205, label %197

197:                                              ; preds = %188
  %198 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %195, i64 0, i32 0, i32 0
  %199 = load %"class.v8::Value"*, %"class.v8::Value"** %198, align 8
  %200 = icmp eq %"class.v8::Value"* %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = bitcast %"class.v8::Value"* %199 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %202) #10
  br label %203

203:                                              ; preds = %201, %197
  %204 = bitcast %"class.v8::Global"* %195 to i8*
  call void @_ZdlPv(i8* %204) #12
  br label %205

205:                                              ; preds = %188, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #10
  %206 = add nuw i64 %158, 1
  %207 = load i64, i64* %100, align 8
  %208 = load i64, i64* %102, align 8
  %209 = sub i64 %207, %208
  %210 = ashr exact i64 %209, 3
  %211 = icmp ult i64 %206, %210
  br i1 %211, label %156, label %119

212:                                              ; preds = %625, %86, %119
  switch i32 %5, label %628 [
    i32 15, label %630
    i32 14, label %630
    i32 1, label %630
    i32 13, label %629
    i32 3, label %629
    i32 4, label %633
  ]

213:                                              ; preds = %625, %121
  %214 = phi i64 [ 0, %121 ], [ %626, %625 ]
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %213
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #10
  %217 = load %"class.v8::Local.594"*, %"class.v8::Local.594"** %133, align 8
  br label %411

218:                                              ; preds = %213
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #10
  %219 = load i8, i8* %125, align 1
  %220 = icmp slt i8 %219, 0
  %221 = load i16*, i16** %126, align 8
  %222 = load i64, i64* %127, align 8
  %223 = zext i8 %219 to i64
  %224 = select i1 %220, i16* %221, i16* %128
  %225 = select i1 %220, i64 %222, i64 %223
  %226 = load i8, i8* %31, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %233

228:                                              ; preds = %218
  %229 = load i64, i64* %129, align 8
  %230 = and i64 %229, 9223372036854775807
  %231 = add nsw i64 %230, -1
  %232 = load i64, i64* %29, align 8
  br label %235

233:                                              ; preds = %218
  %234 = zext i8 %226 to i64
  br label %235

235:                                              ; preds = %233, %228
  %236 = phi i64 [ %231, %228 ], [ 10, %233 ]
  %237 = phi i64 [ %232, %228 ], [ %234, %233 ]
  %238 = sub i64 %236, %237
  %239 = icmp ult i64 %238, %225
  br i1 %239, label %400, label %240

240:                                              ; preds = %235
  %241 = icmp eq i64 %225, 0
  br i1 %241, label %403, label %242

242:                                              ; preds = %240
  br i1 %227, label %243, label %245

243:                                              ; preds = %242
  %244 = load i16*, i16** %27, align 8
  br label %245

245:                                              ; preds = %242, %243
  %246 = phi i16* [ %244, %243 ], [ %130, %242 ]
  %247 = getelementptr inbounds i16, i16* %246, i64 %237
  %248 = icmp ult i64 %225, 16
  br i1 %248, label %338, label %249

249:                                              ; preds = %245
  %250 = add i64 %225, %237
  %251 = getelementptr i16, i16* %246, i64 %250
  %252 = getelementptr i16, i16* %224, i64 %225
  %253 = icmp ult i16* %247, %252
  %254 = icmp ult i16* %224, %251
  %255 = and i1 %253, %254
  br i1 %255, label %338, label %256

256:                                              ; preds = %249
  %257 = and i64 %225, -16
  %258 = getelementptr i16, i16* %247, i64 %257
  %259 = sub i64 %225, %257
  %260 = getelementptr i16, i16* %224, i64 %257
  %261 = add i64 %257, -16
  %262 = lshr exact i64 %261, 4
  %263 = add nuw nsw i64 %262, 1
  %264 = and i64 %263, 3
  %265 = icmp ult i64 %261, 48
  br i1 %265, label %317, label %266

266:                                              ; preds = %256
  %267 = sub nsw i64 %263, %264
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i64 [ 0, %266 ], [ %314, %268 ]
  %270 = phi i64 [ %267, %266 ], [ %315, %268 ]
  %271 = getelementptr i16, i16* %247, i64 %269
  %272 = getelementptr i16, i16* %224, i64 %269
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !71
  %275 = getelementptr i16, i16* %272, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !71
  %278 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !74, !noalias !71
  %279 = getelementptr i16, i16* %271, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !74, !noalias !71
  %281 = or i64 %269, 16
  %282 = getelementptr i16, i16* %247, i64 %281
  %283 = getelementptr i16, i16* %224, i64 %281
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !71
  %286 = getelementptr i16, i16* %283, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !71
  %289 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !74, !noalias !71
  %290 = getelementptr i16, i16* %282, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !74, !noalias !71
  %292 = or i64 %269, 32
  %293 = getelementptr i16, i16* %247, i64 %292
  %294 = getelementptr i16, i16* %224, i64 %292
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !71
  %297 = getelementptr i16, i16* %294, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !71
  %300 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !74, !noalias !71
  %301 = getelementptr i16, i16* %293, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !74, !noalias !71
  %303 = or i64 %269, 48
  %304 = getelementptr i16, i16* %247, i64 %303
  %305 = getelementptr i16, i16* %224, i64 %303
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !71
  %308 = getelementptr i16, i16* %305, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !71
  %311 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !74, !noalias !71
  %312 = getelementptr i16, i16* %304, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !74, !noalias !71
  %314 = add i64 %269, 64
  %315 = add i64 %270, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %268, !llvm.loop !76

317:                                              ; preds = %268, %256
  %318 = phi i64 [ 0, %256 ], [ %314, %268 ]
  %319 = icmp eq i64 %264, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %333, %320 ], [ %318, %317 ]
  %322 = phi i64 [ %334, %320 ], [ %264, %317 ]
  %323 = getelementptr i16, i16* %247, i64 %321
  %324 = getelementptr i16, i16* %224, i64 %321
  %325 = bitcast i16* %324 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !71
  %327 = getelementptr i16, i16* %324, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !71
  %330 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !74, !noalias !71
  %331 = getelementptr i16, i16* %323, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !74, !noalias !71
  %333 = add i64 %321, 16
  %334 = add i64 %322, -1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %320, !llvm.loop !77

336:                                              ; preds = %320, %317
  %337 = icmp eq i64 %225, %257
  br i1 %337, label %391, label %338

338:                                              ; preds = %336, %249, %245
  %339 = phi i16* [ %247, %249 ], [ %247, %245 ], [ %258, %336 ]
  %340 = phi i64 [ %225, %249 ], [ %225, %245 ], [ %259, %336 ]
  %341 = phi i16* [ %224, %249 ], [ %224, %245 ], [ %260, %336 ]
  %342 = add i64 %340, -1
  %343 = and i64 %340, 7
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %338, %345
  %346 = phi i16* [ %352, %345 ], [ %339, %338 ]
  %347 = phi i64 [ %351, %345 ], [ %340, %338 ]
  %348 = phi i16* [ %353, %345 ], [ %341, %338 ]
  %349 = phi i64 [ %354, %345 ], [ %343, %338 ]
  %350 = load i16, i16* %348, align 2
  store i16 %350, i16* %346, align 2
  %351 = add i64 %347, -1
  %352 = getelementptr inbounds i16, i16* %346, i64 1
  %353 = getelementptr inbounds i16, i16* %348, i64 1
  %354 = add i64 %349, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %345, !llvm.loop !78

356:                                              ; preds = %345, %338
  %357 = phi i16* [ %339, %338 ], [ %352, %345 ]
  %358 = phi i64 [ %340, %338 ], [ %351, %345 ]
  %359 = phi i16* [ %341, %338 ], [ %353, %345 ]
  %360 = icmp ult i64 %342, 7
  br i1 %360, label %391, label %361

361:                                              ; preds = %356, %361
  %362 = phi i16* [ %388, %361 ], [ %357, %356 ]
  %363 = phi i64 [ %387, %361 ], [ %358, %356 ]
  %364 = phi i16* [ %389, %361 ], [ %359, %356 ]
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %362, align 2
  %366 = getelementptr inbounds i16, i16* %362, i64 1
  %367 = getelementptr inbounds i16, i16* %364, i64 1
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %362, i64 2
  %370 = getelementptr inbounds i16, i16* %364, i64 2
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %362, i64 3
  %373 = getelementptr inbounds i16, i16* %364, i64 3
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %362, i64 4
  %376 = getelementptr inbounds i16, i16* %364, i64 4
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %362, i64 5
  %379 = getelementptr inbounds i16, i16* %364, i64 5
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %362, i64 6
  %382 = getelementptr inbounds i16, i16* %364, i64 6
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %362, i64 7
  %385 = getelementptr inbounds i16, i16* %364, i64 7
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = add i64 %363, -8
  %388 = getelementptr inbounds i16, i16* %362, i64 8
  %389 = getelementptr inbounds i16, i16* %364, i64 8
  %390 = icmp eq i64 %387, 0
  br i1 %390, label %391, label %361, !llvm.loop !79

391:                                              ; preds = %356, %361, %336
  %392 = add i64 %237, %225
  %393 = load i8, i8* %31, align 1
  %394 = icmp slt i8 %393, 0
  br i1 %394, label %395, label %396

395:                                              ; preds = %391
  store i64 %392, i64* %29, align 8
  br label %398

396:                                              ; preds = %391
  %397 = trunc i64 %392 to i8
  store i8 %397, i8* %31, align 1
  br label %398

398:                                              ; preds = %396, %395
  %399 = getelementptr inbounds i16, i16* %246, i64 %392
  store i16 0, i16* %399, align 2
  br label %403

400:                                              ; preds = %235
  %401 = add i64 %237, %225
  %402 = sub i64 %401, %236
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %123, i64 %236, i64 %402, i64 %237, i64 %237, i64 0, i64 %225, i16* %224) #10
  br label %403

403:                                              ; preds = %240, %398, %400
  %404 = load i8, i8* %125, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %408

406:                                              ; preds = %403
  %407 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %407) #12
  br label %408

408:                                              ; preds = %403, %406
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #10
  %409 = load %"class.v8::Local.594"*, %"class.v8::Local.594"** %133, align 8
  %410 = getelementptr inbounds %"class.v8::Local.594", %"class.v8::Local.594"* %409, i64 %214
  br label %411

411:                                              ; preds = %216, %408
  %412 = phi %"class.v8::Local.594"* [ %217, %216 ], [ %410, %408 ]
  %413 = getelementptr inbounds %"class.v8::Local.594", %"class.v8::Local.594"* %412, i64 0, i32 0
  %414 = load %"class.v8::Value"*, %"class.v8::Value"** %413, align 8
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %134) #10, !noalias !80
  store i32 10000, i32* %136, align 8, !noalias !80
  %415 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #10, !noalias !80
  store %"class.v8::Isolate"* %415, %"class.v8::Isolate"** %137, align 8, !noalias !80
  call void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"* %138) #10, !noalias !80
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #10, !noalias !80
  %416 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #10, !noalias !80
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* %141, %"class.v8::Isolate"* %416) #10, !noalias !80
  store i64 %135, i64* %143, align 8, !noalias !80
  %417 = call fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder6appendEN2v85LocalINS2_5ValueEEEj(%"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* nonnull %10, %"class.v8::Value"* %414, i32 0) #10, !noalias !80
  br i1 %417, label %419, label %418

418:                                              ; preds = %411
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 32, i1 false) #10, !alias.scope !80
  br label %423

419:                                              ; preds = %411
  %420 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %141) #10, !noalias !83
  br i1 %420, label %421, label %422

421:                                              ; preds = %419
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 32, i1 false) #10, !alias.scope !83
  br label %423

422:                                              ; preds = %419
  call void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* nonnull sret %15, %"class.v8_inspector::String16Builder"* %138) #10
  br label %423

423:                                              ; preds = %422, %421, %418
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* %141) #10
  %424 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %144, align 8, !noalias !80
  %425 = icmp eq %"class.v8::Local.595"* %424, null
  br i1 %425, label %429, label %426

426:                                              ; preds = %423
  %427 = ptrtoint %"class.v8::Local.595"* %424 to i64
  store i64 %427, i64* %146, align 8, !noalias !80
  %428 = bitcast %"class.v8::Local.595"* %424 to i8*
  call void @_ZdlPv(i8* %428) #12
  br label %429

429:                                              ; preds = %426, %423
  %430 = load i16*, i16** %147, align 8, !noalias !80
  %431 = icmp eq i16* %430, null
  br i1 %431, label %435, label %432

432:                                              ; preds = %429
  %433 = ptrtoint i16* %430 to i64
  store i64 %433, i64* %149, align 8, !noalias !80
  %434 = bitcast i16* %430 to i8*
  call void @_ZdlPv(i8* %434) #12
  br label %435

435:                                              ; preds = %429, %432
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %134) #10, !noalias !80
  %436 = load i8, i8* %151, align 1
  %437 = icmp slt i8 %436, 0
  %438 = load i16*, i16** %152, align 8
  %439 = load i64, i64* %153, align 8
  %440 = zext i8 %436 to i64
  %441 = select i1 %437, i16* %438, i16* %154
  %442 = select i1 %437, i64 %439, i64 %440
  %443 = load i8, i8* %31, align 1
  %444 = icmp slt i8 %443, 0
  br i1 %444, label %445, label %450

445:                                              ; preds = %435
  %446 = load i64, i64* %129, align 8
  %447 = and i64 %446, 9223372036854775807
  %448 = add nsw i64 %447, -1
  %449 = load i64, i64* %29, align 8
  br label %452

450:                                              ; preds = %435
  %451 = zext i8 %443 to i64
  br label %452

452:                                              ; preds = %450, %445
  %453 = phi i64 [ %448, %445 ], [ 10, %450 ]
  %454 = phi i64 [ %449, %445 ], [ %451, %450 ]
  %455 = sub i64 %453, %454
  %456 = icmp ult i64 %455, %442
  br i1 %456, label %617, label %457

457:                                              ; preds = %452
  %458 = icmp eq i64 %442, 0
  br i1 %458, label %620, label %459

459:                                              ; preds = %457
  br i1 %444, label %460, label %462

460:                                              ; preds = %459
  %461 = load i16*, i16** %27, align 8
  br label %462

462:                                              ; preds = %459, %460
  %463 = phi i16* [ %461, %460 ], [ %130, %459 ]
  %464 = getelementptr inbounds i16, i16* %463, i64 %454
  %465 = icmp ult i64 %442, 16
  br i1 %465, label %555, label %466

466:                                              ; preds = %462
  %467 = add i64 %442, %454
  %468 = getelementptr i16, i16* %463, i64 %467
  %469 = getelementptr i16, i16* %441, i64 %442
  %470 = icmp ult i16* %464, %469
  %471 = icmp ult i16* %441, %468
  %472 = and i1 %470, %471
  br i1 %472, label %555, label %473

473:                                              ; preds = %466
  %474 = and i64 %442, -16
  %475 = getelementptr i16, i16* %464, i64 %474
  %476 = sub i64 %442, %474
  %477 = getelementptr i16, i16* %441, i64 %474
  %478 = add i64 %474, -16
  %479 = lshr exact i64 %478, 4
  %480 = add nuw nsw i64 %479, 1
  %481 = and i64 %480, 3
  %482 = icmp ult i64 %478, 48
  br i1 %482, label %534, label %483

483:                                              ; preds = %473
  %484 = sub nsw i64 %480, %481
  br label %485

485:                                              ; preds = %485, %483
  %486 = phi i64 [ 0, %483 ], [ %531, %485 ]
  %487 = phi i64 [ %484, %483 ], [ %532, %485 ]
  %488 = getelementptr i16, i16* %464, i64 %486
  %489 = getelementptr i16, i16* %441, i64 %486
  %490 = bitcast i16* %489 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !86
  %492 = getelementptr i16, i16* %489, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !86
  %495 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %495, align 2, !alias.scope !89, !noalias !86
  %496 = getelementptr i16, i16* %488, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %497, align 2, !alias.scope !89, !noalias !86
  %498 = or i64 %486, 16
  %499 = getelementptr i16, i16* %464, i64 %498
  %500 = getelementptr i16, i16* %441, i64 %498
  %501 = bitcast i16* %500 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !86
  %503 = getelementptr i16, i16* %500, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !86
  %506 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !89, !noalias !86
  %507 = getelementptr i16, i16* %499, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !89, !noalias !86
  %509 = or i64 %486, 32
  %510 = getelementptr i16, i16* %464, i64 %509
  %511 = getelementptr i16, i16* %441, i64 %509
  %512 = bitcast i16* %511 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !86
  %514 = getelementptr i16, i16* %511, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !86
  %517 = bitcast i16* %510 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !89, !noalias !86
  %518 = getelementptr i16, i16* %510, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !89, !noalias !86
  %520 = or i64 %486, 48
  %521 = getelementptr i16, i16* %464, i64 %520
  %522 = getelementptr i16, i16* %441, i64 %520
  %523 = bitcast i16* %522 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !86
  %525 = getelementptr i16, i16* %522, i64 8
  %526 = bitcast i16* %525 to <8 x i16>*
  %527 = load <8 x i16>, <8 x i16>* %526, align 2, !alias.scope !86
  %528 = bitcast i16* %521 to <8 x i16>*
  store <8 x i16> %524, <8 x i16>* %528, align 2, !alias.scope !89, !noalias !86
  %529 = getelementptr i16, i16* %521, i64 8
  %530 = bitcast i16* %529 to <8 x i16>*
  store <8 x i16> %527, <8 x i16>* %530, align 2, !alias.scope !89, !noalias !86
  %531 = add i64 %486, 64
  %532 = add i64 %487, -4
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %534, label %485, !llvm.loop !91

534:                                              ; preds = %485, %473
  %535 = phi i64 [ 0, %473 ], [ %531, %485 ]
  %536 = icmp eq i64 %481, 0
  br i1 %536, label %553, label %537

537:                                              ; preds = %534, %537
  %538 = phi i64 [ %550, %537 ], [ %535, %534 ]
  %539 = phi i64 [ %551, %537 ], [ %481, %534 ]
  %540 = getelementptr i16, i16* %464, i64 %538
  %541 = getelementptr i16, i16* %441, i64 %538
  %542 = bitcast i16* %541 to <8 x i16>*
  %543 = load <8 x i16>, <8 x i16>* %542, align 2, !alias.scope !86
  %544 = getelementptr i16, i16* %541, i64 8
  %545 = bitcast i16* %544 to <8 x i16>*
  %546 = load <8 x i16>, <8 x i16>* %545, align 2, !alias.scope !86
  %547 = bitcast i16* %540 to <8 x i16>*
  store <8 x i16> %543, <8 x i16>* %547, align 2, !alias.scope !89, !noalias !86
  %548 = getelementptr i16, i16* %540, i64 8
  %549 = bitcast i16* %548 to <8 x i16>*
  store <8 x i16> %546, <8 x i16>* %549, align 2, !alias.scope !89, !noalias !86
  %550 = add i64 %538, 16
  %551 = add i64 %539, -1
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %537, !llvm.loop !92

553:                                              ; preds = %537, %534
  %554 = icmp eq i64 %442, %474
  br i1 %554, label %608, label %555

555:                                              ; preds = %553, %466, %462
  %556 = phi i16* [ %464, %466 ], [ %464, %462 ], [ %475, %553 ]
  %557 = phi i64 [ %442, %466 ], [ %442, %462 ], [ %476, %553 ]
  %558 = phi i16* [ %441, %466 ], [ %441, %462 ], [ %477, %553 ]
  %559 = add i64 %557, -1
  %560 = and i64 %557, 7
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %573, label %562

562:                                              ; preds = %555, %562
  %563 = phi i16* [ %569, %562 ], [ %556, %555 ]
  %564 = phi i64 [ %568, %562 ], [ %557, %555 ]
  %565 = phi i16* [ %570, %562 ], [ %558, %555 ]
  %566 = phi i64 [ %571, %562 ], [ %560, %555 ]
  %567 = load i16, i16* %565, align 2
  store i16 %567, i16* %563, align 2
  %568 = add i64 %564, -1
  %569 = getelementptr inbounds i16, i16* %563, i64 1
  %570 = getelementptr inbounds i16, i16* %565, i64 1
  %571 = add i64 %566, -1
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %562, !llvm.loop !93

573:                                              ; preds = %562, %555
  %574 = phi i16* [ %556, %555 ], [ %569, %562 ]
  %575 = phi i64 [ %557, %555 ], [ %568, %562 ]
  %576 = phi i16* [ %558, %555 ], [ %570, %562 ]
  %577 = icmp ult i64 %559, 7
  br i1 %577, label %608, label %578

578:                                              ; preds = %573, %578
  %579 = phi i16* [ %605, %578 ], [ %574, %573 ]
  %580 = phi i64 [ %604, %578 ], [ %575, %573 ]
  %581 = phi i16* [ %606, %578 ], [ %576, %573 ]
  %582 = load i16, i16* %581, align 2
  store i16 %582, i16* %579, align 2
  %583 = getelementptr inbounds i16, i16* %579, i64 1
  %584 = getelementptr inbounds i16, i16* %581, i64 1
  %585 = load i16, i16* %584, align 2
  store i16 %585, i16* %583, align 2
  %586 = getelementptr inbounds i16, i16* %579, i64 2
  %587 = getelementptr inbounds i16, i16* %581, i64 2
  %588 = load i16, i16* %587, align 2
  store i16 %588, i16* %586, align 2
  %589 = getelementptr inbounds i16, i16* %579, i64 3
  %590 = getelementptr inbounds i16, i16* %581, i64 3
  %591 = load i16, i16* %590, align 2
  store i16 %591, i16* %589, align 2
  %592 = getelementptr inbounds i16, i16* %579, i64 4
  %593 = getelementptr inbounds i16, i16* %581, i64 4
  %594 = load i16, i16* %593, align 2
  store i16 %594, i16* %592, align 2
  %595 = getelementptr inbounds i16, i16* %579, i64 5
  %596 = getelementptr inbounds i16, i16* %581, i64 5
  %597 = load i16, i16* %596, align 2
  store i16 %597, i16* %595, align 2
  %598 = getelementptr inbounds i16, i16* %579, i64 6
  %599 = getelementptr inbounds i16, i16* %581, i64 6
  %600 = load i16, i16* %599, align 2
  store i16 %600, i16* %598, align 2
  %601 = getelementptr inbounds i16, i16* %579, i64 7
  %602 = getelementptr inbounds i16, i16* %581, i64 7
  %603 = load i16, i16* %602, align 2
  store i16 %603, i16* %601, align 2
  %604 = add i64 %580, -8
  %605 = getelementptr inbounds i16, i16* %579, i64 8
  %606 = getelementptr inbounds i16, i16* %581, i64 8
  %607 = icmp eq i64 %604, 0
  br i1 %607, label %608, label %578, !llvm.loop !94

608:                                              ; preds = %573, %578, %553
  %609 = add i64 %454, %442
  %610 = load i8, i8* %31, align 1
  %611 = icmp slt i8 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %608
  store i64 %609, i64* %29, align 8
  br label %615

613:                                              ; preds = %608
  %614 = trunc i64 %609 to i8
  store i8 %614, i8* %31, align 1
  br label %615

615:                                              ; preds = %613, %612
  %616 = getelementptr inbounds i16, i16* %463, i64 %609
  store i16 0, i16* %616, align 2
  br label %620

617:                                              ; preds = %452
  %618 = add i64 %454, %442
  %619 = sub i64 %618, %453
  call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %123, i64 %453, i64 %619, i64 %454, i64 %454, i64 0, i64 %442, i16* %441) #10
  br label %620

620:                                              ; preds = %457, %615, %617
  %621 = load i8, i8* %151, align 1
  %622 = icmp slt i8 %621, 0
  br i1 %622, label %623, label %625

623:                                              ; preds = %620
  %624 = load i8*, i8** %155, align 8
  call void @_ZdlPv(i8* %624) #12
  br label %625

625:                                              ; preds = %620, %623
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #10
  %626 = add nuw i64 %214, 1
  %627 = icmp eq i64 %626, %210
  br i1 %627, label %212, label %213

628:                                              ; preds = %212
  br label %630

629:                                              ; preds = %212, %212
  br label %630

630:                                              ; preds = %628, %212, %212, %212, %629
  %631 = phi i32 [ 2, %212 ], [ 2, %212 ], [ 2, %212 ], [ 4, %628 ], [ 8, %629 ]
  %632 = icmp eq i32 %5, 12
  br i1 %632, label %651, label %633

633:                                              ; preds = %212, %630
  %634 = phi i32 [ %631, %630 ], [ 16, %212 ]
  %635 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %3, i64 0, i32 2
  %636 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %635, align 8
  %637 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %637) #10
  call void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* nonnull sret %16, %"class.v8_inspector::String16"* dereferenceable(32) %26) #10
  %638 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %638) #10
  call void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* nonnull sret %17, %"class.v8_inspector::String16"* dereferenceable(32) %33) #10
  %639 = getelementptr inbounds i8, i8* %20, i64 80
  %640 = bitcast i8* %639 to i32*
  %641 = load i32, i32* %640, align 8
  %642 = getelementptr inbounds i8, i8* %20, i64 84
  %643 = bitcast i8* %642 to i32*
  %644 = load i32, i32* %643, align 4
  %645 = load %"class.v8_inspector::V8StackTraceImpl"*, %"class.v8_inspector::V8StackTraceImpl"** %77, align 8
  %646 = getelementptr inbounds %"class.v8_inspector::V8StackTraceImpl", %"class.v8_inspector::V8StackTraceImpl"* %645, i64 0, i32 0
  %647 = bitcast %"class.v8_inspector::V8InspectorClient"* %636 to void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)***
  %648 = load void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)**, void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)*** %647, align 8
  %649 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)** %648, i64 17
  %650 = load void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)*, void (%"class.v8_inspector::V8InspectorClient"*, i32, i32, %"class.v8_inspector::StringView"*, %"class.v8_inspector::StringView"*, i32, i32, %"class.v8_inspector::V8StackTrace"*)** %649, align 8
  call void %650(%"class.v8_inspector::V8InspectorClient"* %636, i32 %2, i32 %634, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %16, %"class.v8_inspector::StringView"* nonnull dereferenceable(24) %17, i32 %641, i32 %644, %"class.v8_inspector::V8StackTrace"* %646) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %638) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %637) #10
  br label %651

651:                                              ; preds = %630, %633
  ret %"class.v8_inspector::V8ConsoleMessage"* %21
}

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12v8_inspector10toString16ERKNS_10StringViewE(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZN2v85debug18EstimatedValueSizeEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector12toStringViewERKNS_8String16E(%"class.v8_inspector::StringView"* sret, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::V8ConsoleMessage"* @_ZN12v8_inspector16V8ConsoleMessage18createForExceptionEdRKNS_8String16ES3_jjNSt3__110unique_ptrINS_16V8StackTraceImplENS4_14default_deleteIS6_EEEEiPN2v87IsolateES3_iNSA_5LocalINSA_5ValueEEEj(double, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"* dereferenceable(32), i32, i32, %"class.v8_inspector::V8StackTraceImpl"*, i32, %"class.v8::Isolate"*, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32), i32, i64, i32) local_unnamed_addr #0 align 2 {
  %13 = alloca %"class.std::__1::unique_ptr.11", align 8
  %14 = inttoptr i64 %10 to %"class.v8::Value"*
  %15 = tail call i8* @_Znwm(i64 208) #12
  %16 = bitcast i8* %15 to %"class.v8_inspector::V8ConsoleMessage"*
  %17 = bitcast i8* %15 to i32*
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to double*
  store double %0, double* %19, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 16
  %21 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %12
  %26 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %26, i64 24, i1 false) #10
  br label %206

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = bitcast i16* %29 to i8*
  %31 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 11
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = trunc i64 %32 to i8
  %36 = getelementptr inbounds i8, i8* %15, i64 39
  store i8 %35, i8* %36, align 1
  br label %55

37:                                               ; preds = %27
  %38 = icmp ugt i64 %32, 9223372036854775791
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = bitcast i8* %20 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %40) #11
  unreachable

41:                                               ; preds = %37
  %42 = add nuw nsw i64 %32, 8
  %43 = and i64 %42, -8
  %44 = icmp slt i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %41
  %47 = shl i64 %43, 1
  %48 = tail call i8* @_Znwm(i64 %47) #12
  %49 = bitcast i8* %20 to i8**
  store i8* %48, i8** %49, align 8
  %50 = or i64 %43, -9223372036854775808
  %51 = getelementptr inbounds i8, i8* %15, i64 32
  %52 = bitcast i8* %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %15, i64 24
  %54 = bitcast i8* %53 to i64*
  store i64 %32, i64* %54, align 8
  br label %55

55:                                               ; preds = %46, %34
  %56 = phi i8* [ %20, %34 ], [ %48, %46 ]
  %57 = bitcast i8* %56 to i16*
  %58 = add nuw nsw i64 %32, 1
  %59 = add i64 %32, 1
  %60 = icmp ult i64 %59, 16
  br i1 %60, label %153, label %61

61:                                               ; preds = %55
  %62 = shl i64 %32, 1
  %63 = add i64 %62, 2
  %64 = getelementptr i8, i8* %56, i64 %63
  %65 = add i64 %32, 1
  %66 = getelementptr i16, i16* %29, i64 %65
  %67 = bitcast i16* %66 to i8*
  %68 = icmp ult i8* %56, %67
  %69 = icmp ugt i8* %64, %30
  %70 = and i1 %68, %69
  br i1 %70, label %153, label %71

71:                                               ; preds = %61
  %72 = and i64 %59, -16
  %73 = getelementptr i16, i16* %57, i64 %72
  %74 = sub i64 %58, %72
  %75 = getelementptr i16, i16* %29, i64 %72
  %76 = add i64 %72, -16
  %77 = lshr exact i64 %76, 4
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 3
  %80 = icmp ult i64 %76, 48
  br i1 %80, label %132, label %81

81:                                               ; preds = %71
  %82 = sub nsw i64 %78, %79
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %129, %83 ]
  %85 = phi i64 [ %82, %81 ], [ %130, %83 ]
  %86 = getelementptr i16, i16* %57, i64 %84
  %87 = getelementptr i16, i16* %29, i64 %84
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !95
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !95
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !98, !noalias !95
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !98, !noalias !95
  %96 = or i64 %84, 16
  %97 = getelementptr i16, i16* %57, i64 %96
  %98 = getelementptr i16, i16* %29, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !95
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !95
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !98, !noalias !95
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !98, !noalias !95
  %107 = or i64 %84, 32
  %108 = getelementptr i16, i16* %57, i64 %107
  %109 = getelementptr i16, i16* %29, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !95
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !95
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !98, !noalias !95
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !98, !noalias !95
  %118 = or i64 %84, 48
  %119 = getelementptr i16, i16* %57, i64 %118
  %120 = getelementptr i16, i16* %29, i64 %118
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !95
  %123 = getelementptr i16, i16* %120, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !95
  %126 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !98, !noalias !95
  %127 = getelementptr i16, i16* %119, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !98, !noalias !95
  %129 = add i64 %84, 64
  %130 = add i64 %85, -4
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %83, !llvm.loop !100

132:                                              ; preds = %83, %71
  %133 = phi i64 [ 0, %71 ], [ %129, %83 ]
  %134 = icmp eq i64 %79, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132, %135
  %136 = phi i64 [ %148, %135 ], [ %133, %132 ]
  %137 = phi i64 [ %149, %135 ], [ %79, %132 ]
  %138 = getelementptr i16, i16* %57, i64 %136
  %139 = getelementptr i16, i16* %29, i64 %136
  %140 = bitcast i16* %139 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !95
  %142 = getelementptr i16, i16* %139, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !95
  %145 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !98, !noalias !95
  %146 = getelementptr i16, i16* %138, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !98, !noalias !95
  %148 = add i64 %136, 16
  %149 = add i64 %137, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %135, !llvm.loop !101

151:                                              ; preds = %135, %132
  %152 = icmp eq i64 %59, %72
  br i1 %152, label %206, label %153

153:                                              ; preds = %151, %61, %55
  %154 = phi i16* [ %57, %61 ], [ %57, %55 ], [ %73, %151 ]
  %155 = phi i64 [ %58, %61 ], [ %58, %55 ], [ %74, %151 ]
  %156 = phi i16* [ %29, %61 ], [ %29, %55 ], [ %75, %151 ]
  %157 = add i64 %155, -1
  %158 = and i64 %155, 7
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %153, %160
  %161 = phi i16* [ %167, %160 ], [ %154, %153 ]
  %162 = phi i64 [ %166, %160 ], [ %155, %153 ]
  %163 = phi i16* [ %168, %160 ], [ %156, %153 ]
  %164 = phi i64 [ %169, %160 ], [ %158, %153 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %161, align 2
  %166 = add i64 %162, -1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = getelementptr inbounds i16, i16* %163, i64 1
  %169 = add i64 %164, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %160, !llvm.loop !102

171:                                              ; preds = %160, %153
  %172 = phi i16* [ %154, %153 ], [ %167, %160 ]
  %173 = phi i64 [ %155, %153 ], [ %166, %160 ]
  %174 = phi i16* [ %156, %153 ], [ %168, %160 ]
  %175 = icmp ult i64 %157, 7
  br i1 %175, label %206, label %176

176:                                              ; preds = %171, %176
  %177 = phi i16* [ %203, %176 ], [ %172, %171 ]
  %178 = phi i64 [ %202, %176 ], [ %173, %171 ]
  %179 = phi i16* [ %204, %176 ], [ %174, %171 ]
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %177, align 2
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = getelementptr inbounds i16, i16* %179, i64 1
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = getelementptr inbounds i16, i16* %179, i64 2
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = getelementptr inbounds i16, i16* %179, i64 3
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = getelementptr inbounds i16, i16* %179, i64 4
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = getelementptr inbounds i16, i16* %179, i64 5
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = getelementptr inbounds i16, i16* %179, i64 6
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = getelementptr inbounds i16, i16* %179, i64 7
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = add i64 %178, -8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = getelementptr inbounds i16, i16* %179, i64 8
  %205 = icmp eq i64 %202, 0
  br i1 %205, label %206, label %176, !llvm.loop !103

206:                                              ; preds = %171, %176, %151, %25
  %207 = getelementptr inbounds i8, i8* %15, i64 40
  %208 = bitcast i8* %207 to i64*
  %209 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %8, i64 0, i32 1
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds i8, i8* %15, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 160, i1 false) #10
  tail call void @_ZN12v8_inspector16V8ConsoleMessage11setLocationERKNS_8String16EjjNSt3__110unique_ptrINS_16V8StackTraceImplENS4_14default_deleteIS6_EEEEi(%"class.v8_inspector::V8ConsoleMessage"* nonnull %16, %"class.v8_inspector::String16"* dereferenceable(32) %2, i32 %3, i32 %4, %"class.v8_inspector::V8StackTraceImpl"* %5, i32 %6)
  %212 = getelementptr inbounds i8, i8* %15, i64 108
  %213 = bitcast i8* %212 to i32*
  store i32 %11, i32* %213, align 4
  %214 = getelementptr inbounds i8, i8* %15, i64 144
  %215 = bitcast i8* %214 to %"class.std::__1::basic_string"*
  %216 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0
  %217 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"* %215, %"class.std::__1::basic_string"* dereferenceable(24) %216) #10
  %218 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %219 = load i64, i64* %218, align 8
  %220 = getelementptr inbounds i8, i8* %15, i64 168
  %221 = bitcast i8* %220 to i64*
  store i64 %219, i64* %221, align 8
  %222 = icmp eq i32 %9, 0
  %223 = icmp eq i64 %10, 0
  %224 = or i1 %222, %223
  br i1 %224, label %270, label %225

225:                                              ; preds = %206
  %226 = getelementptr inbounds i8, i8* %15, i64 100
  %227 = bitcast i8* %226 to i32*
  store i32 %9, i32* %227, align 4
  %228 = bitcast %"class.std::__1::unique_ptr.11"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #10
  %229 = tail call i8* @_Znwm(i64 8) #12
  %230 = inttoptr i64 %10 to i64*
  %231 = bitcast %"class.v8::Isolate"* %7 to %"class.v8::internal::Isolate"*
  %232 = tail call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %231, i64* nonnull %230) #10
  %233 = bitcast i8* %229 to i64**
  store i64* %232, i64** %233, align 8
  %234 = ptrtoint i8* %229 to i64
  %235 = bitcast %"class.std::__1::unique_ptr.11"* %13 to i64*
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds i8, i8* %15, i64 128
  %237 = bitcast i8* %236 to %"class.std::__1::unique_ptr.11"**
  %238 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %237, align 8
  %239 = getelementptr inbounds i8, i8* %15, i64 136
  %240 = bitcast i8* %239 to %"class.std::__1::unique_ptr.11"**
  %241 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %240, align 8
  %242 = icmp ult %"class.std::__1::unique_ptr.11"* %238, %241
  br i1 %242, label %243, label %249

243:                                              ; preds = %225
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::Global"* null, %"class.v8::Global"** %244, align 8
  %245 = bitcast %"class.std::__1::unique_ptr.11"* %238 to i64*
  store i64 %234, i64* %245, align 8
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %238, i64 1
  %247 = ptrtoint %"class.std::__1::unique_ptr.11"* %246 to i64
  %248 = bitcast i8* %236 to i64*
  store i64 %247, i64* %248, align 8
  br label %252

249:                                              ; preds = %225
  %250 = getelementptr inbounds i8, i8* %15, i64 120
  %251 = bitcast i8* %250 to %"class.std::__1::vector.9"*
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2v86GlobalINS2_5ValueEEENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.9"* %251, %"class.std::__1::unique_ptr.11"* nonnull dereferenceable(8) %13) #10
  br label %252

252:                                              ; preds = %243, %249
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %13, i64 0, i32 0, i32 0, i32 0
  %254 = load %"class.v8::Global"*, %"class.v8::Global"** %253, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %253, align 8
  %255 = icmp eq %"class.v8::Global"* %254, null
  br i1 %255, label %264, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %254, i64 0, i32 0, i32 0
  %258 = load %"class.v8::Value"*, %"class.v8::Value"** %257, align 8
  %259 = icmp eq %"class.v8::Value"* %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = bitcast %"class.v8::Value"* %258 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %261) #10
  br label %262

262:                                              ; preds = %260, %256
  %263 = bitcast %"class.v8::Global"* %254 to i8*
  call void @_ZdlPv(i8* %263) #12
  br label %264

264:                                              ; preds = %252, %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #10
  %265 = call i32 @_ZN2v85debug18EstimatedValueSizeEPNS_7IsolateENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %7, %"class.v8::Value"* nonnull %14) #10
  %266 = getelementptr inbounds i8, i8* %15, i64 116
  %267 = bitcast i8* %266 to i32*
  %268 = load i32, i32* %267, align 4
  %269 = add nsw i32 %268, %265
  store i32 %269, i32* %267, align 4
  br label %270

270:                                              ; preds = %206, %264
  ret %"class.v8_inspector::V8ConsoleMessage"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::V8ConsoleMessage"* @_ZN12v8_inspector16V8ConsoleMessage25createForRevokedExceptionEdRKNS_8String16Ej(double, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 208) #12
  %5 = bitcast i8* %4 to %"class.v8_inspector::V8ConsoleMessage"*
  %6 = bitcast i8* %4 to i32*
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to double*
  store double %0, double* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.v8_inspector::String16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %15, i64 24, i1 false) #10
  br label %195

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = bitcast i16* %18 to i8*
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 11
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = trunc i64 %21 to i8
  %25 = getelementptr inbounds i8, i8* %4, i64 39
  store i8 %24, i8* %25, align 1
  br label %44

26:                                               ; preds = %16
  %27 = icmp ugt i64 %21, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast i8* %9 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #11
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %21, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #11
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #12
  %38 = bitcast i8* %9 to i8**
  store i8* %37, i8** %38, align 8
  %39 = or i64 %32, -9223372036854775808
  %40 = getelementptr inbounds i8, i8* %4, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %4, i64 24
  %43 = bitcast i8* %42 to i64*
  store i64 %21, i64* %43, align 8
  br label %44

44:                                               ; preds = %35, %23
  %45 = phi i8* [ %9, %23 ], [ %37, %35 ]
  %46 = bitcast i8* %45 to i16*
  %47 = add nuw nsw i64 %21, 1
  %48 = add i64 %21, 1
  %49 = icmp ult i64 %48, 16
  br i1 %49, label %142, label %50

50:                                               ; preds = %44
  %51 = shl i64 %21, 1
  %52 = add i64 %51, 2
  %53 = getelementptr i8, i8* %45, i64 %52
  %54 = add i64 %21, 1
  %55 = getelementptr i16, i16* %18, i64 %54
  %56 = bitcast i16* %55 to i8*
  %57 = icmp ult i8* %45, %56
  %58 = icmp ugt i8* %53, %19
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %50
  %61 = and i64 %48, -16
  %62 = getelementptr i16, i16* %46, i64 %61
  %63 = sub i64 %47, %61
  %64 = getelementptr i16, i16* %18, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %46, i64 %73
  %76 = getelementptr i16, i16* %18, i64 %73
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !104
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !104
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !107, !noalias !104
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !107, !noalias !104
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %46, i64 %85
  %87 = getelementptr i16, i16* %18, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !104
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !104
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !107, !noalias !104
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !107, !noalias !104
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %46, i64 %96
  %98 = getelementptr i16, i16* %18, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !104
  %101 = getelementptr i16, i16* %98, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !104
  %104 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !107, !noalias !104
  %105 = getelementptr i16, i16* %97, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !107, !noalias !104
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %46, i64 %107
  %109 = getelementptr i16, i16* %18, i64 %107
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !104
  %112 = getelementptr i16, i16* %109, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !104
  %115 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !107, !noalias !104
  %116 = getelementptr i16, i16* %108, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !107, !noalias !104
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !109

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %46, i64 %125
  %128 = getelementptr i16, i16* %18, i64 %125
  %129 = bitcast i16* %128 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !104
  %131 = getelementptr i16, i16* %128, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !104
  %134 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !107, !noalias !104
  %135 = getelementptr i16, i16* %127, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !107, !noalias !104
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !110

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %48, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %50, %44
  %143 = phi i16* [ %46, %50 ], [ %46, %44 ], [ %62, %140 ]
  %144 = phi i64 [ %47, %50 ], [ %47, %44 ], [ %63, %140 ]
  %145 = phi i16* [ %18, %50 ], [ %18, %44 ], [ %64, %140 ]
  %146 = add i64 %144, -1
  %147 = and i64 %144, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i16* [ %156, %149 ], [ %143, %142 ]
  %151 = phi i64 [ %155, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %157, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %150, align 2
  %155 = add i64 %151, -1
  %156 = getelementptr inbounds i16, i16* %150, i64 1
  %157 = getelementptr inbounds i16, i16* %152, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !111

160:                                              ; preds = %149, %142
  %161 = phi i16* [ %143, %142 ], [ %156, %149 ]
  %162 = phi i64 [ %144, %142 ], [ %155, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %157, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i16* [ %192, %165 ], [ %161, %160 ]
  %167 = phi i64 [ %191, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %193, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %166, align 2
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %168, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %166, i64 2
  %174 = getelementptr inbounds i16, i16* %168, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %166, i64 3
  %177 = getelementptr inbounds i16, i16* %168, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %166, i64 4
  %180 = getelementptr inbounds i16, i16* %168, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %166, i64 5
  %183 = getelementptr inbounds i16, i16* %168, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %166, i64 6
  %186 = getelementptr inbounds i16, i16* %168, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %166, i64 7
  %189 = getelementptr inbounds i16, i16* %168, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %167, -8
  %192 = getelementptr inbounds i16, i16* %166, i64 8
  %193 = getelementptr inbounds i16, i16* %168, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !112

195:                                              ; preds = %160, %165, %140, %14
  %196 = getelementptr inbounds i8, i8* %4, i64 40
  %197 = bitcast i8* %196 to i64*
  %198 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 1
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %197, align 8
  %200 = getelementptr inbounds i8, i8* %4, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 160, i1 false) #10
  %201 = getelementptr inbounds i8, i8* %4, i64 112
  %202 = bitcast i8* %201 to i32*
  store i32 %2, i32* %202, align 8
  ret %"class.v8_inspector::V8ConsoleMessage"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector16V8ConsoleMessage16contextDestroyedEi(%"class.v8_inspector::V8ConsoleMessage"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %7, label %66

7:                                                ; preds = %2
  store i32 0, i32* %4, align 4
  %8 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2
  %9 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  br label %18

16:                                               ; preds = %7
  %17 = zext i8 %11 to i64
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i64 [ %15, %13 ], [ %17, %16 ]
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %18
  %22 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)) #10
  %23 = load i8, i8* %10, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %25, %21
  %29 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %22, i64 24, i1 false) #10
  %30 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %30, i64 0, i32 1, i32 1
  store i8 0, i8* %31, align 1
  %32 = bitcast %"class.v8_inspector::String16"* %3 to i16*
  store i16 0, i16* %32, align 8
  %33 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 2, i32 1
  store i64 %34, i64* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #10
  br label %36

36:                                               ; preds = %28, %18
  %37 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13
  %38 = bitcast %"class.std::__1::vector.9"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 0, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 13, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %40, align 8
  %42 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %0, i64 0, i32 12
  store i32 0, i32* %42, align 4
  %43 = inttoptr i64 %39 to %"class.std::__1::unique_ptr.11"*
  %44 = icmp eq i64 %39, 0
  %45 = bitcast %"class.std::__1::unique_ptr.11"** %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false)
  br i1 %44, label %66, label %46

46:                                               ; preds = %36
  %47 = icmp eq %"class.std::__1::unique_ptr.11"* %41, %43
  br i1 %47, label %64, label %48

48:                                               ; preds = %46, %62
  %49 = phi %"class.std::__1::unique_ptr.11"* [ %50, %62 ], [ %41, %46 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.v8::Global"*, %"class.v8::Global"** %51, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %51, align 8
  %53 = icmp eq %"class.v8::Global"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %52, i64 0, i32 0, i32 0
  %56 = load %"class.v8::Value"*, %"class.v8::Value"** %55, align 8
  %57 = icmp eq %"class.v8::Value"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::Value"* %56 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %59) #10
  br label %60

60:                                               ; preds = %58, %54
  %61 = bitcast %"class.v8::Global"* %52 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %48
  %63 = icmp eq %"class.std::__1::unique_ptr.11"* %50, %43
  br i1 %63, label %64, label %48

64:                                               ; preds = %62, %46
  %65 = inttoptr i64 %39 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %64, %36, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector23V8ConsoleMessageStorageC2EPNS_15V8InspectorImplEi(%"class.v8_inspector::V8ConsoleMessageStorage"*, %"class.v8_inspector::V8InspectorImpl"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  store %"class.v8_inspector::V8InspectorImpl"* %1, %"class.v8_inspector::V8InspectorImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  %11 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 52, i1 false)
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector23V8ConsoleMessageStorageD2Ev(%"class.v8_inspector::V8ConsoleMessageStorage"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"* %3) #10
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  %6 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN12v8_inspector22V8InspectorSessionImplEEE11__call_implINS0_20__default_alloc_funcIZNS2_23V8ConsoleMessageStorage5clearEvE3$_1S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector23V8ConsoleMessageStorage5clearEvE3$_1FvPNS4_22V8InspectorSessionImplEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  call void @_ZN12v8_inspector15V8InspectorImpl14forEachSessionEiRKNSt3__18functionIFvPNS_22V8InspectorSessionImplEEEE(%"class.v8_inspector::V8InspectorImpl"* %6, i32 %8, %"class.std::__1::function"* nonnull dereferenceable(32) %2) #10
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  %20 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"* %21, %"class.std::__1::__tree_node"* %24) #10
  %25 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %20, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %27, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"* %21, %"class.std::__1::__tree_node"* null) #10
  call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"* %3) #10
  %28 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %29 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %28, align 8
  %30 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %31 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %30, align 8
  %32 = icmp eq %"class.std::__1::unique_ptr.645"** %29, %31
  br i1 %32, label %51, label %33

33:                                               ; preds = %19, %33
  %34 = phi %"class.std::__1::unique_ptr.645"** [ %37, %33 ], [ %29, %19 ]
  %35 = bitcast %"class.std::__1::unique_ptr.645"** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #12
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %34, i64 1
  %38 = icmp eq %"class.std::__1::unique_ptr.645"** %37, %31
  br i1 %38, label %39, label %33

39:                                               ; preds = %33
  %40 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %28, align 8
  %41 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %30, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.645"** %41, %40
  br i1 %42, label %51, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"class.std::__1::unique_ptr.645"** %40 to i64
  %45 = getelementptr %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %41, i64 -1
  %46 = ptrtoint %"class.std::__1::unique_ptr.645"** %45 to i64
  %47 = sub i64 %46, %44
  %48 = lshr i64 %47, 3
  %49 = xor i64 %48, -1
  %50 = getelementptr %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %41, i64 %49
  store %"class.std::__1::unique_ptr.645"** %50, %"class.std::__1::unique_ptr.645"*** %30, align 8
  br label %51

51:                                               ; preds = %43, %39, %19
  %52 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %3, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr.645"** %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::unique_ptr.645"** %53 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %51, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector23V8ConsoleMessageStorage5clearEv(%"class.v8_inspector::V8ConsoleMessageStorage"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function", align 8
  %3 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"* %3) #10
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  %6 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = bitcast %"class.std::__1::function"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN12v8_inspector22V8InspectorSessionImplEEE11__call_implINS0_20__default_alloc_funcIZNS2_23V8ConsoleMessageStorage5clearEvE3$_1S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)** %10, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector23V8ConsoleMessageStorage5clearEvE3$_1FvPNS4_22V8InspectorSessionImplEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %11, align 8
  call void @_ZN12v8_inspector15V8InspectorImpl14forEachSessionEiRKNSt3__18functionIFvPNS_22V8InspectorSessionImplEEEE(%"class.v8_inspector::V8InspectorImpl"* %6, i32 %8, %"class.std::__1::function"* nonnull dereferenceable(32) %2) #10
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #10
  br label %19

19:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  %20 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"* %21, %"class.std::__1::__tree_node"* %24) #10
  %25 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %20, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %27, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector23V8ConsoleMessageStorage10addMessageENSt3__110unique_ptrINS_16V8ConsoleMessageENS1_14default_deleteIS3_EEEE(%"class.v8_inspector::V8ConsoleMessageStorage"*, %"class.v8_inspector::V8ConsoleMessage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.std::__1::unique_ptr.788"], align 16
  %4 = alloca %"class.std::__1::function", align 8
  %5 = alloca %"class.std::__1::unique_ptr.645", align 8
  %6 = alloca %"class.std::__1::function", align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::V8ConsoleMessage"* %1, %"class.v8_inspector::V8ConsoleMessage"** %7, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  %11 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %1, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 12
  br i1 %14, label %15, label %40

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__112__deque_baseINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"* %16) #10
  %17 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  store i32 0, i32* %17, align 4
  %18 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %10, align 8
  %19 = load i32, i32* %8, align 8
  %20 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN12v8_inspector22V8InspectorSessionImplEEE11__call_implINS0_20__default_alloc_funcIZNS2_23V8ConsoleMessageStorage5clearEvE3$_1S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)** %21, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector23V8ConsoleMessageStorage5clearEvE3$_1FvPNS4_22V8InspectorSessionImplEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %22, align 8
  call void @_ZN12v8_inspector15V8InspectorImpl14forEachSessionEiRKNSt3__18functionIFvPNS_22V8InspectorSessionImplEEEE(%"class.v8_inspector::V8InspectorImpl"* %18, i32 %19, %"class.std::__1::function"* nonnull dereferenceable(32) %4) #10
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %25 = load void (i8*)*, void (i8*)** %24, align 8
  %26 = icmp eq void (i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void %25(i8* %29) #10
  br label %30

30:                                               ; preds = %15, %27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  %31 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node"**
  %35 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %34, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"* %32, %"class.std::__1::__tree_node"* %35) #10
  %36 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %31, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %33, %"class.std::__1::__tree_end_node"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %38, align 8
  %39 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %7, align 8
  br label %40

40:                                               ; preds = %30, %2
  %41 = phi %"class.v8_inspector::V8ConsoleMessage"* [ %39, %30 ], [ %1, %2 ]
  %42 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %89

45:                                               ; preds = %40
  %46 = load atomic i64, i64* @_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic521 monotonic, align 8
  %47 = inttoptr i64 %46 to i8*
  %48 = icmp eq i64 %46, 0
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #10
  %51 = bitcast %"class.v8::TracingController"* %50 to i8* (%"class.v8::TracingController"*, i8*)***
  %52 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %51, align 8
  %53 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %52, i64 2
  %54 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %53, align 8
  %55 = call i8* %54(%"class.v8::TracingController"* %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)) #10
  %56 = ptrtoint i8* %55 to i64
  store atomic volatile i64 %56, i64* @_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic521 monotonic, align 8
  br label %57

57:                                               ; preds = %49, %45
  %58 = phi i8* [ %47, %45 ], [ %55, %49 ]
  %59 = load atomic i8, i8* %58 monotonic, align 1
  %60 = and i8 %59, 5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %180, label %62

62:                                               ; preds = %57
  %63 = bitcast [2 x %"class.std::__1::unique_ptr.788"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #10
  %64 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %63, i8 0, i64 16, i1 false) #10
  %65 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #10
  %66 = bitcast %"class.v8::TracingController"* %65 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)***
  %67 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)** %67, i64 3
  %69 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)** %68, align 8
  %70 = call i64 %69(%"class.v8::TracingController"* %65, i8 signext 73, i8* %58, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.788"* nonnull %64, i32 8) #10
  %71 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %72 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %71, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %71, align 8
  %73 = icmp eq %"class.v8::ConvertableToTraceFormat"* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %62
  %75 = bitcast %"class.v8::ConvertableToTraceFormat"* %72 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %76 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %76, i64 1
  %78 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %77, align 8
  call void %78(%"class.v8::ConvertableToTraceFormat"* nonnull %72) #10
  br label %79

79:                                               ; preds = %74, %62
  %80 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %80, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %80, align 16
  %82 = icmp eq %"class.v8::ConvertableToTraceFormat"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.v8::ConvertableToTraceFormat"* %81 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %85 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %85, i64 1
  %87 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %86, align 8
  call void %87(%"class.v8::ConvertableToTraceFormat"* nonnull %81) #10
  br label %88

88:                                               ; preds = %83, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #10
  br label %180

89:                                               ; preds = %40
  %90 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %41, i64 0, i32 9
  %91 = load i32, i32* %90, align 8
  switch i32 %91, label %180 [
    i32 3, label %92
    i32 13, label %136
  ]

92:                                               ; preds = %89
  %93 = load atomic i64, i64* @_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic524 monotonic, align 8
  %94 = inttoptr i64 %93 to i8*
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #10
  %98 = bitcast %"class.v8::TracingController"* %97 to i8* (%"class.v8::TracingController"*, i8*)***
  %99 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %98, align 8
  %100 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %99, i64 2
  %101 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %100, align 8
  %102 = call i8* %101(%"class.v8::TracingController"* %97, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)) #10
  %103 = ptrtoint i8* %102 to i64
  store atomic volatile i64 %103, i64* @_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic524 monotonic, align 8
  br label %104

104:                                              ; preds = %96, %92
  %105 = phi i8* [ %94, %92 ], [ %102, %96 ]
  %106 = load atomic i8, i8* %105 monotonic, align 1
  %107 = and i8 %106, 5
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %180, label %109

109:                                              ; preds = %104
  %110 = bitcast [2 x %"class.std::__1::unique_ptr.788"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #10
  %111 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %110, i8 0, i64 16, i1 false) #10
  %112 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #10
  %113 = bitcast %"class.v8::TracingController"* %112 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)***
  %114 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*** %113, align 8
  %115 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)** %114, i64 3
  %116 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)** %115, align 8
  %117 = call i64 %116(%"class.v8::TracingController"* %112, i8 signext 73, i8* %105, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.788"* nonnull %111, i32 8) #10
  %118 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %119 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %118, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %118, align 8
  %120 = icmp eq %"class.v8::ConvertableToTraceFormat"* %119, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %109
  %122 = bitcast %"class.v8::ConvertableToTraceFormat"* %119 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %123 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %123, i64 1
  %125 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %124, align 8
  call void %125(%"class.v8::ConvertableToTraceFormat"* nonnull %119) #10
  br label %126

126:                                              ; preds = %121, %109
  %127 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %127, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %127, align 16
  %129 = icmp eq %"class.v8::ConvertableToTraceFormat"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %126
  %131 = bitcast %"class.v8::ConvertableToTraceFormat"* %128 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %132 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %132, i64 1
  %134 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %133, align 8
  call void %134(%"class.v8::ConvertableToTraceFormat"* nonnull %128) #10
  br label %135

135:                                              ; preds = %130, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #10
  br label %180

136:                                              ; preds = %89
  %137 = load atomic i64, i64* @_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic527 monotonic, align 8
  %138 = inttoptr i64 %137 to i8*
  %139 = icmp eq i64 %137, 0
  br i1 %139, label %140, label %148

140:                                              ; preds = %136
  %141 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #10
  %142 = bitcast %"class.v8::TracingController"* %141 to i8* (%"class.v8::TracingController"*, i8*)***
  %143 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %142, align 8
  %144 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %143, i64 2
  %145 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %144, align 8
  %146 = call i8* %145(%"class.v8::TracingController"* %141, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0)) #10
  %147 = ptrtoint i8* %146 to i64
  store atomic volatile i64 %147, i64* @_ZZN12v8_inspector12_GLOBAL__N_126TraceV8ConsoleMessageEventENS_15V8MessageOriginENS_14ConsoleAPITypeEE28trace_event_unique_atomic527 monotonic, align 8
  br label %148

148:                                              ; preds = %140, %136
  %149 = phi i8* [ %138, %136 ], [ %146, %140 ]
  %150 = load atomic i8, i8* %149 monotonic, align 1
  %151 = and i8 %150, 5
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %180, label %153

153:                                              ; preds = %148
  %154 = bitcast [2 x %"class.std::__1::unique_ptr.788"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #10
  %155 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %154, i8 0, i64 16, i1 false) #10
  %156 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #10
  %157 = bitcast %"class.v8::TracingController"* %156 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)***
  %158 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*** %157, align 8
  %159 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)** %158, i64 3
  %160 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.788"*, i32)** %159, align 8
  %161 = call i64 %160(%"class.v8::TracingController"* %156, i8 signext 73, i8* %149, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.788"* nonnull %155, i32 8) #10
  %162 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %163 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %162, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %162, align 8
  %164 = icmp eq %"class.v8::ConvertableToTraceFormat"* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %153
  %166 = bitcast %"class.v8::ConvertableToTraceFormat"* %163 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %167 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %167, i64 1
  %169 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %168, align 8
  call void %169(%"class.v8::ConvertableToTraceFormat"* nonnull %163) #10
  br label %170

170:                                              ; preds = %165, %153
  %171 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.788"], [2 x %"class.std::__1::unique_ptr.788"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %171, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %171, align 16
  %173 = icmp eq %"class.v8::ConvertableToTraceFormat"* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = bitcast %"class.v8::ConvertableToTraceFormat"* %172 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %176 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %176, i64 1
  %178 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %177, align 8
  call void %178(%"class.v8::ConvertableToTraceFormat"* nonnull %172) #10
  br label %179

179:                                              ; preds = %174, %170
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #10
  br label %180

180:                                              ; preds = %57, %88, %89, %104, %135, %148, %179
  %181 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %181) #10
  %182 = ptrtoint %"class.std::__1::unique_ptr.645"* %5 to i64
  %183 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1, i32 0
  %184 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN12v8_inspector22V8InspectorSessionImplEEE11__call_implINS0_20__default_alloc_funcIZNS2_23V8ConsoleMessageStorage10addMessageENS_10unique_ptrINS2_16V8ConsoleMessageENS_14default_deleteISB_EEEEE3$_0S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8_inspector::V8InspectorSessionImpl"*)** %183, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12v8_inspector23V8ConsoleMessageStorage10addMessageENS_10unique_ptrINS4_16V8ConsoleMessageENS_14default_deleteIS7_EEEEE3$_0FvPNS4_22V8InspectorSessionImplEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %184, align 8
  %185 = bitcast %"class.std::__1::function"* %6 to i64*
  store i64 %182, i64* %185, align 8
  call void @_ZN12v8_inspector15V8InspectorImpl14forEachSessionEiRKNSt3__18functionIFvPNS_22V8InspectorSessionImplEEEE(%"class.v8_inspector::V8InspectorImpl"* %11, i32 %9, %"class.std::__1::function"* nonnull dereferenceable(32) %6) #10
  %186 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %184, align 8
  %187 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %186, i64 0, i32 1
  %188 = load void (i8*)*, void (i8*)** %187, align 8
  %189 = icmp eq void (i8*)* %188, null
  br i1 %189, label %193, label %190

190:                                              ; preds = %180
  %191 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  call void %188(i8* %192) #10
  br label %193

193:                                              ; preds = %180, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %181) #10
  %194 = call zeroext i1 @_ZN12v8_inspector15V8InspectorImpl24hasConsoleMessageStorageEi(%"class.v8_inspector::V8InspectorImpl"* %11, i32 %9) #10
  br i1 %194, label %195, label %399

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3
  %197 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %198 = load i64, i64* %197, align 8
  %199 = icmp eq i64 %198, 1000
  br i1 %199, label %200, label %252

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %202 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %201, align 8
  %203 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = lshr i64 %204, 9
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %202, i64 %205
  %207 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %206, align 8
  %208 = and i64 %204, 511
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %207, i64 %208, i32 0, i32 0, i32 0
  %210 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %209, align 8
  %211 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %210, i64 0, i32 12
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %210, i64 0, i32 2
  %214 = bitcast %"class.v8_inspector::String16"* %213 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %214, i64 0, i32 1, i32 1
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %200
  %219 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %220 = load i64, i64* %219, align 8
  br label %223

221:                                              ; preds = %200
  %222 = zext i8 %216 to i64
  br label %223

223:                                              ; preds = %218, %221
  %224 = phi i64 [ %220, %218 ], [ %222, %221 ]
  %225 = trunc i64 %224 to i32
  %226 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = mul i32 %225, -2
  %229 = sub i32 %227, %212
  %230 = add i32 %229, %228
  store i32 %230, i32* %226, align 4
  %231 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %206, align 8
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %231, i64 %208, i32 0, i32 0, i32 0
  %233 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %232, align 8
  store %"class.v8_inspector::V8ConsoleMessage"* null, %"class.v8_inspector::V8ConsoleMessage"** %232, align 8
  %234 = icmp eq %"class.v8_inspector::V8ConsoleMessage"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %223
  call void @_ZN12v8_inspector16V8ConsoleMessageD2Ev(%"class.v8_inspector::V8ConsoleMessage"* nonnull %233) #10
  %236 = bitcast %"class.v8_inspector::V8ConsoleMessage"* %233 to i8*
  call void @_ZdlPv(i8* %236) #12
  br label %237

237:                                              ; preds = %235, %223
  %238 = bitcast i64* %203 to <2 x i64>*
  %239 = load <2 x i64>, <2 x i64>* %238, align 8
  %240 = add <2 x i64> %239, <i64 1, i64 -1>
  %241 = bitcast i64* %203 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %241, align 8
  %242 = extractelement <2 x i64> %240, i32 0
  %243 = icmp ult i64 %242, 1024
  br i1 %243, label %252, label %244

244:                                              ; preds = %237
  %245 = bitcast %"class.std::__1::unique_ptr.645"*** %201 to i8***
  %246 = load i8**, i8*** %245, align 8
  %247 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %247) #12
  %248 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %201, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %248, i64 1
  store %"class.std::__1::unique_ptr.645"** %249, %"class.std::__1::unique_ptr.645"*** %201, align 8
  %250 = load i64, i64* %203, align 8
  %251 = add i64 %250, -512
  store i64 %251, i64* %203, align 8
  br label %252

252:                                              ; preds = %244, %237, %195
  %253 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  %254 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %255 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 1
  %256 = bitcast %"class.std::__1::unique_ptr.645"*** %254 to i8***
  %257 = bitcast i64* %255 to <2 x i64>*
  %258 = bitcast i64* %255 to <2 x i64>*
  br label %259

259:                                              ; preds = %322, %252
  %260 = load i32, i32* %253, align 4
  %261 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %7, align 8
  %262 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %261, i64 0, i32 12
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %261, i64 0, i32 2
  %265 = bitcast %"class.v8_inspector::String16"* %264 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %265, i64 0, i32 1, i32 1
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %259
  %270 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %271 = load i64, i64* %270, align 8
  br label %274

272:                                              ; preds = %259
  %273 = zext i8 %267 to i64
  br label %274

274:                                              ; preds = %269, %272
  %275 = phi i64 [ %271, %269 ], [ %273, %272 ]
  %276 = trunc i64 %275 to i32
  %277 = shl i32 %276, 1
  %278 = add i32 %263, %260
  %279 = add i32 %278, %277
  %280 = icmp sgt i32 %279, 10485760
  %281 = load i64, i64* %197, align 8
  br i1 %280, label %282, label %330

282:                                              ; preds = %274
  %283 = icmp eq i64 %281, 0
  br i1 %283, label %330, label %284

284:                                              ; preds = %282
  %285 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %254, align 8
  %286 = load i64, i64* %255, align 8
  %287 = lshr i64 %286, 9
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %285, i64 %287
  %289 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %288, align 8
  %290 = and i64 %286, 511
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %289, i64 %290, i32 0, i32 0, i32 0
  %292 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %291, align 8
  %293 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %292, i64 0, i32 12
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %292, i64 0, i32 2
  %296 = bitcast %"class.v8_inspector::String16"* %295 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %297 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %296, i64 0, i32 1, i32 1
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %284
  %301 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %302 = load i64, i64* %301, align 8
  br label %305

303:                                              ; preds = %284
  %304 = zext i8 %298 to i64
  br label %305

305:                                              ; preds = %300, %303
  %306 = phi i64 [ %302, %300 ], [ %304, %303 ]
  %307 = trunc i64 %306 to i32
  %308 = mul i32 %307, -2
  %309 = sub i32 %260, %294
  %310 = add i32 %309, %308
  store i32 %310, i32* %253, align 4
  %311 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %288, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %311, i64 %290, i32 0, i32 0, i32 0
  %313 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %312, align 8
  store %"class.v8_inspector::V8ConsoleMessage"* null, %"class.v8_inspector::V8ConsoleMessage"** %312, align 8
  %314 = icmp eq %"class.v8_inspector::V8ConsoleMessage"* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %305
  call void @_ZN12v8_inspector16V8ConsoleMessageD2Ev(%"class.v8_inspector::V8ConsoleMessage"* nonnull %313) #10
  %316 = bitcast %"class.v8_inspector::V8ConsoleMessage"* %313 to i8*
  call void @_ZdlPv(i8* %316) #12
  br label %317

317:                                              ; preds = %315, %305
  %318 = load <2 x i64>, <2 x i64>* %257, align 8
  %319 = add <2 x i64> %318, <i64 1, i64 -1>
  store <2 x i64> %319, <2 x i64>* %258, align 8
  %320 = extractelement <2 x i64> %319, i32 0
  %321 = icmp ult i64 %320, 1024
  br i1 %321, label %322, label %323

322:                                              ; preds = %317, %323
  br label %259

323:                                              ; preds = %317
  %324 = load i8**, i8*** %256, align 8
  %325 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %325) #12
  %326 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %254, align 8
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %326, i64 1
  store %"class.std::__1::unique_ptr.645"** %327, %"class.std::__1::unique_ptr.645"*** %254, align 8
  %328 = load i64, i64* %255, align 8
  %329 = add i64 %328, -512
  store i64 %329, i64* %255, align 8
  br label %322

330:                                              ; preds = %282, %274
  %331 = phi i64 [ %281, %274 ], [ 0, %282 ]
  %332 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %333 = bitcast %"class.std::__1::unique_ptr.645"*** %332 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"class.std::__1::unique_ptr.645"*** %254 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = sub i64 %334, %336
  %338 = icmp eq i64 %337, 0
  %339 = shl i64 %337, 6
  %340 = add i64 %339, -1
  %341 = select i1 %338, i64 0, i64 %340
  %342 = load i64, i64* %255, align 8
  %343 = add i64 %331, %342
  %344 = icmp eq i64 %341, %343
  %345 = inttoptr i64 %336 to %"class.std::__1::unique_ptr.645"**
  %346 = inttoptr i64 %334 to %"class.std::__1::unique_ptr.645"**
  br i1 %344, label %347, label %353

347:                                              ; preds = %330
  call void @_ZNSt3__15dequeINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %196) #10
  %348 = load i64, i64* %197, align 8
  %349 = load i64, i64* %255, align 8
  %350 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %254, align 8
  %351 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %332, align 8
  %352 = add i64 %349, %348
  br label %353

353:                                              ; preds = %347, %330
  %354 = phi i64 [ %352, %347 ], [ %343, %330 ]
  %355 = phi %"class.std::__1::unique_ptr.645"** [ %351, %347 ], [ %346, %330 ]
  %356 = phi %"class.std::__1::unique_ptr.645"** [ %350, %347 ], [ %345, %330 ]
  %357 = icmp eq %"class.std::__1::unique_ptr.645"** %355, %356
  br i1 %357, label %365, label %358

358:                                              ; preds = %353
  %359 = lshr i64 %354, 9
  %360 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %356, i64 %359
  %361 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %360, align 8
  %362 = and i64 %354, 511
  %363 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %361, i64 %362
  %364 = bitcast %"class.std::__1::unique_ptr.645"* %363 to i64*
  br label %365

365:                                              ; preds = %353, %358
  %366 = phi i64* [ %364, %358 ], [ null, %353 ]
  %367 = bitcast %"class.std::__1::unique_ptr.645"* %5 to i64*
  %368 = load i64, i64* %367, align 8
  store %"class.v8_inspector::V8ConsoleMessage"* null, %"class.v8_inspector::V8ConsoleMessage"** %7, align 8
  store i64 %368, i64* %366, align 8
  %369 = load i64, i64* %197, align 8
  %370 = add i64 %369, 1
  store i64 %370, i64* %197, align 8
  %371 = load i64, i64* %255, align 8
  %372 = add i64 %371, %369
  %373 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %254, align 8
  %374 = lshr i64 %372, 9
  %375 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %373, i64 %374
  %376 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %375, align 8
  %377 = and i64 %372, 511
  %378 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %376, i64 %377, i32 0, i32 0, i32 0
  %379 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %378, align 8
  %380 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %379, i64 0, i32 12
  %381 = load i32, i32* %380, align 4
  %382 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %379, i64 0, i32 2
  %383 = bitcast %"class.v8_inspector::String16"* %382 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %384 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %383, i64 0, i32 1, i32 1
  %385 = load i8, i8* %384, align 1
  %386 = icmp slt i8 %385, 0
  br i1 %386, label %387, label %390

387:                                              ; preds = %365
  %388 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %389 = load i64, i64* %388, align 8
  br label %392

390:                                              ; preds = %365
  %391 = zext i8 %385 to i64
  br label %392

392:                                              ; preds = %387, %390
  %393 = phi i64 [ %389, %387 ], [ %391, %390 ]
  %394 = trunc i64 %393 to i32
  %395 = shl i32 %394, 1
  %396 = load i32, i32* %253, align 4
  %397 = add i32 %396, %381
  %398 = add i32 %397, %395
  store i32 %398, i32* %253, align 4
  br label %399

399:                                              ; preds = %193, %392
  %400 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %7, align 8
  store %"class.v8_inspector::V8ConsoleMessage"* null, %"class.v8_inspector::V8ConsoleMessage"** %7, align 8
  %401 = icmp eq %"class.v8_inspector::V8ConsoleMessage"* %400, null
  br i1 %401, label %404, label %402

402:                                              ; preds = %399
  call void @_ZN12v8_inspector16V8ConsoleMessageD2Ev(%"class.v8_inspector::V8ConsoleMessage"* nonnull %400) #10
  %403 = bitcast %"class.v8_inspector::V8ConsoleMessage"* %400 to i8*
  call void @_ZdlPv(i8* %403) #12
  br label %404

404:                                              ; preds = %399, %402
  ret void
}

declare void @_ZN12v8_inspector15V8InspectorImpl14forEachSessionEiRKNSt3__18functionIFvPNS_22V8InspectorSessionImplEEEE(%"class.v8_inspector::V8InspectorImpl"*, i32, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12v8_inspector23V8ConsoleMessageStorage30shouldReportDeprecationMessageEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %79

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 112) #12, !noalias !113
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 8, !noalias !113
  %49 = getelementptr inbounds i8, i8* %46, i64 48
  %50 = getelementptr inbounds i8, i8* %46, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10, !noalias !113
  %51 = bitcast i8* %50 to i8**
  store i8* %49, i8** %51, align 8, !noalias !113
  %52 = getelementptr inbounds i8, i8* %46, i64 72
  %53 = getelementptr inbounds i8, i8* %46, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10, !noalias !113
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8, !noalias !113
  %55 = getelementptr inbounds i8, i8* %46, i64 96
  %56 = getelementptr inbounds i8, i8* %46, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10, !noalias !113
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8, !noalias !113
  %58 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %59 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds i8, i8* %46, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %61, align 8
  %62 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %4, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %45
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  %70 = bitcast %"class.std::__1::map.668"* %4 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %72

72:                                               ; preds = %68, %45
  %73 = phi %"class.std::__1::__tree_node_base"* [ %59, %45 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %75, %"class.std::__1::__tree_node_base"* %73) #10
  %76 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %39, %72
  %80 = phi %"class.std::__1::__tree_node"* [ %58, %72 ], [ %43, %39 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node.806"**
  %83 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.806"* %83, null
  br i1 %84, label %184, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %91, i64 %92
  %94 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %97 = select i1 %89, i16* %95, i16* %96
  br label %98

98:                                               ; preds = %142, %85
  %99 = phi %"class.std::__1::__tree_end_node"* [ %81, %85 ], [ %144, %142 ]
  %100 = phi %"class.std::__1::__tree_node.806"* [ %83, %85 ], [ %145, %142 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %100, i64 0, i32 1
  %102 = bitcast %"class.v8_inspector::String16"* %101 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %104 to i64
  %109 = select i1 %105, i64 %107, i64 %108
  %110 = icmp ult i64 %93, %109
  %111 = select i1 %110, i64 %93, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %135, label %113

113:                                              ; preds = %98
  %114 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = bitcast %"class.v8_inspector::String16"* %101 to i16*
  %117 = select i1 %105, i16* %115, i16* %116
  br label %118

118:                                              ; preds = %130, %113
  %119 = phi i64 [ %131, %130 ], [ %111, %113 ]
  %120 = phi i16* [ %133, %130 ], [ %97, %113 ]
  %121 = phi i16* [ %132, %130 ], [ %117, %113 ]
  %122 = load i16, i16* %121, align 2
  %123 = load i16, i16* %120, align 2
  %124 = icmp ult i16 %122, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %100, i64 0, i32 0, i32 1
  %127 = bitcast %"class.std::__1::__tree_node_base"** %126 to %"class.std::__1::__tree_node.806"**
  br label %142

128:                                              ; preds = %118
  %129 = icmp ult i16 %123, %122
  br i1 %129, label %139, label %130

130:                                              ; preds = %128
  %131 = add i64 %119, -1
  %132 = getelementptr inbounds i16, i16* %121, i64 1
  %133 = getelementptr inbounds i16, i16* %120, i64 1
  %134 = icmp eq i64 %131, 0
  br i1 %134, label %135, label %118

135:                                              ; preds = %130, %98
  %136 = icmp ult i64 %109, %93
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %100, i64 0, i32 0, i32 1
  %138 = bitcast %"class.std::__1::__tree_node_base"** %137 to %"class.std::__1::__tree_node.806"**
  br i1 %136, label %142, label %139

139:                                              ; preds = %128, %135
  %140 = bitcast %"class.std::__1::__tree_node.806"* %100 to %"class.std::__1::__tree_node.806"**
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %100, i64 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %139, %135, %125
  %143 = phi %"class.std::__1::__tree_node.806"** [ %140, %139 ], [ %127, %125 ], [ %138, %135 ]
  %144 = phi %"class.std::__1::__tree_end_node"* [ %141, %139 ], [ %99, %125 ], [ %99, %135 ]
  %145 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %143, align 8
  %146 = icmp eq %"class.std::__1::__tree_node.806"* %145, null
  br i1 %146, label %147, label %98

147:                                              ; preds = %142
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %144, %81
  br i1 %148, label %184, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 4
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %151, i64 0, i32 1, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 5
  %156 = bitcast %"class.std::__1::__tree_end_node"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = zext i8 %153 to i64
  %159 = select i1 %154, i64 %157, i64 %158
  %160 = icmp ult i64 %159, %93
  %161 = select i1 %160, i64 %159, i64 %93
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %182, label %163

163:                                              ; preds = %149
  %164 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16**
  %165 = load i16*, i16** %164, align 8
  %166 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16*
  %167 = select i1 %154, i16* %165, i16* %166
  br label %168

168:                                              ; preds = %177, %163
  %169 = phi i64 [ %178, %177 ], [ %161, %163 ]
  %170 = phi i16* [ %180, %177 ], [ %167, %163 ]
  %171 = phi i16* [ %179, %177 ], [ %97, %163 ]
  %172 = load i16, i16* %171, align 2
  %173 = load i16, i16* %170, align 2
  %174 = icmp ult i16 %172, %173
  br i1 %174, label %184, label %175

175:                                              ; preds = %168
  %176 = icmp ult i16 %173, %172
  br i1 %176, label %187, label %177

177:                                              ; preds = %175
  %178 = add i64 %169, -1
  %179 = getelementptr inbounds i16, i16* %171, i64 1
  %180 = getelementptr inbounds i16, i16* %170, i64 1
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %168

182:                                              ; preds = %177, %149
  %183 = icmp ult i64 %93, %159
  br i1 %183, label %184, label %187

184:                                              ; preds = %168, %182, %147, %79
  %185 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %186 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_(%"class.std::__1::__tree.680"* %185, %"class.std::__1::__tree_end_node"* %81, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"class.v8_inspector::String16"* dereferenceable(32) %2) #10
  br label %187

187:                                              ; preds = %175, %182, %184
  %188 = phi i1 [ true, %184 ], [ false, %182 ], [ false, %175 ]
  ret i1 %188
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12v8_inspector23V8ConsoleMessageStorage5countEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.836", align 8
  %5 = alloca %"class.std::__1::tuple.818", align 1
  %6 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %1
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp slt i32 %17, %1
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %81

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 112) #12, !noalias !116
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 %1, i32* %50, align 8, !noalias !116
  %51 = getelementptr inbounds i8, i8* %48, i64 48
  %52 = getelementptr inbounds i8, i8* %48, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #10, !noalias !116
  %53 = bitcast i8* %52 to i8**
  store i8* %51, i8** %53, align 8, !noalias !116
  %54 = getelementptr inbounds i8, i8* %48, i64 72
  %55 = getelementptr inbounds i8, i8* %48, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10, !noalias !116
  %56 = bitcast i8* %55 to i8**
  store i8* %54, i8** %56, align 8, !noalias !116
  %57 = getelementptr inbounds i8, i8* %48, i64 96
  %58 = getelementptr inbounds i8, i8* %48, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10, !noalias !116
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8, !noalias !116
  %60 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  %61 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds i8, i8* %48, i64 16
  %63 = bitcast i8* %62 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %63, align 8
  %64 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %6, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %47
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::map.668"* %6 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %74

74:                                               ; preds = %70, %47
  %75 = phi %"class.std::__1::__tree_node_base"* [ %61, %47 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %75) #10
  %78 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %41, %74
  %82 = phi %"class.std::__1::__tree_node"* [ %60, %74 ], [ %45, %41 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0
  %84 = bitcast %"class.std::__1::tuple.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #10
  %85 = getelementptr inbounds %"class.std::__1::tuple.836", %"class.std::__1::tuple.836"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::String16"* %2, %"class.v8_inspector::String16"** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::tuple.818", %"class.std::__1::tuple.818"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #10
  %87 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.689"* %83, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.836"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.818"* nonnull dereferenceable(1) %5) #10
  %88 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %87, 0
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 8
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #10
  %91 = load i32, i32* %90, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %90, align 4
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector23V8ConsoleMessageStorage4timeEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.836", align 8
  %5 = alloca %"class.std::__1::tuple.818", align 1
  %6 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  %7 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %7, i64 0, i32 2
  %9 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %8, align 8
  %10 = bitcast %"class.v8_inspector::V8InspectorClient"* %9 to double (%"class.v8_inspector::V8InspectorClient"*)***
  %11 = load double (%"class.v8_inspector::V8InspectorClient"*)**, double (%"class.v8_inspector::V8InspectorClient"*)*** %10, align 8
  %12 = getelementptr inbounds double (%"class.v8_inspector::V8InspectorClient"*)*, double (%"class.v8_inspector::V8InspectorClient"*)** %11, i64 23
  %13 = load double (%"class.v8_inspector::V8InspectorClient"*)*, double (%"class.v8_inspector::V8InspectorClient"*)** %12, align 8
  %14 = tail call double %13(%"class.v8_inspector::V8InspectorClient"* %9) #10
  %15 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node"* %18, null
  br i1 %19, label %48, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %44, %20
  %23 = phi %"class.std::__1::__tree_node"* [ %47, %44 ], [ %18, %20 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %46, %44 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %50

34:                                               ; preds = %22
  %35 = icmp slt i32 %26, %1
  br i1 %35, label %36, label %42

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  br label %50

44:                                               ; preds = %36, %28
  %45 = phi %"class.std::__1::__tree_node_base"* [ %30, %28 ], [ %38, %36 ]
  %46 = phi %"class.std::__1::__tree_node_base"** [ %29, %28 ], [ %37, %36 ]
  %47 = bitcast %"class.std::__1::__tree_node_base"* %45 to %"class.std::__1::__tree_node"*
  br label %22

48:                                               ; preds = %3
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  br label %50

50:                                               ; preds = %48, %42, %40, %32
  %51 = phi %"class.std::__1::__tree_end_node"* [ %16, %48 ], [ %33, %32 ], [ %41, %40 ], [ %43, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %29, %32 ], [ %37, %40 ], [ %24, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node"**
  %54 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node"* %54, null
  br i1 %55, label %56, label %90

56:                                               ; preds = %50
  %57 = tail call i8* @_Znwm(i64 112) #12, !noalias !119
  %58 = getelementptr inbounds i8, i8* %57, i64 32
  %59 = bitcast i8* %58 to i32*
  store i32 %1, i32* %59, align 8, !noalias !119
  %60 = getelementptr inbounds i8, i8* %57, i64 48
  %61 = getelementptr inbounds i8, i8* %57, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10, !noalias !119
  %62 = bitcast i8* %61 to i8**
  store i8* %60, i8** %62, align 8, !noalias !119
  %63 = getelementptr inbounds i8, i8* %57, i64 72
  %64 = getelementptr inbounds i8, i8* %57, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #10, !noalias !119
  %65 = bitcast i8* %64 to i8**
  store i8* %63, i8** %65, align 8, !noalias !119
  %66 = getelementptr inbounds i8, i8* %57, i64 96
  %67 = getelementptr inbounds i8, i8* %57, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #10, !noalias !119
  %68 = bitcast i8* %67 to i8**
  store i8* %66, i8** %68, align 8, !noalias !119
  %69 = bitcast i8* %57 to %"class.std::__1::__tree_node"*
  %70 = bitcast i8* %57 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %57, i64 16
  %72 = bitcast i8* %71 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %52 to i8**
  store i8* %57, i8** %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %15, i64 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %56
  %80 = ptrtoint %"class.std::__1::__tree_node_base"* %77 to i64
  %81 = bitcast %"class.std::__1::map.668"* %15 to i64*
  store i64 %80, i64* %81, align 8
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  br label %83

83:                                               ; preds = %79, %56
  %84 = phi %"class.std::__1::__tree_node_base"* [ %70, %56 ], [ %82, %79 ]
  %85 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %86, %"class.std::__1::__tree_node_base"* %84) #10
  %87 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %87, align 8
  br label %90

90:                                               ; preds = %50, %83
  %91 = phi %"class.std::__1::__tree_node"* [ %69, %83 ], [ %54, %50 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %91, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0
  %93 = bitcast %"class.std::__1::tuple.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #10
  %94 = getelementptr inbounds %"class.std::__1::tuple.836", %"class.std::__1::tuple.836"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::String16"* %2, %"class.v8_inspector::String16"** %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::tuple.818", %"class.std::__1::tuple.818"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %95) #10
  %96 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.698"* %92, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.836"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.818"* nonnull dereferenceable(1) %5) #10
  %97 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %96, 0
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 8
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to double*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %95) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #10
  store double %14, double* %99, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12v8_inspector23V8ConsoleMessageStorage10countResetEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.836", align 8
  %5 = alloca %"class.std::__1::tuple.818", align 1
  %6 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %1
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp slt i32 %17, %1
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node"*
  br label %13

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node"**
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %47, label %81

47:                                               ; preds = %41
  %48 = tail call i8* @_Znwm(i64 112) #12, !noalias !122
  %49 = getelementptr inbounds i8, i8* %48, i64 32
  %50 = bitcast i8* %49 to i32*
  store i32 %1, i32* %50, align 8, !noalias !122
  %51 = getelementptr inbounds i8, i8* %48, i64 48
  %52 = getelementptr inbounds i8, i8* %48, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #10, !noalias !122
  %53 = bitcast i8* %52 to i8**
  store i8* %51, i8** %53, align 8, !noalias !122
  %54 = getelementptr inbounds i8, i8* %48, i64 72
  %55 = getelementptr inbounds i8, i8* %48, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #10, !noalias !122
  %56 = bitcast i8* %55 to i8**
  store i8* %54, i8** %56, align 8, !noalias !122
  %57 = getelementptr inbounds i8, i8* %48, i64 96
  %58 = getelementptr inbounds i8, i8* %48, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #10, !noalias !122
  %59 = bitcast i8* %58 to i8**
  store i8* %57, i8** %59, align 8, !noalias !122
  %60 = bitcast i8* %48 to %"class.std::__1::__tree_node"*
  %61 = bitcast i8* %48 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds i8, i8* %48, i64 16
  %63 = bitcast i8* %62 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %63, align 8
  %64 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8**
  store i8* %48, i8** %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %6, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %47
  %71 = ptrtoint %"class.std::__1::__tree_node_base"* %68 to i64
  %72 = bitcast %"class.std::__1::map.668"* %6 to i64*
  store i64 %71, i64* %72, align 8
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %74

74:                                               ; preds = %70, %47
  %75 = phi %"class.std::__1::__tree_node_base"* [ %61, %47 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"* %75) #10
  %78 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %81

81:                                               ; preds = %41, %74
  %82 = phi %"class.std::__1::__tree_node"* [ %60, %74 ], [ %45, %41 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::__tree_node.803"**
  %85 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node.803"* %85, null
  br i1 %86, label %195, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %88, i64 0, i32 1, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  %92 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = zext i8 %90 to i64
  %95 = select i1 %91, i64 %93, i64 %94
  %96 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i16*, i16** %96, align 8
  %98 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %99 = select i1 %91, i16* %97, i16* %98
  br label %100

100:                                              ; preds = %144, %87
  %101 = phi %"class.std::__1::__tree_end_node"* [ %83, %87 ], [ %146, %144 ]
  %102 = phi %"class.std::__1::__tree_node.803"* [ %85, %87 ], [ %147, %144 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %102, i64 0, i32 2
  %104 = bitcast %"struct.std::__1::__value_type.804"* %103 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %104, i64 0, i32 1, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %106 to i64
  %111 = select i1 %107, i64 %109, i64 %110
  %112 = icmp ult i64 %95, %111
  %113 = select i1 %112, i64 %95, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %100
  %116 = getelementptr inbounds %"struct.std::__1::__value_type.804", %"struct.std::__1::__value_type.804"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i16*, i16** %116, align 8
  %118 = bitcast %"struct.std::__1::__value_type.804"* %103 to i16*
  %119 = select i1 %107, i16* %117, i16* %118
  br label %120

120:                                              ; preds = %132, %115
  %121 = phi i64 [ %133, %132 ], [ %113, %115 ]
  %122 = phi i16* [ %135, %132 ], [ %99, %115 ]
  %123 = phi i16* [ %134, %132 ], [ %119, %115 ]
  %124 = load i16, i16* %123, align 2
  %125 = load i16, i16* %122, align 2
  %126 = icmp ult i16 %124, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %102, i64 0, i32 0, i32 1
  %129 = bitcast %"class.std::__1::__tree_node_base"** %128 to %"class.std::__1::__tree_node.803"**
  br label %144

130:                                              ; preds = %120
  %131 = icmp ult i16 %125, %124
  br i1 %131, label %141, label %132

132:                                              ; preds = %130
  %133 = add i64 %121, -1
  %134 = getelementptr inbounds i16, i16* %123, i64 1
  %135 = getelementptr inbounds i16, i16* %122, i64 1
  %136 = icmp eq i64 %133, 0
  br i1 %136, label %137, label %120

137:                                              ; preds = %132, %100
  %138 = icmp ult i64 %111, %95
  %139 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %102, i64 0, i32 0, i32 1
  %140 = bitcast %"class.std::__1::__tree_node_base"** %139 to %"class.std::__1::__tree_node.803"**
  br i1 %138, label %144, label %141

141:                                              ; preds = %130, %137
  %142 = bitcast %"class.std::__1::__tree_node.803"* %102 to %"class.std::__1::__tree_node.803"**
  %143 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %102, i64 0, i32 0, i32 0
  br label %144

144:                                              ; preds = %141, %137, %127
  %145 = phi %"class.std::__1::__tree_node.803"** [ %142, %141 ], [ %129, %127 ], [ %140, %137 ]
  %146 = phi %"class.std::__1::__tree_end_node"* [ %143, %141 ], [ %101, %127 ], [ %101, %137 ]
  %147 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %145, align 8
  %148 = icmp eq %"class.std::__1::__tree_node.803"* %147, null
  br i1 %148, label %149, label %100

149:                                              ; preds = %144
  %150 = icmp eq %"class.std::__1::__tree_end_node"* %146, %83
  br i1 %150, label %195, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 4
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %153, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 5
  %158 = bitcast %"class.std::__1::__tree_end_node"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = zext i8 %155 to i64
  %161 = select i1 %156, i64 %159, i64 %160
  %162 = icmp ult i64 %161, %95
  %163 = select i1 %162, i64 %161, i64 %95
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %184, label %165

165:                                              ; preds = %151
  %166 = bitcast %"class.std::__1::__tree_end_node"* %152 to i16**
  %167 = load i16*, i16** %166, align 8
  %168 = bitcast %"class.std::__1::__tree_end_node"* %152 to i16*
  %169 = select i1 %156, i16* %167, i16* %168
  br label %170

170:                                              ; preds = %179, %165
  %171 = phi i64 [ %180, %179 ], [ %163, %165 ]
  %172 = phi i16* [ %182, %179 ], [ %169, %165 ]
  %173 = phi i16* [ %181, %179 ], [ %99, %165 ]
  %174 = load i16, i16* %173, align 2
  %175 = load i16, i16* %172, align 2
  %176 = icmp ult i16 %174, %175
  br i1 %176, label %195, label %177

177:                                              ; preds = %170
  %178 = icmp ult i16 %175, %174
  br i1 %178, label %186, label %179

179:                                              ; preds = %177
  %180 = add i64 %171, -1
  %181 = getelementptr inbounds i16, i16* %173, i64 1
  %182 = getelementptr inbounds i16, i16* %172, i64 1
  %183 = icmp eq i64 %180, 0
  br i1 %183, label %184, label %170

184:                                              ; preds = %179, %151
  %185 = icmp ult i64 %95, %161
  br i1 %185, label %195, label %186

186:                                              ; preds = %177, %184
  %187 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %82, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0
  %188 = bitcast %"class.std::__1::tuple.836"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #10
  %189 = getelementptr inbounds %"class.std::__1::tuple.836", %"class.std::__1::tuple.836"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.v8_inspector::String16"* %2, %"class.v8_inspector::String16"** %189, align 8
  %190 = getelementptr inbounds %"class.std::__1::tuple.818", %"class.std::__1::tuple.818"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %190) #10
  %191 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.689"* %187, %"class.v8_inspector::String16"* dereferenceable(32) %2, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.836"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.818"* nonnull dereferenceable(1) %5) #10
  %192 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %191, 0
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 8
  %194 = bitcast %"class.std::__1::__tree_end_node"* %193 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %190) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #10
  store i32 0, i32* %194, align 4
  br label %195

195:                                              ; preds = %170, %184, %149, %81, %186
  %196 = phi i1 [ true, %186 ], [ false, %81 ], [ false, %149 ], [ false, %184 ], [ false, %170 ]
  ret i1 %196
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN12v8_inspector23V8ConsoleMessageStorage7timeLogEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %79

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 112) #12, !noalias !125
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 8, !noalias !125
  %49 = getelementptr inbounds i8, i8* %46, i64 48
  %50 = getelementptr inbounds i8, i8* %46, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10, !noalias !125
  %51 = bitcast i8* %50 to i8**
  store i8* %49, i8** %51, align 8, !noalias !125
  %52 = getelementptr inbounds i8, i8* %46, i64 72
  %53 = getelementptr inbounds i8, i8* %46, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10, !noalias !125
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8, !noalias !125
  %55 = getelementptr inbounds i8, i8* %46, i64 96
  %56 = getelementptr inbounds i8, i8* %46, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10, !noalias !125
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8, !noalias !125
  %58 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %59 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds i8, i8* %46, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %61, align 8
  %62 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %4, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %45
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  %70 = bitcast %"class.std::__1::map.668"* %4 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %72

72:                                               ; preds = %68, %45
  %73 = phi %"class.std::__1::__tree_node_base"* [ %59, %45 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %75, %"class.std::__1::__tree_node_base"* %73) #10
  %76 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %39, %72
  %80 = phi %"class.std::__1::__tree_node"* [ %58, %72 ], [ %43, %39 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node.801"**
  %83 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.801"* %83, null
  br i1 %84, label %198, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %91, i64 %92
  %94 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %97 = select i1 %89, i16* %95, i16* %96
  br label %98

98:                                               ; preds = %142, %85
  %99 = phi %"class.std::__1::__tree_end_node"* [ %81, %85 ], [ %144, %142 ]
  %100 = phi %"class.std::__1::__tree_node.801"* [ %83, %85 ], [ %145, %142 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 1
  %102 = bitcast %"struct.std::__1::__value_type.802"* %101 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %104 to i64
  %109 = select i1 %105, i64 %107, i64 %108
  %110 = icmp ult i64 %93, %109
  %111 = select i1 %110, i64 %93, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %135, label %113

113:                                              ; preds = %98
  %114 = getelementptr inbounds %"struct.std::__1::__value_type.802", %"struct.std::__1::__value_type.802"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = bitcast %"struct.std::__1::__value_type.802"* %101 to i16*
  %117 = select i1 %105, i16* %115, i16* %116
  br label %118

118:                                              ; preds = %130, %113
  %119 = phi i64 [ %131, %130 ], [ %111, %113 ]
  %120 = phi i16* [ %133, %130 ], [ %97, %113 ]
  %121 = phi i16* [ %132, %130 ], [ %117, %113 ]
  %122 = load i16, i16* %121, align 2
  %123 = load i16, i16* %120, align 2
  %124 = icmp ult i16 %122, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 0, i32 1
  %127 = bitcast %"class.std::__1::__tree_node_base"** %126 to %"class.std::__1::__tree_node.801"**
  br label %142

128:                                              ; preds = %118
  %129 = icmp ult i16 %123, %122
  br i1 %129, label %139, label %130

130:                                              ; preds = %128
  %131 = add i64 %119, -1
  %132 = getelementptr inbounds i16, i16* %121, i64 1
  %133 = getelementptr inbounds i16, i16* %120, i64 1
  %134 = icmp eq i64 %131, 0
  br i1 %134, label %135, label %118

135:                                              ; preds = %130, %98
  %136 = icmp ult i64 %109, %93
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 0, i32 1
  %138 = bitcast %"class.std::__1::__tree_node_base"** %137 to %"class.std::__1::__tree_node.801"**
  br i1 %136, label %142, label %139

139:                                              ; preds = %128, %135
  %140 = bitcast %"class.std::__1::__tree_node.801"* %100 to %"class.std::__1::__tree_node.801"**
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %139, %135, %125
  %143 = phi %"class.std::__1::__tree_node.801"** [ %140, %139 ], [ %127, %125 ], [ %138, %135 ]
  %144 = phi %"class.std::__1::__tree_end_node"* [ %141, %139 ], [ %99, %125 ], [ %99, %135 ]
  %145 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %143, align 8
  %146 = icmp eq %"class.std::__1::__tree_node.801"* %145, null
  br i1 %146, label %147, label %98

147:                                              ; preds = %142
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %144, %81
  br i1 %148, label %198, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 4
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %151, i64 0, i32 1, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 5
  %156 = bitcast %"class.std::__1::__tree_end_node"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = zext i8 %153 to i64
  %159 = select i1 %154, i64 %157, i64 %158
  %160 = icmp ult i64 %159, %93
  %161 = select i1 %160, i64 %159, i64 %93
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %182, label %163

163:                                              ; preds = %149
  %164 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16**
  %165 = load i16*, i16** %164, align 8
  %166 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16*
  %167 = select i1 %154, i16* %165, i16* %166
  br label %168

168:                                              ; preds = %177, %163
  %169 = phi i64 [ %178, %177 ], [ %161, %163 ]
  %170 = phi i16* [ %180, %177 ], [ %167, %163 ]
  %171 = phi i16* [ %179, %177 ], [ %97, %163 ]
  %172 = load i16, i16* %171, align 2
  %173 = load i16, i16* %170, align 2
  %174 = icmp ult i16 %172, %173
  br i1 %174, label %198, label %175

175:                                              ; preds = %168
  %176 = icmp ult i16 %173, %172
  br i1 %176, label %184, label %177

177:                                              ; preds = %175
  %178 = add i64 %169, -1
  %179 = getelementptr inbounds i16, i16* %171, i64 1
  %180 = getelementptr inbounds i16, i16* %170, i64 1
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %168

182:                                              ; preds = %177, %149
  %183 = icmp ult i64 %93, %159
  br i1 %183, label %198, label %184

184:                                              ; preds = %175, %182
  %185 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  %186 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %185, align 8
  %187 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %186, i64 0, i32 2
  %188 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %187, align 8
  %189 = bitcast %"class.v8_inspector::V8InspectorClient"* %188 to double (%"class.v8_inspector::V8InspectorClient"*)***
  %190 = load double (%"class.v8_inspector::V8InspectorClient"*)**, double (%"class.v8_inspector::V8InspectorClient"*)*** %189, align 8
  %191 = getelementptr inbounds double (%"class.v8_inspector::V8InspectorClient"*)*, double (%"class.v8_inspector::V8InspectorClient"*)** %190, i64 23
  %192 = load double (%"class.v8_inspector::V8InspectorClient"*)*, double (%"class.v8_inspector::V8InspectorClient"*)** %191, align 8
  %193 = tail call double %192(%"class.v8_inspector::V8InspectorClient"* %188) #10
  %194 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 8
  %195 = bitcast %"class.std::__1::__tree_end_node"* %194 to double*
  %196 = load double, double* %195, align 8
  %197 = fsub double %193, %196
  br label %198

198:                                              ; preds = %168, %182, %147, %79, %184
  %199 = phi double [ %197, %184 ], [ 0.000000e+00, %79 ], [ 0.000000e+00, %147 ], [ 0.000000e+00, %182 ], [ 0.000000e+00, %168 ]
  ret double %199
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN12v8_inspector23V8ConsoleMessageStorage7timeEndEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %79

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 112) #12, !noalias !128
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 8, !noalias !128
  %49 = getelementptr inbounds i8, i8* %46, i64 48
  %50 = getelementptr inbounds i8, i8* %46, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10, !noalias !128
  %51 = bitcast i8* %50 to i8**
  store i8* %49, i8** %51, align 8, !noalias !128
  %52 = getelementptr inbounds i8, i8* %46, i64 72
  %53 = getelementptr inbounds i8, i8* %46, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10, !noalias !128
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8, !noalias !128
  %55 = getelementptr inbounds i8, i8* %46, i64 96
  %56 = getelementptr inbounds i8, i8* %46, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10, !noalias !128
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8, !noalias !128
  %58 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %59 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds i8, i8* %46, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %61, align 8
  %62 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %4, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %45
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  %70 = bitcast %"class.std::__1::map.668"* %4 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %72

72:                                               ; preds = %68, %45
  %73 = phi %"class.std::__1::__tree_node_base"* [ %59, %45 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %75, %"class.std::__1::__tree_node_base"* %73) #10
  %76 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %39, %72
  %80 = phi %"class.std::__1::__tree_node"* [ %58, %72 ], [ %43, %39 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 2
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node.801"**
  %84 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node.801"* %84, null
  br i1 %85, label %248, label %86

86:                                               ; preds = %79
  %87 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %98 = select i1 %90, i16* %96, i16* %97
  br label %99

99:                                               ; preds = %143, %86
  %100 = phi %"class.std::__1::__tree_end_node"* [ %82, %86 ], [ %145, %143 ]
  %101 = phi %"class.std::__1::__tree_node.801"* [ %84, %86 ], [ %146, %143 ]
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %101, i64 0, i32 1
  %103 = bitcast %"struct.std::__1::__value_type.802"* %102 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = load i8, i8* %104, align 1
  %106 = icmp slt i8 %105, 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = zext i8 %105 to i64
  %110 = select i1 %106, i64 %108, i64 %109
  %111 = icmp ult i64 %94, %110
  %112 = select i1 %111, i64 %94, i64 %110
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %136, label %114

114:                                              ; preds = %99
  %115 = getelementptr inbounds %"struct.std::__1::__value_type.802", %"struct.std::__1::__value_type.802"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i16*, i16** %115, align 8
  %117 = bitcast %"struct.std::__1::__value_type.802"* %102 to i16*
  %118 = select i1 %106, i16* %116, i16* %117
  br label %119

119:                                              ; preds = %131, %114
  %120 = phi i64 [ %132, %131 ], [ %112, %114 ]
  %121 = phi i16* [ %134, %131 ], [ %98, %114 ]
  %122 = phi i16* [ %133, %131 ], [ %118, %114 ]
  %123 = load i16, i16* %122, align 2
  %124 = load i16, i16* %121, align 2
  %125 = icmp ult i16 %123, %124
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %101, i64 0, i32 0, i32 1
  %128 = bitcast %"class.std::__1::__tree_node_base"** %127 to %"class.std::__1::__tree_node.801"**
  br label %143

129:                                              ; preds = %119
  %130 = icmp ult i16 %124, %123
  br i1 %130, label %140, label %131

131:                                              ; preds = %129
  %132 = add i64 %120, -1
  %133 = getelementptr inbounds i16, i16* %122, i64 1
  %134 = getelementptr inbounds i16, i16* %121, i64 1
  %135 = icmp eq i64 %132, 0
  br i1 %135, label %136, label %119

136:                                              ; preds = %131, %99
  %137 = icmp ult i64 %110, %94
  %138 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %101, i64 0, i32 0, i32 1
  %139 = bitcast %"class.std::__1::__tree_node_base"** %138 to %"class.std::__1::__tree_node.801"**
  br i1 %137, label %143, label %140

140:                                              ; preds = %129, %136
  %141 = bitcast %"class.std::__1::__tree_node.801"* %101 to %"class.std::__1::__tree_node.801"**
  %142 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %101, i64 0, i32 0, i32 0
  br label %143

143:                                              ; preds = %140, %136, %126
  %144 = phi %"class.std::__1::__tree_node.801"** [ %141, %140 ], [ %128, %126 ], [ %139, %136 ]
  %145 = phi %"class.std::__1::__tree_end_node"* [ %142, %140 ], [ %100, %126 ], [ %100, %136 ]
  %146 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %144, align 8
  %147 = icmp eq %"class.std::__1::__tree_node.801"* %146, null
  br i1 %147, label %148, label %99

148:                                              ; preds = %143
  %149 = icmp eq %"class.std::__1::__tree_end_node"* %145, %82
  br i1 %149, label %248, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 4
  %152 = bitcast %"class.std::__1::__tree_end_node"* %151 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %152, i64 0, i32 1, i32 1
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 5
  %157 = bitcast %"class.std::__1::__tree_end_node"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = zext i8 %154 to i64
  %160 = select i1 %155, i64 %158, i64 %159
  %161 = icmp ult i64 %160, %94
  %162 = select i1 %161, i64 %160, i64 %94
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %183, label %164

164:                                              ; preds = %150
  %165 = bitcast %"class.std::__1::__tree_end_node"* %151 to i16**
  %166 = load i16*, i16** %165, align 8
  %167 = bitcast %"class.std::__1::__tree_end_node"* %151 to i16*
  %168 = select i1 %155, i16* %166, i16* %167
  br label %169

169:                                              ; preds = %178, %164
  %170 = phi i64 [ %179, %178 ], [ %162, %164 ]
  %171 = phi i16* [ %181, %178 ], [ %168, %164 ]
  %172 = phi i16* [ %180, %178 ], [ %98, %164 ]
  %173 = load i16, i16* %172, align 2
  %174 = load i16, i16* %171, align 2
  %175 = icmp ult i16 %173, %174
  br i1 %175, label %248, label %176

176:                                              ; preds = %169
  %177 = icmp ult i16 %174, %173
  br i1 %177, label %185, label %178

178:                                              ; preds = %176
  %179 = add i64 %170, -1
  %180 = getelementptr inbounds i16, i16* %172, i64 1
  %181 = getelementptr inbounds i16, i16* %171, i64 1
  %182 = icmp eq i64 %179, 0
  br i1 %182, label %183, label %169

183:                                              ; preds = %178, %150
  %184 = icmp ult i64 %94, %160
  br i1 %184, label %248, label %185

185:                                              ; preds = %176, %183
  %186 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 0
  %187 = load %"class.v8_inspector::V8InspectorImpl"*, %"class.v8_inspector::V8InspectorImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.v8_inspector::V8InspectorImpl", %"class.v8_inspector::V8InspectorImpl"* %187, i64 0, i32 2
  %189 = load %"class.v8_inspector::V8InspectorClient"*, %"class.v8_inspector::V8InspectorClient"** %188, align 8
  %190 = bitcast %"class.v8_inspector::V8InspectorClient"* %189 to double (%"class.v8_inspector::V8InspectorClient"*)***
  %191 = load double (%"class.v8_inspector::V8InspectorClient"*)**, double (%"class.v8_inspector::V8InspectorClient"*)*** %190, align 8
  %192 = getelementptr inbounds double (%"class.v8_inspector::V8InspectorClient"*)*, double (%"class.v8_inspector::V8InspectorClient"*)** %191, i64 23
  %193 = load double (%"class.v8_inspector::V8InspectorClient"*)*, double (%"class.v8_inspector::V8InspectorClient"*)** %192, align 8
  %194 = tail call double %193(%"class.v8_inspector::V8InspectorClient"* %189) #10
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 8
  %196 = bitcast %"class.std::__1::__tree_end_node"* %195 to double*
  %197 = load double, double* %196, align 8
  %198 = fsub double %194, %197
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 1, i32 0
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node_base"* %200, null
  br i1 %201, label %202, label %210

202:                                              ; preds = %185
  %203 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.std::__1::__tree_node_base"*
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %145, i64 2
  %205 = bitcast %"class.std::__1::__tree_end_node"* %204 to %"class.std::__1::__tree_end_node"**
  %206 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %206, i64 0, i32 0
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node_base"* %208, %203
  br i1 %209, label %226, label %217

210:                                              ; preds = %185, %210
  %211 = phi %"class.std::__1::__tree_node_base"* [ %213, %210 ], [ %200, %185 ]
  %212 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %211, i64 0, i32 0, i32 0
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node_base"* %213, null
  br i1 %214, label %215, label %210

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %211, i64 0, i32 0
  br label %226

217:                                              ; preds = %202, %217
  %218 = phi %"class.std::__1::__tree_end_node"** [ %221, %217 ], [ %205, %202 ]
  %219 = bitcast %"class.std::__1::__tree_end_node"** %218 to %"class.std::__1::__tree_node_base"**
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %219, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %222 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %222, i64 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, %220
  br i1 %225, label %226, label %217

226:                                              ; preds = %217, %215, %202
  %227 = phi %"class.std::__1::__tree_end_node"* [ %216, %215 ], [ %206, %202 ], [ %222, %217 ]
  %228 = getelementptr inbounds %"class.std::__1::map.697", %"class.std::__1::map.697"* %81, i64 0, i32 0, i32 0
  %229 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_end_node"* %229, %145
  br i1 %230, label %231, label %234

231:                                              ; preds = %226
  %232 = ptrtoint %"class.std::__1::__tree_end_node"* %227 to i64
  %233 = bitcast %"class.std::__1::map.697"* %81 to i64*
  store i64 %232, i64* %233, align 8
  br label %234

234:                                              ; preds = %231, %226
  %235 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 2, i32 0, i32 0
  %236 = load i64, i64* %235, align 8
  %237 = add i64 %236, -1
  store i64 %237, i64* %235, align 8
  %238 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %239 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %238, align 8
  %240 = bitcast %"class.std::__1::__tree_end_node"* %145 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %239, %"class.std::__1::__tree_node_base"* %240) #10
  %241 = load i8, i8* %153, align 1
  %242 = icmp slt i8 %241, 0
  br i1 %242, label %243, label %246

243:                                              ; preds = %234
  %244 = bitcast %"class.std::__1::__tree_end_node"* %151 to i8**
  %245 = load i8*, i8** %244, align 8
  tail call void @_ZdlPv(i8* %245) #12
  br label %246

246:                                              ; preds = %234, %243
  %247 = bitcast %"class.std::__1::__tree_end_node"* %145 to i8*
  tail call void @_ZdlPv(i8* %247) #12
  br label %248

248:                                              ; preds = %169, %183, %148, %79, %246
  %249 = phi double [ %198, %246 ], [ 0.000000e+00, %79 ], [ 0.000000e+00, %148 ], [ 0.000000e+00, %183 ], [ 0.000000e+00, %169 ]
  ret double %249
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12v8_inspector23V8ConsoleMessageStorage8hasTimerEiRKNS_8String16E(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32, %"class.v8_inspector::String16"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %37, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %33, %9
  %12 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %7, %9 ]
  %13 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %10, %9 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %11
  %24 = icmp slt i32 %15, %1
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %11

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %39

39:                                               ; preds = %37, %31, %29, %21
  %40 = phi %"class.std::__1::__tree_end_node"* [ %5, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %13, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %79

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 112) #12, !noalias !131
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 %1, i32* %48, align 8, !noalias !131
  %49 = getelementptr inbounds i8, i8* %46, i64 48
  %50 = getelementptr inbounds i8, i8* %46, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10, !noalias !131
  %51 = bitcast i8* %50 to i8**
  store i8* %49, i8** %51, align 8, !noalias !131
  %52 = getelementptr inbounds i8, i8* %46, i64 72
  %53 = getelementptr inbounds i8, i8* %46, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #10, !noalias !131
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8, !noalias !131
  %55 = getelementptr inbounds i8, i8* %46, i64 96
  %56 = getelementptr inbounds i8, i8* %46, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #10, !noalias !131
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8, !noalias !131
  %58 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %59 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %60 = getelementptr inbounds i8, i8* %46, i64 16
  %61 = bitcast i8* %60 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %61, align 8
  %62 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::map.668", %"class.std::__1::map.668"* %4, i64 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %45
  %69 = ptrtoint %"class.std::__1::__tree_node_base"* %66 to i64
  %70 = bitcast %"class.std::__1::map.668"* %4 to i64*
  store i64 %69, i64* %70, align 8
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %72

72:                                               ; preds = %68, %45
  %73 = phi %"class.std::__1::__tree_node_base"* [ %59, %45 ], [ %71, %68 ]
  %74 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %75, %"class.std::__1::__tree_node_base"* %73) #10
  %76 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  br label %79

79:                                               ; preds = %39, %72
  %80 = phi %"class.std::__1::__tree_node"* [ %58, %72 ], [ %43, %39 ]
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %80, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.std::__1::__tree_node.801"**
  %83 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %82, align 8
  %84 = icmp eq %"class.std::__1::__tree_node.801"* %83, null
  br i1 %84, label %184, label %85

85:                                               ; preds = %79
  %86 = bitcast %"class.v8_inspector::String16"* %2 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %91, i64 %92
  %94 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = bitcast %"class.v8_inspector::String16"* %2 to i16*
  %97 = select i1 %89, i16* %95, i16* %96
  br label %98

98:                                               ; preds = %142, %85
  %99 = phi %"class.std::__1::__tree_end_node"* [ %81, %85 ], [ %144, %142 ]
  %100 = phi %"class.std::__1::__tree_node.801"* [ %83, %85 ], [ %145, %142 ]
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 1
  %102 = bitcast %"struct.std::__1::__value_type.802"* %101 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %102, i64 0, i32 1, i32 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %104 to i64
  %109 = select i1 %105, i64 %107, i64 %108
  %110 = icmp ult i64 %93, %109
  %111 = select i1 %110, i64 %93, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %135, label %113

113:                                              ; preds = %98
  %114 = getelementptr inbounds %"struct.std::__1::__value_type.802", %"struct.std::__1::__value_type.802"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = bitcast %"struct.std::__1::__value_type.802"* %101 to i16*
  %117 = select i1 %105, i16* %115, i16* %116
  br label %118

118:                                              ; preds = %130, %113
  %119 = phi i64 [ %131, %130 ], [ %111, %113 ]
  %120 = phi i16* [ %133, %130 ], [ %97, %113 ]
  %121 = phi i16* [ %132, %130 ], [ %117, %113 ]
  %122 = load i16, i16* %121, align 2
  %123 = load i16, i16* %120, align 2
  %124 = icmp ult i16 %122, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 0, i32 1
  %127 = bitcast %"class.std::__1::__tree_node_base"** %126 to %"class.std::__1::__tree_node.801"**
  br label %142

128:                                              ; preds = %118
  %129 = icmp ult i16 %123, %122
  br i1 %129, label %139, label %130

130:                                              ; preds = %128
  %131 = add i64 %119, -1
  %132 = getelementptr inbounds i16, i16* %121, i64 1
  %133 = getelementptr inbounds i16, i16* %120, i64 1
  %134 = icmp eq i64 %131, 0
  br i1 %134, label %135, label %118

135:                                              ; preds = %130, %98
  %136 = icmp ult i64 %109, %93
  %137 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 0, i32 1
  %138 = bitcast %"class.std::__1::__tree_node_base"** %137 to %"class.std::__1::__tree_node.801"**
  br i1 %136, label %142, label %139

139:                                              ; preds = %128, %135
  %140 = bitcast %"class.std::__1::__tree_node.801"* %100 to %"class.std::__1::__tree_node.801"**
  %141 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %100, i64 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %139, %135, %125
  %143 = phi %"class.std::__1::__tree_node.801"** [ %140, %139 ], [ %127, %125 ], [ %138, %135 ]
  %144 = phi %"class.std::__1::__tree_end_node"* [ %141, %139 ], [ %99, %125 ], [ %99, %135 ]
  %145 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %143, align 8
  %146 = icmp eq %"class.std::__1::__tree_node.801"* %145, null
  br i1 %146, label %147, label %98

147:                                              ; preds = %142
  %148 = icmp eq %"class.std::__1::__tree_end_node"* %144, %81
  br i1 %148, label %184, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 4
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %151, i64 0, i32 1, i32 1
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  %155 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 5
  %156 = bitcast %"class.std::__1::__tree_end_node"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = zext i8 %153 to i64
  %159 = select i1 %154, i64 %157, i64 %158
  %160 = icmp ult i64 %159, %93
  %161 = select i1 %160, i64 %159, i64 %93
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %182, label %163

163:                                              ; preds = %149
  %164 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16**
  %165 = load i16*, i16** %164, align 8
  %166 = bitcast %"class.std::__1::__tree_end_node"* %150 to i16*
  %167 = select i1 %154, i16* %165, i16* %166
  br label %168

168:                                              ; preds = %177, %163
  %169 = phi i64 [ %178, %177 ], [ %161, %163 ]
  %170 = phi i16* [ %180, %177 ], [ %167, %163 ]
  %171 = phi i16* [ %179, %177 ], [ %97, %163 ]
  %172 = load i16, i16* %171, align 2
  %173 = load i16, i16* %170, align 2
  %174 = icmp ult i16 %172, %173
  br i1 %174, label %184, label %175

175:                                              ; preds = %168
  %176 = icmp ult i16 %173, %172
  br i1 %176, label %185, label %177

177:                                              ; preds = %175
  %178 = add i64 %169, -1
  %179 = getelementptr inbounds i16, i16* %171, i64 1
  %180 = getelementptr inbounds i16, i16* %170, i64 1
  %181 = icmp eq i64 %178, 0
  br i1 %181, label %182, label %168

182:                                              ; preds = %177, %149
  %183 = icmp ult i64 %93, %159
  br i1 %183, label %184, label %185

184:                                              ; preds = %168, %182, %147, %79
  br label %185

185:                                              ; preds = %175, %182, %184
  %186 = phi %"class.std::__1::__tree_end_node"* [ %81, %184 ], [ %144, %182 ], [ %144, %175 ]
  %187 = icmp ne %"class.std::__1::__tree_end_node"* %186, %81
  ret i1 %187
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector23V8ConsoleMessageStorage16contextDestroyedEi(%"class.v8_inspector::V8ConsoleMessageStorage"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 2
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = load i64, i64* %8, align 8
  %11 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %9, align 8
  br label %38

12:                                               ; preds = %70, %2
  %13 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.std::__1::__tree_end_node"* %13 to %"class.std::__1::__tree_node"**
  %15 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %14, align 8
  %16 = icmp eq %"class.std::__1::__tree_node"* %15, null
  br i1 %16, label %105, label %17

17:                                               ; preds = %12, %17
  %18 = phi %"class.std::__1::__tree_end_node"* [ %28, %17 ], [ %13, %12 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %29, %17 ], [ %15, %12 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %1
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tree_node_base"** %23 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node"**
  %27 = select i1 %22, %"class.std::__1::__tree_node"** %24, %"class.std::__1::__tree_node"** %26
  %28 = select i1 %22, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"* %25
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = icmp eq %"class.std::__1::__tree_end_node"* %28, %13
  br i1 %32, label %105, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %1
  br i1 %37, label %105, label %80

38:                                               ; preds = %7, %70
  %39 = phi %"class.std::__1::unique_ptr.645"** [ %11, %7 ], [ %51, %70 ]
  %40 = phi i64 [ %10, %7 ], [ %49, %70 ]
  %41 = phi i64 [ 0, %7 ], [ %77, %70 ]
  %42 = add i64 %40, %41
  %43 = lshr i64 %42, 9
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %39, i64 %43
  %45 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %44, align 8
  %46 = and i64 %42, 511
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %45, i64 %46, i32 0, i32 0, i32 0
  %48 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %47, align 8
  tail call void @_ZN12v8_inspector16V8ConsoleMessage16contextDestroyedEi(%"class.v8_inspector::V8ConsoleMessage"* %48, i32 %1)
  %49 = load i64, i64* %8, align 8
  %50 = add i64 %49, %41
  %51 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %9, align 8
  %52 = lshr i64 %50, 9
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %51, i64 %52
  %54 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %53, align 8
  %55 = and i64 %50, 511
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %54, i64 %55, i32 0, i32 0, i32 0
  %57 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %56, align 8
  %58 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %57, i64 0, i32 12
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %57, i64 0, i32 2
  %61 = bitcast %"class.v8_inspector::String16"* %60 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %61, i64 0, i32 1, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %38
  %66 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  br label %70

68:                                               ; preds = %38
  %69 = zext i8 %63 to i64
  br label %70

70:                                               ; preds = %65, %68
  %71 = phi i64 [ %67, %65 ], [ %69, %68 ]
  %72 = trunc i64 %71 to i32
  %73 = shl i32 %72, 1
  %74 = load i32, i32* %3, align 4
  %75 = add i32 %74, %59
  %76 = add i32 %75, %73
  store i32 %76, i32* %3, align 4
  %77 = add nuw i64 %41, 1
  %78 = load i64, i64* %4, align 8
  %79 = icmp ult i64 %77, %78
  br i1 %79, label %38, label %12

80:                                               ; preds = %33
  %81 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessageStorage", %"class.v8_inspector::V8ConsoleMessageStorage"* %0, i64 0, i32 4, i32 0
  br label %82

82:                                               ; preds = %80, %82
  %83 = phi %"class.std::__1::__tree_end_node"* [ %93, %82 ], [ %13, %80 ]
  %84 = phi %"class.std::__1::__tree_node"* [ %94, %82 ], [ %15, %80 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %86, %1
  %88 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::__tree_node_base"** %88 to %"class.std::__1::__tree_node"**
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::__tree_node"* %84 to %"class.std::__1::__tree_node"**
  %92 = select i1 %87, %"class.std::__1::__tree_node"** %89, %"class.std::__1::__tree_node"** %91
  %93 = select i1 %87, %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"* %90
  %94 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %92, align 8
  %95 = icmp eq %"class.std::__1::__tree_node"* %94, null
  br i1 %95, label %96, label %82

96:                                               ; preds = %82
  %97 = icmp eq %"class.std::__1::__tree_end_node"* %93, %13
  br i1 %97, label %105, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 4
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %101, %1
  br i1 %102, label %105, label %103

103:                                              ; preds = %98
  %104 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE5eraseENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEE(%"class.std::__1::__tree.669"* %81, %"class.std::__1::__tree_end_node"* %93) #10
  br label %105

105:                                              ; preds = %33, %31, %12, %103, %98, %96
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN12v8_inspector8String16C1EONSt3__112basic_stringItNS1_11char_traitsItEENS1_9allocatorItEEEE(%"class.v8_inspector::String16"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = getelementptr i16, i16* %25, i64 %39
  %41 = sub i64 %22, %39
  %42 = getelementptr i16, i16* %19, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %25, i64 %51
  %54 = getelementptr i16, i16* %19, i64 %51
  %55 = bitcast i16* %54 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !134
  %57 = getelementptr i16, i16* %54, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !134
  %60 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !137, !noalias !134
  %61 = getelementptr i16, i16* %53, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !137, !noalias !134
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %25, i64 %63
  %65 = getelementptr i16, i16* %19, i64 %63
  %66 = bitcast i16* %65 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !134
  %68 = getelementptr i16, i16* %65, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !134
  %71 = bitcast i16* %64 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !137, !noalias !134
  %72 = getelementptr i16, i16* %64, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !137, !noalias !134
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %25, i64 %74
  %76 = getelementptr i16, i16* %19, i64 %74
  %77 = bitcast i16* %76 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !134
  %79 = getelementptr i16, i16* %76, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !134
  %82 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !137, !noalias !134
  %83 = getelementptr i16, i16* %75, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !137, !noalias !134
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %25, i64 %85
  %87 = getelementptr i16, i16* %19, i64 %85
  %88 = bitcast i16* %87 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !134
  %90 = getelementptr i16, i16* %87, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !134
  %93 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !137, !noalias !134
  %94 = getelementptr i16, i16* %86, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !137, !noalias !134
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !139

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %25, i64 %103
  %106 = getelementptr i16, i16* %19, i64 %103
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !134
  %109 = getelementptr i16, i16* %106, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !134
  %112 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !137, !noalias !134
  %113 = getelementptr i16, i16* %105, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !137, !noalias !134
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !140

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %40, %118 ]
  %122 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %42, %118 ]
  %124 = add i64 %122, -1
  %125 = and i64 %122, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i16* [ %134, %127 ], [ %121, %120 ]
  %129 = phi i64 [ %133, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %135, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %130, align 2
  store i16 %132, i16* %128, align 2
  %133 = add i64 %129, -1
  %134 = getelementptr inbounds i16, i16* %128, i64 1
  %135 = getelementptr inbounds i16, i16* %130, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !141

138:                                              ; preds = %127, %120
  %139 = phi i16* [ %121, %120 ], [ %134, %127 ]
  %140 = phi i64 [ %122, %120 ], [ %133, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %135, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i16* [ %170, %143 ], [ %139, %138 ]
  %145 = phi i64 [ %169, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %171, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %146, align 2
  store i16 %147, i16* %144, align 2
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %146, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %144, i64 2
  %152 = getelementptr inbounds i16, i16* %146, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %144, i64 3
  %155 = getelementptr inbounds i16, i16* %146, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %144, i64 4
  %158 = getelementptr inbounds i16, i16* %146, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %144, i64 5
  %161 = getelementptr inbounds i16, i16* %146, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %144, i64 6
  %164 = getelementptr inbounds i16, i16* %146, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %144, i64 7
  %167 = getelementptr inbounds i16, i16* %146, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %145, -8
  %170 = getelementptr inbounds i16, i16* %144, i64 8
  %171 = getelementptr inbounds i16, i16* %146, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !142

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = getelementptr i16, i16* %190, i64 %201
  %203 = sub i64 %22, %201
  %204 = getelementptr i16, i16* %19, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %190, i64 %213
  %216 = getelementptr i16, i16* %19, i64 %213
  %217 = bitcast i16* %216 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !143
  %219 = getelementptr i16, i16* %216, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !143
  %222 = bitcast i16* %215 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !146, !noalias !143
  %223 = getelementptr i16, i16* %215, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !146, !noalias !143
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %190, i64 %225
  %227 = getelementptr i16, i16* %19, i64 %225
  %228 = bitcast i16* %227 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !143
  %230 = getelementptr i16, i16* %227, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !143
  %233 = bitcast i16* %226 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !146, !noalias !143
  %234 = getelementptr i16, i16* %226, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !146, !noalias !143
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %190, i64 %236
  %238 = getelementptr i16, i16* %19, i64 %236
  %239 = bitcast i16* %238 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !143
  %241 = getelementptr i16, i16* %238, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !143
  %244 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !146, !noalias !143
  %245 = getelementptr i16, i16* %237, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !146, !noalias !143
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %190, i64 %247
  %249 = getelementptr i16, i16* %19, i64 %247
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !143
  %252 = getelementptr i16, i16* %249, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !143
  %255 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !146, !noalias !143
  %256 = getelementptr i16, i16* %248, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !146, !noalias !143
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !148

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %190, i64 %265
  %268 = getelementptr i16, i16* %19, i64 %265
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !143
  %271 = getelementptr i16, i16* %268, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !143
  %274 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !146, !noalias !143
  %275 = getelementptr i16, i16* %267, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !146, !noalias !143
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !149

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %202, %280 ]
  %284 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %204, %280 ]
  %286 = add i64 %284, -1
  %287 = and i64 %284, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i16* [ %296, %289 ], [ %283, %282 ]
  %291 = phi i64 [ %295, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %297, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %292, align 2
  store i16 %294, i16* %290, align 2
  %295 = add i64 %291, -1
  %296 = getelementptr inbounds i16, i16* %290, i64 1
  %297 = getelementptr inbounds i16, i16* %292, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !150

300:                                              ; preds = %289, %282
  %301 = phi i16* [ %283, %282 ], [ %296, %289 ]
  %302 = phi i64 [ %284, %282 ], [ %295, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %297, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i16* [ %332, %305 ], [ %301, %300 ]
  %307 = phi i64 [ %331, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %333, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %306, align 2
  %310 = getelementptr inbounds i16, i16* %306, i64 1
  %311 = getelementptr inbounds i16, i16* %308, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %306, i64 2
  %314 = getelementptr inbounds i16, i16* %308, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %306, i64 3
  %317 = getelementptr inbounds i16, i16* %308, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %306, i64 4
  %320 = getelementptr inbounds i16, i16* %308, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %306, i64 5
  %323 = getelementptr inbounds i16, i16* %308, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %306, i64 6
  %326 = getelementptr inbounds i16, i16* %308, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %306, i64 7
  %329 = getelementptr inbounds i16, i16* %308, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %307, -8
  %332 = getelementptr inbounds i16, i16* %306, i64 8
  %333 = getelementptr inbounds i16, i16* %308, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !151

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = getelementptr i16, i16* %356, i64 %368
  %370 = sub i64 %349, %368
  %371 = getelementptr i16, i16* %348, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %356, i64 %380
  %383 = getelementptr i16, i16* %348, i64 %380
  %384 = bitcast i16* %383 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !152
  %386 = getelementptr i16, i16* %383, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !152
  %389 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !155, !noalias !152
  %390 = getelementptr i16, i16* %382, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !155, !noalias !152
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %356, i64 %392
  %394 = getelementptr i16, i16* %348, i64 %392
  %395 = bitcast i16* %394 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !152
  %397 = getelementptr i16, i16* %394, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !152
  %400 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !155, !noalias !152
  %401 = getelementptr i16, i16* %393, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !155, !noalias !152
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %356, i64 %403
  %405 = getelementptr i16, i16* %348, i64 %403
  %406 = bitcast i16* %405 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !152
  %408 = getelementptr i16, i16* %405, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !152
  %411 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !155, !noalias !152
  %412 = getelementptr i16, i16* %404, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !155, !noalias !152
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %356, i64 %414
  %416 = getelementptr i16, i16* %348, i64 %414
  %417 = bitcast i16* %416 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !152
  %419 = getelementptr i16, i16* %416, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !152
  %422 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !155, !noalias !152
  %423 = getelementptr i16, i16* %415, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !155, !noalias !152
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !157

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %356, i64 %432
  %435 = getelementptr i16, i16* %348, i64 %432
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !152
  %438 = getelementptr i16, i16* %435, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !152
  %441 = bitcast i16* %434 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !155, !noalias !152
  %442 = getelementptr i16, i16* %434, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !155, !noalias !152
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !158

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %369, %447 ]
  %451 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %371, %447 ]
  %453 = add i64 %451, -1
  %454 = and i64 %451, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i16* [ %463, %456 ], [ %450, %449 ]
  %458 = phi i64 [ %462, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %464, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %459, align 2
  store i16 %461, i16* %457, align 2
  %462 = add i64 %458, -1
  %463 = getelementptr inbounds i16, i16* %457, i64 1
  %464 = getelementptr inbounds i16, i16* %459, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !159

467:                                              ; preds = %456, %449
  %468 = phi i16* [ %450, %449 ], [ %463, %456 ]
  %469 = phi i64 [ %451, %449 ], [ %462, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %464, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i16* [ %499, %472 ], [ %468, %467 ]
  %474 = phi i64 [ %498, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %500, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %473, align 2
  %477 = getelementptr inbounds i16, i16* %473, i64 1
  %478 = getelementptr inbounds i16, i16* %475, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %473, i64 2
  %481 = getelementptr inbounds i16, i16* %475, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %473, i64 3
  %484 = getelementptr inbounds i16, i16* %475, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %473, i64 4
  %487 = getelementptr inbounds i16, i16* %475, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %473, i64 5
  %490 = getelementptr inbounds i16, i16* %475, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %473, i64 6
  %493 = getelementptr inbounds i16, i16* %475, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %473, i64 7
  %496 = getelementptr inbounds i16, i16* %475, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %474, -8
  %499 = getelementptr inbounds i16, i16* %473, i64 8
  %500 = getelementptr inbounds i16, i16* %475, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !160

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE21__grow_by_and_replaceEmmmmmmPKt(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = getelementptr i16, i16* %42, i64 %55
  %57 = sub i64 %4, %55
  %58 = getelementptr i16, i16* %24, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %42, i64 %67
  %70 = getelementptr i16, i16* %24, i64 %67
  %71 = bitcast i16* %70 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !161
  %73 = getelementptr i16, i16* %70, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !161
  %76 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !164, !noalias !161
  %77 = getelementptr i16, i16* %69, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !164, !noalias !161
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %42, i64 %79
  %81 = getelementptr i16, i16* %24, i64 %79
  %82 = bitcast i16* %81 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !161
  %84 = getelementptr i16, i16* %81, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !161
  %87 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !164, !noalias !161
  %88 = getelementptr i16, i16* %80, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !164, !noalias !161
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %42, i64 %90
  %92 = getelementptr i16, i16* %24, i64 %90
  %93 = bitcast i16* %92 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !161
  %95 = getelementptr i16, i16* %92, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !161
  %98 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !164, !noalias !161
  %99 = getelementptr i16, i16* %91, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !164, !noalias !161
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %42, i64 %101
  %103 = getelementptr i16, i16* %24, i64 %101
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !161
  %106 = getelementptr i16, i16* %103, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !161
  %109 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !164, !noalias !161
  %110 = getelementptr i16, i16* %102, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !164, !noalias !161
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !166

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %42, i64 %119
  %122 = getelementptr i16, i16* %24, i64 %119
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !161
  %125 = getelementptr i16, i16* %122, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !161
  %128 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !164, !noalias !161
  %129 = getelementptr i16, i16* %121, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !164, !noalias !161
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !167

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %56, %134 ]
  %138 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %58, %134 ]
  %140 = add i64 %138, -1
  %141 = and i64 %138, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i16* [ %150, %143 ], [ %137, %136 ]
  %145 = phi i64 [ %149, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %151, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %144, align 2
  %149 = add i64 %145, -1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = getelementptr inbounds i16, i16* %146, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !168

154:                                              ; preds = %143, %136
  %155 = phi i16* [ %137, %136 ], [ %150, %143 ]
  %156 = phi i64 [ %138, %136 ], [ %149, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %151, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i16* [ %186, %159 ], [ %155, %154 ]
  %161 = phi i64 [ %185, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %187, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %160, align 2
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = getelementptr inbounds i16, i16* %162, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = getelementptr inbounds i16, i16* %162, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = getelementptr inbounds i16, i16* %162, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = getelementptr inbounds i16, i16* %162, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = getelementptr inbounds i16, i16* %162, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = getelementptr inbounds i16, i16* %162, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %161, -8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = getelementptr inbounds i16, i16* %162, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !169

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = getelementptr i16, i16* %192, i64 %195
  %197 = sub i64 %6, %195
  %198 = getelementptr i16, i16* %7, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %192, i64 %207
  %210 = getelementptr i16, i16* %7, i64 %207
  %211 = bitcast i16* %210 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %210, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %209, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %192, i64 %219
  %221 = getelementptr i16, i16* %7, i64 %219
  %222 = bitcast i16* %221 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %221, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %220, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %192, i64 %230
  %232 = getelementptr i16, i16* %7, i64 %230
  %233 = bitcast i16* %232 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %232, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %231, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %192, i64 %241
  %243 = getelementptr i16, i16* %7, i64 %241
  %244 = bitcast i16* %243 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %243, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %242, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !170

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %192, i64 %259
  %262 = getelementptr i16, i16* %7, i64 %259
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %262, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %261, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !171

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i16* [ %192, %191 ], [ %196, %274 ]
  %278 = phi i64 [ %6, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %7, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i16* [ %286, %280 ], [ %277, %276 ]
  %282 = phi i64 [ %285, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %287, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %281, align 2
  %285 = add i64 %282, -1
  %286 = getelementptr inbounds i16, i16* %281, i64 1
  %287 = getelementptr inbounds i16, i16* %283, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !172

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = getelementptr i16, i16* %295, i64 %314
  %316 = sub i64 %291, %314
  %317 = getelementptr i16, i16* %297, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %295, i64 %326
  %329 = getelementptr i16, i16* %297, i64 %326
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !174
  %332 = getelementptr i16, i16* %329, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !174
  %335 = bitcast i16* %328 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !177, !noalias !174
  %336 = getelementptr i16, i16* %328, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !177, !noalias !174
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %295, i64 %338
  %340 = getelementptr i16, i16* %297, i64 %338
  %341 = bitcast i16* %340 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !174
  %343 = getelementptr i16, i16* %340, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !174
  %346 = bitcast i16* %339 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !177, !noalias !174
  %347 = getelementptr i16, i16* %339, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !177, !noalias !174
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %295, i64 %349
  %351 = getelementptr i16, i16* %297, i64 %349
  %352 = bitcast i16* %351 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !174
  %354 = getelementptr i16, i16* %351, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !174
  %357 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !177, !noalias !174
  %358 = getelementptr i16, i16* %350, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !177, !noalias !174
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %295, i64 %360
  %362 = getelementptr i16, i16* %297, i64 %360
  %363 = bitcast i16* %362 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !174
  %365 = getelementptr i16, i16* %362, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !174
  %368 = bitcast i16* %361 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !177, !noalias !174
  %369 = getelementptr i16, i16* %361, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !177, !noalias !174
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !179

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %295, i64 %378
  %381 = getelementptr i16, i16* %297, i64 %378
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !174
  %384 = getelementptr i16, i16* %381, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !174
  %387 = bitcast i16* %380 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !177, !noalias !174
  %388 = getelementptr i16, i16* %380, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !177, !noalias !174
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !180

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %315, %393 ]
  %397 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %317, %393 ]
  %399 = add i64 %397, -1
  %400 = and i64 %397, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i16* [ %409, %402 ], [ %396, %395 ]
  %404 = phi i64 [ %408, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %410, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %405, align 2
  store i16 %407, i16* %403, align 2
  %408 = add i64 %404, -1
  %409 = getelementptr inbounds i16, i16* %403, i64 1
  %410 = getelementptr inbounds i16, i16* %405, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !181

413:                                              ; preds = %402, %395
  %414 = phi i16* [ %396, %395 ], [ %409, %402 ]
  %415 = phi i64 [ %397, %395 ], [ %408, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %410, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i16* [ %445, %418 ], [ %414, %413 ]
  %420 = phi i64 [ %444, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %446, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %421, align 2
  store i16 %422, i16* %419, align 2
  %423 = getelementptr inbounds i16, i16* %419, i64 1
  %424 = getelementptr inbounds i16, i16* %421, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %419, i64 2
  %427 = getelementptr inbounds i16, i16* %421, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %419, i64 3
  %430 = getelementptr inbounds i16, i16* %421, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %419, i64 4
  %433 = getelementptr inbounds i16, i16* %421, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %419, i64 5
  %436 = getelementptr inbounds i16, i16* %421, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %419, i64 6
  %439 = getelementptr inbounds i16, i16* %421, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %419, i64 7
  %442 = getelementptr inbounds i16, i16* %421, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %420, -8
  %445 = getelementptr inbounds i16, i16* %419, i64 8
  %446 = getelementptr inbounds i16, i16* %421, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !182

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder6appendEN2v85LocalINS2_5ValueEEEj(%"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"*, %"class.v8::Value"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8_inspector::String16", align 8
  %5 = alloca %"class.v8_inspector::String16", align 8
  %6 = alloca %"class.v8_inspector::String16", align 8
  %7 = alloca %"class.v8_inspector::String16", align 8
  %8 = alloca %"class.v8_inspector::String16", align 8
  %9 = alloca %"class.v8_inspector::String16", align 8
  %10 = alloca %"class.v8_inspector::String16", align 8
  %11 = alloca %"class.v8_inspector::String16", align 8
  %12 = alloca %"class.v8_inspector::String16", align 8
  %13 = alloca %"class.v8_inspector::String16", align 8
  %14 = alloca %"class.v8_inspector::String16", align 8
  %15 = icmp eq %"class.v8::Value"* %1, null
  br i1 %15, label %432, label %16

16:                                               ; preds = %3
  %17 = and i32 %2, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %16
  %20 = bitcast %"class.v8::Value"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 3
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %24, label %41

24:                                               ; preds = %19
  %25 = add i64 %21, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %21, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 67
  br i1 %34, label %35, label %41

35:                                               ; preds = %24
  %36 = add i64 %21, 23
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, -2
  %40 = icmp eq i32 %39, 6
  br i1 %40, label %432, label %41

41:                                               ; preds = %24, %19, %16, %35
  %42 = and i32 %2, 2
  %43 = icmp ne i32 %42, 0
  %44 = bitcast %"class.v8::Value"* %1 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 3
  %47 = icmp eq i64 %46, 1
  %48 = and i1 %43, %47
  br i1 %48, label %49, label %66

49:                                               ; preds = %41
  %50 = add i64 %45, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %45, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  %59 = icmp eq i16 %58, 67
  br i1 %59, label %60, label %66

60:                                               ; preds = %49
  %61 = add i64 %45, 23
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, -2
  %65 = icmp eq i32 %64, 10
  br i1 %65, label %432, label %66

66:                                               ; preds = %41, %49, %60
  %67 = and i64 %45, 3
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %69, label %97

69:                                               ; preds = %66
  %70 = add i64 %45, -1
  %71 = inttoptr i64 %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = and i64 %45, -4294967296
  %74 = zext i32 %72 to i64
  %75 = or i64 %73, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load i16, i16* %77, align 2
  %79 = icmp ult i16 %78, 64
  br i1 %79, label %80, label %97

80:                                               ; preds = %69
  %81 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 4
  %82 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %81) #10
  br i1 %82, label %432, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.v8::Value"* %1 to %"class.v8::String"*
  %85 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %86 = bitcast %"class.v8_inspector::String16"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %88 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %87, align 8
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %10, %"class.v8::Isolate"* %88, %"class.v8::String"* nonnull %84) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %85, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %10) #10
  %89 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %83
  %94 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %93, %83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #10
  br label %432

97:                                               ; preds = %66, %69
  %98 = tail call zeroext i1 @_ZNK2v85Value14IsStringObjectEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %98, label %99, label %119

99:                                               ; preds = %97
  %100 = bitcast %"class.v8::Value"* %1 to %"class.v8::StringObject"*
  %101 = tail call %"class.v8::String"* @_ZNK2v812StringObject7ValueOfEv(%"class.v8::StringObject"* %100) #10
  %102 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 4
  %103 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %102) #10
  br i1 %103, label %432, label %104

104:                                              ; preds = %99
  %105 = icmp eq %"class.v8::String"* %101, null
  br i1 %105, label %432, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %108 = bitcast %"class.v8_inspector::String16"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %110 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %109, align 8
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %9, %"class.v8::Isolate"* %110, %"class.v8::String"* nonnull %101) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %107, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %9) #10
  %111 = bitcast %"class.v8_inspector::String16"* %9 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %111, i64 0, i32 1, i32 1
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %106
  %116 = bitcast %"class.v8_inspector::String16"* %9 to i8**
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %115, %106
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #10
  br label %432

119:                                              ; preds = %97
  %120 = tail call zeroext i1 @_ZNK2v85Value8IsBigIntEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %120, label %121, label %147

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 5, i32 0
  %123 = load %"class.v8::Context"*, %"class.v8::Context"** %122, align 8
  %124 = tail call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %1, %"class.v8::Context"* %123) #10
  %125 = icmp eq %"class.v8::String"* %124, null
  br i1 %125, label %432, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 4
  %128 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %127) #10
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %131 = bitcast %"class.v8_inspector::String16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %131) #10
  %132 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %133 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %132, align 8
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %5, %"class.v8::Isolate"* %133, %"class.v8::String"* nonnull %124) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %130, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %5) #10
  %134 = bitcast %"class.v8_inspector::String16"* %5 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %134, i64 0, i32 1, i32 1
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %129
  %139 = bitcast %"class.v8_inspector::String16"* %5 to i8**
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #12
  br label %141

141:                                              ; preds = %138, %129
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %131) #10
  br label %142

142:                                              ; preds = %126, %141
  %143 = phi i1 [ false, %126 ], [ true, %141 ]
  %144 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %127) #10
  br i1 %144, label %432, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %146, i8 signext 110) #10
  br label %432

147:                                              ; preds = %119
  %148 = tail call zeroext i1 @_ZNK2v85Value14IsBigIntObjectEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %148, label %149, label %178

149:                                              ; preds = %147
  %150 = bitcast %"class.v8::Value"* %1 to %"class.v8::BigIntObject"*
  %151 = tail call %"class.v8::BigInt"* @_ZNK2v812BigIntObject7ValueOfEv(%"class.v8::BigIntObject"* %150) #10
  %152 = bitcast %"class.v8::BigInt"* %151 to %"class.v8::Value"*
  %153 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 5, i32 0
  %154 = load %"class.v8::Context"*, %"class.v8::Context"** %153, align 8
  %155 = tail call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %152, %"class.v8::Context"* %154) #10
  %156 = icmp eq %"class.v8::String"* %155, null
  br i1 %156, label %432, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 4
  %159 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %158) #10
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %162 = bitcast %"class.v8_inspector::String16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %162) #10
  %163 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %164 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %163, align 8
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %4, %"class.v8::Isolate"* %164, %"class.v8::String"* nonnull %155) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %161, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %4) #10
  %165 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %165, i64 0, i32 1, i32 1
  %167 = load i8, i8* %166, align 1
  %168 = icmp slt i8 %167, 0
  br i1 %168, label %169, label %172

169:                                              ; preds = %160
  %170 = bitcast %"class.v8_inspector::String16"* %4 to i8**
  %171 = load i8*, i8** %170, align 8
  call void @_ZdlPv(i8* %171) #12
  br label %172

172:                                              ; preds = %169, %160
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %162) #10
  br label %173

173:                                              ; preds = %157, %172
  %174 = phi i1 [ false, %157 ], [ true, %172 ]
  %175 = call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %158) #10
  br i1 %175, label %432, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %177, i8 signext 110) #10
  br label %432

178:                                              ; preds = %147
  %179 = tail call zeroext i1 @_ZNK2v85Value8IsSymbolEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %179, label %180, label %196

180:                                              ; preds = %178
  %181 = bitcast %"class.v8::Value"* %1 to %"class.v8::Symbol"*
  %182 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %183 = bitcast %"class.v8_inspector::String16"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %183) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %182, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %6) #10
  %184 = bitcast %"class.v8_inspector::String16"* %6 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  br i1 %187, label %188, label %191

188:                                              ; preds = %180
  %189 = bitcast %"class.v8_inspector::String16"* %6 to i8**
  %190 = load i8*, i8** %189, align 8
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %180, %188
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %183) #10
  %192 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %193 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %192, align 8
  %194 = call %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"* %181, %"class.v8::Isolate"* %193) #10
  %195 = call fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder6appendEN2v85LocalINS2_5ValueEEEj(%"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, %"class.v8::Value"* %194, i32 2) #10
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %182, i8 signext 41) #10
  br label %432

196:                                              ; preds = %178
  %197 = tail call zeroext i1 @_ZNK2v85Value14IsSymbolObjectEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %197, label %198, label %215

198:                                              ; preds = %196
  %199 = bitcast %"class.v8::Value"* %1 to %"class.v8::SymbolObject"*
  %200 = tail call %"class.v8::Symbol"* @_ZNK2v812SymbolObject7ValueOfEv(%"class.v8::SymbolObject"* %199) #10
  %201 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %202 = bitcast %"class.v8_inspector::String16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %201, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %7) #10
  %203 = bitcast %"class.v8_inspector::String16"* %7 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %203, i64 0, i32 1, i32 1
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %198
  %208 = bitcast %"class.v8_inspector::String16"* %7 to i8**
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %198, %207
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #10
  %211 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %212 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %211, align 8
  %213 = call %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"* %200, %"class.v8::Isolate"* %212) #10
  %214 = call fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder6appendEN2v85LocalINS2_5ValueEEEj(%"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, %"class.v8::Value"* %213, i32 2) #10
  call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %201, i8 signext 41) #10
  br label %432

215:                                              ; preds = %196
  %216 = tail call zeroext i1 @_ZNK2v85Value14IsNumberObjectEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %216, label %217, label %230

217:                                              ; preds = %215
  %218 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %219 = bitcast %"class.v8_inspector::String16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %219) #10
  %220 = bitcast %"class.v8::Value"* %1 to %"class.v8::NumberObject"*
  %221 = tail call double @_ZNK2v812NumberObject7ValueOfEv(%"class.v8::NumberObject"* %220) #10
  call void @_ZN12v8_inspector8String1610fromDoubleEdi(%"class.v8_inspector::String16"* nonnull sret %12, double %221, i32 6) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %218, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %12) #10
  %222 = bitcast %"class.v8_inspector::String16"* %12 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %222, i64 0, i32 1, i32 1
  %224 = load i8, i8* %223, align 1
  %225 = icmp slt i8 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %217
  %227 = bitcast %"class.v8_inspector::String16"* %12 to i8**
  %228 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %228) #12
  br label %229

229:                                              ; preds = %217, %226
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %219) #10
  br label %432

230:                                              ; preds = %215
  %231 = tail call zeroext i1 @_ZNK2v85Value15IsBooleanObjectEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %231, label %232, label %246

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %234 = bitcast %"class.v8_inspector::String16"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %234) #10
  %235 = bitcast %"class.v8::Value"* %1 to %"class.v8::BooleanObject"*
  %236 = tail call zeroext i1 @_ZNK2v813BooleanObject7ValueOfEv(%"class.v8::BooleanObject"* %235) #10
  %237 = select i1 %236, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %13, i8* %237) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %233, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %13) #10
  %238 = bitcast %"class.v8_inspector::String16"* %13 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %238, i64 0, i32 1, i32 1
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %232
  %243 = bitcast %"class.v8_inspector::String16"* %13 to i8**
  %244 = load i8*, i8** %243, align 8
  call void @_ZdlPv(i8* %244) #12
  br label %245

245:                                              ; preds = %232, %242
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %234) #10
  br label %432

246:                                              ; preds = %230
  %247 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %247, label %248, label %366

248:                                              ; preds = %246
  %249 = bitcast %"class.v8::Value"* %1 to %"class.v8::Array"*
  %250 = ptrtoint %"class.v8::Value"* %1 to i64
  %251 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 3
  %252 = getelementptr inbounds %"class.std::__1::vector.762", %"class.std::__1::vector.762"* %251, i64 0, i32 0, i32 0
  %253 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %252, align 8
  %254 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 3, i32 0, i32 1
  %255 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %254, align 8
  %256 = icmp eq %"class.v8::Local.595"* %253, %255
  br i1 %256, label %269, label %260

257:                                              ; preds = %260, %265
  %258 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %261, i64 1
  %259 = icmp eq %"class.v8::Local.595"* %258, %255
  br i1 %259, label %269, label %260

260:                                              ; preds = %248, %257
  %261 = phi %"class.v8::Local.595"* [ %258, %257 ], [ %253, %248 ]
  %262 = bitcast %"class.v8::Local.595"* %261 to i64**
  %263 = load i64*, i64** %262, align 8
  %264 = icmp eq i64* %263, null
  br i1 %264, label %257, label %265

265:                                              ; preds = %260
  %266 = load i64, i64* %263, align 8
  %267 = load i64, i64* %44, align 8
  %268 = icmp eq i64 %266, %267
  br i1 %268, label %432, label %257

269:                                              ; preds = %257, %248
  %270 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %249) #10
  %271 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = icmp ult i32 %272, %270
  br i1 %273, label %432, label %274

274:                                              ; preds = %269
  %275 = bitcast %"class.v8::Local.595"** %254 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast %"class.std::__1::vector.762"* %251 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = sub i64 %276, %278
  %280 = ashr exact i64 %279, 3
  %281 = icmp ugt i64 %280, 32
  %282 = inttoptr i64 %276 to %"class.v8::Local.595"*
  br i1 %281, label %432, label %283

283:                                              ; preds = %274
  %284 = sub i32 %272, %270
  store i32 %284, i32* %271, align 8
  %285 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %286 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %285, align 8
  %287 = icmp eq %"class.v8::Local.595"* %286, %282
  br i1 %287, label %292, label %288

288:                                              ; preds = %283
  %289 = inttoptr i64 %276 to i64*
  store i64 %250, i64* %289, align 8
  %290 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %282, i64 1
  %291 = ptrtoint %"class.v8::Local.595"* %290 to i64
  store i64 %291, i64* %275, align 8
  br label %343

292:                                              ; preds = %283
  %293 = ptrtoint %"class.v8::Local.595"* %286 to i64
  %294 = sub i64 %293, %278
  %295 = ashr exact i64 %294, 3
  %296 = add nsw i64 %295, 1
  %297 = icmp ugt i64 %296, 2305843009213693951
  br i1 %297, label %298, label %300

298:                                              ; preds = %292
  %299 = bitcast %"class.std::__1::vector.762"* %251 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %299) #11
  unreachable

300:                                              ; preds = %292
  %301 = bitcast %"class.v8::Local.595"** %285 to i64*
  %302 = icmp ult i64 %295, 1152921504606846975
  br i1 %302, label %303, label %311

303:                                              ; preds = %300
  %304 = ashr exact i64 %294, 2
  %305 = icmp ult i64 %304, %296
  %306 = select i1 %305, i64 %296, i64 %304
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %316, label %308

308:                                              ; preds = %303
  %309 = icmp ugt i64 %306, 2305843009213693951
  br i1 %309, label %310, label %311

310:                                              ; preds = %308
  tail call void @abort() #11
  unreachable

311:                                              ; preds = %308, %300
  %312 = phi i64 [ %306, %308 ], [ 2305843009213693951, %300 ]
  %313 = shl i64 %312, 3
  %314 = tail call i8* @_Znwm(i64 %313) #12
  %315 = bitcast i8* %314 to %"class.v8::Local.595"*
  br label %316

316:                                              ; preds = %311, %303
  %317 = phi i64 [ %312, %311 ], [ 0, %303 ]
  %318 = phi %"class.v8::Local.595"* [ %315, %311 ], [ null, %303 ]
  %319 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %318, i64 %295
  %320 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %318, i64 %317
  %321 = ptrtoint %"class.v8::Local.595"* %320 to i64
  %322 = bitcast %"class.v8::Local.595"* %319 to i64*
  store i64 %250, i64* %322, align 8
  %323 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %319, i64 1
  %324 = ptrtoint %"class.v8::Local.595"* %323 to i64
  %325 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %252, align 8
  %326 = load i64, i64* %275, align 8
  %327 = ptrtoint %"class.v8::Local.595"* %325 to i64
  %328 = sub i64 %326, %327
  %329 = ashr exact i64 %328, 3
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %319, i64 %330
  %332 = ptrtoint %"class.v8::Local.595"* %331 to i64
  %333 = icmp sgt i64 %328, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %316
  %335 = bitcast %"class.v8::Local.595"* %331 to i8*
  %336 = bitcast %"class.v8::Local.595"* %325 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* align 8 %336, i64 %328, i1 false) #10
  %337 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %252, align 8
  br label %338

338:                                              ; preds = %334, %316
  %339 = phi %"class.v8::Local.595"* [ %325, %316 ], [ %337, %334 ]
  store i64 %332, i64* %277, align 8
  store i64 %324, i64* %275, align 8
  store i64 %321, i64* %301, align 8
  %340 = icmp eq %"class.v8::Local.595"* %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %338
  %342 = bitcast %"class.v8::Local.595"* %339 to i8*
  tail call void @_ZdlPv(i8* %342) #12
  br label %343

343:                                              ; preds = %341, %338, %288
  %344 = icmp eq i32 %270, 0
  br i1 %344, label %362, label %345

345:                                              ; preds = %343
  %346 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %347 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %348 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 5, i32 0
  br label %349

349:                                              ; preds = %359, %345
  %350 = phi i32 [ 0, %345 ], [ %360, %359 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %353, label %352

352:                                              ; preds = %349
  tail call void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"* %346, i8 signext 44) #10
  br label %353

353:                                              ; preds = %352, %349
  %354 = load %"class.v8::Context"*, %"class.v8::Context"** %348, align 8
  %355 = tail call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %347, %"class.v8::Context"* %354, i32 %350) #10
  %356 = icmp eq %"class.v8::Value"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  %358 = tail call fastcc zeroext i1 @_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder6appendEN2v85LocalINS2_5ValueEEEj(%"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, %"class.v8::Value"* nonnull %355, i32 3) #10
  br i1 %358, label %359, label %362

359:                                              ; preds = %353, %357
  %360 = add nuw i32 %350, 1
  %361 = icmp eq i32 %360, %270
  br i1 %361, label %362, label %349

362:                                              ; preds = %357, %359, %343
  %363 = phi i1 [ true, %343 ], [ false, %357 ], [ true, %359 ]
  %364 = load %"class.v8::Local.595"*, %"class.v8::Local.595"** %254, align 8
  %365 = getelementptr inbounds %"class.v8::Local.595", %"class.v8::Local.595"* %364, i64 -1
  store %"class.v8::Local.595"* %365, %"class.v8::Local.595"** %254, align 8
  br label %432

366:                                              ; preds = %246
  %367 = tail call zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %367, label %368, label %379

368:                                              ; preds = %366
  %369 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %370 = bitcast %"class.v8_inspector::String16"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %370) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %369, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %14) #10
  %371 = bitcast %"class.v8_inspector::String16"* %14 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %371, i64 0, i32 1, i32 1
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %368
  %376 = bitcast %"class.v8_inspector::String16"* %14 to i8**
  %377 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %377) #12
  br label %378

378:                                              ; preds = %368, %375
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %370) #10
  br label %432

379:                                              ; preds = %366
  %380 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %380, label %381, label %411

381:                                              ; preds = %379
  %382 = tail call zeroext i1 @_ZNK2v85Value6IsDateEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %382, label %411, label %383

383:                                              ; preds = %381
  %384 = tail call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %384, label %411, label %385

385:                                              ; preds = %383
  %386 = tail call zeroext i1 @_ZNK2v85Value13IsNativeErrorEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %386, label %411, label %387

387:                                              ; preds = %385
  %388 = tail call zeroext i1 @_ZNK2v85Value8IsRegExpEv(%"class.v8::Value"* nonnull %1) #10
  br i1 %388, label %411, label %389

389:                                              ; preds = %387
  %390 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %391 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 5, i32 0
  %392 = load %"class.v8::Context"*, %"class.v8::Context"** %391, align 8
  %393 = tail call %"class.v8::String"* @_ZN2v86Object19ObjectProtoToStringENS_5LocalINS_7ContextEEE(%"class.v8::Object"* %390, %"class.v8::Context"* %392) #10
  %394 = icmp eq %"class.v8::String"* %393, null
  br i1 %394, label %411, label %395

395:                                              ; preds = %389
  %396 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 4
  %397 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %396) #10
  br i1 %397, label %432, label %398

398:                                              ; preds = %395
  %399 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %400 = bitcast %"class.v8_inspector::String16"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %400) #10
  %401 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %402 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %401, align 8
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %8, %"class.v8::Isolate"* %402, %"class.v8::String"* nonnull %393) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %399, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %8) #10
  %403 = bitcast %"class.v8_inspector::String16"* %8 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %404 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %403, i64 0, i32 1, i32 1
  %405 = load i8, i8* %404, align 1
  %406 = icmp slt i8 %405, 0
  br i1 %406, label %407, label %410

407:                                              ; preds = %398
  %408 = bitcast %"class.v8_inspector::String16"* %8 to i8**
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #12
  br label %410

410:                                              ; preds = %407, %398
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %400) #10
  br label %432

411:                                              ; preds = %389, %387, %385, %383, %381, %379
  %412 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 5, i32 0
  %413 = load %"class.v8::Context"*, %"class.v8::Context"** %412, align 8
  %414 = tail call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* nonnull %1, %"class.v8::Context"* %413) #10
  %415 = icmp eq %"class.v8::String"* %414, null
  br i1 %415, label %432, label %416

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 4
  %418 = tail call zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"* %417) #10
  br i1 %418, label %432, label %419

419:                                              ; preds = %416
  %420 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 2
  %421 = bitcast %"class.v8_inspector::String16"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %421) #10
  %422 = getelementptr inbounds %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder", %"class.v8_inspector::(anonymous namespace)::V8ValueStringBuilder"* %0, i64 0, i32 1
  %423 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %422, align 8
  call void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* nonnull sret %11, %"class.v8::Isolate"* %423, %"class.v8::String"* nonnull %414) #10
  call void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"* %420, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %11) #10
  %424 = bitcast %"class.v8_inspector::String16"* %11 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %425 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %424, i64 0, i32 1, i32 1
  %426 = load i8, i8* %425, align 1
  %427 = icmp slt i8 %426, 0
  br i1 %427, label %428, label %431

428:                                              ; preds = %419
  %429 = bitcast %"class.v8_inspector::String16"* %11 to i8**
  %430 = load i8*, i8** %429, align 8
  call void @_ZdlPv(i8* %430) #12
  br label %431

431:                                              ; preds = %428, %419
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %421) #10
  br label %432

432:                                              ; preds = %265, %411, %410, %395, %416, %431, %362, %274, %269, %176, %173, %149, %145, %142, %121, %118, %104, %99, %96, %80, %60, %35, %3, %378, %245, %229, %210, %191
  %433 = phi i1 [ %195, %191 ], [ %214, %210 ], [ true, %229 ], [ true, %245 ], [ true, %378 ], [ true, %3 ], [ true, %35 ], [ true, %60 ], [ false, %80 ], [ true, %96 ], [ false, %99 ], [ true, %118 ], [ true, %104 ], [ false, %121 ], [ %143, %145 ], [ false, %142 ], [ false, %149 ], [ %174, %176 ], [ false, %173 ], [ %363, %362 ], [ false, %269 ], [ false, %274 ], [ false, %411 ], [ false, %416 ], [ true, %431 ], [ true, %410 ], [ false, %395 ], [ true, %265 ]
  ret i1 %433
}

declare void @_ZN12v8_inspector15String16BuilderC1Ev(%"class.v8_inspector::String16Builder"*) unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value14IsStringObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v812StringObject7ValueOfEv(%"class.v8::StringObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsBigIntEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value14IsBigIntObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::BigInt"* @_ZNK2v812BigIntObject7ValueOfEv(%"class.v8::BigIntObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsSymbolEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value14IsSymbolObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Symbol"* @_ZNK2v812SymbolObject7ValueOfEv(%"class.v8::SymbolObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value14IsNumberObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder6appendERKNS_8String16E(%"class.v8_inspector::String16Builder"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN12v8_inspector8String1610fromDoubleEdi(%"class.v8_inspector::String16"* sret, double, i32) local_unnamed_addr #2

declare double @_ZNK2v812NumberObject7ValueOfEv(%"class.v8::NumberObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value15IsBooleanObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v813BooleanObject7ValueOfEv(%"class.v8::BooleanObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsProxyEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value6IsDateEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value13IsNativeErrorEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsRegExpEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86Object19ObjectProtoToStringENS_5LocalINS_7ContextEEE(%"class.v8::Object"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88TryCatch9HasCaughtEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector16toProtocolStringEPN2v87IsolateENS0_5LocalINS0_6StringEEE(%"class.v8_inspector::String16"* sret, %"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector15String16Builder6appendEc(%"class.v8_inspector::String16Builder"*, i8 signext) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v86Symbol11DescriptionEPNS_7IsolateE(%"class.v8::Symbol"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare void @_ZN12v8_inspector15String16Builder8toStringEv(%"class.v8_inspector::String16"* sret, %"class.v8_inspector::String16Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE5clearEv(%"class.std::__1::__deque_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.645"** %9, %3
  %11 = ptrtoint %"class.std::__1::unique_ptr.645"** %9 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr.645"** %3 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.645"** %3 to i8**
  br i1 %10, label %14, label %16

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %1
  %17 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %7, align 8
  %18 = and i64 %5, 511
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %5
  %23 = lshr i64 %22, 9
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %3, i64 %23
  %25 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %24, align 8
  %26 = and i64 %22, 511
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %25, i64 %26
  %28 = icmp eq %"class.std::__1::unique_ptr.645"* %27, %19
  br i1 %28, label %29, label %47

29:                                               ; preds = %14, %16
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ]
  %31 = bitcast %"class.std::__1::unique_ptr.645"*** %8 to i64*
  br label %38

32:                                               ; preds = %66
  %33 = bitcast %"class.std::__1::unique_ptr.645"*** %8 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.645"*** %2 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8**
  br label %38

38:                                               ; preds = %29, %32
  %39 = phi i64* [ %30, %29 ], [ %20, %32 ]
  %40 = phi i64* [ %31, %29 ], [ %33, %32 ]
  %41 = phi i8** [ %13, %29 ], [ %37, %32 ]
  %42 = phi i64 [ %12, %29 ], [ %36, %32 ]
  %43 = phi i64 [ %11, %29 ], [ %34, %32 ]
  store i64 0, i64* %39, align 8
  %44 = sub i64 %43, %42
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, 2
  br i1 %46, label %71, label %82

47:                                               ; preds = %16, %66
  %48 = phi %"class.std::__1::unique_ptr.645"* [ %69, %66 ], [ %19, %16 ]
  %49 = phi %"class.std::__1::unique_ptr.645"** [ %67, %66 ], [ %7, %16 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %48, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %50, align 8
  store %"class.v8_inspector::V8ConsoleMessage"* null, %"class.v8_inspector::V8ConsoleMessage"** %50, align 8
  %52 = icmp eq %"class.v8_inspector::V8ConsoleMessage"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %47
  tail call void @_ZN12v8_inspector16V8ConsoleMessageD2Ev(%"class.v8_inspector::V8ConsoleMessage"* nonnull %51) #10
  %54 = bitcast %"class.v8_inspector::V8ConsoleMessage"* %51 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %47, %53
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %48, i64 1
  %57 = ptrtoint %"class.std::__1::unique_ptr.645"* %56 to i64
  %58 = bitcast %"class.std::__1::unique_ptr.645"** %49 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = icmp eq i64 %60, 4096
  br i1 %61, label %62, label %66

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %49, i64 1
  %64 = bitcast %"class.std::__1::unique_ptr.645"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  br label %66

66:                                               ; preds = %55, %62
  %67 = phi %"class.std::__1::unique_ptr.645"** [ %63, %62 ], [ %49, %55 ]
  %68 = phi i64 [ %65, %62 ], [ %57, %55 ]
  %69 = inttoptr i64 %68 to %"class.std::__1::unique_ptr.645"*
  %70 = icmp eq %"class.std::__1::unique_ptr.645"* %27, %69
  br i1 %70, label %32, label %47

71:                                               ; preds = %38, %71
  %72 = phi i8** [ %81, %71 ], [ %41, %38 ]
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #12
  %74 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %2, align 8
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %74, i64 1
  store %"class.std::__1::unique_ptr.645"** %75, %"class.std::__1::unique_ptr.645"*** %2, align 8
  %76 = load i64, i64* %40, align 8
  %77 = ptrtoint %"class.std::__1::unique_ptr.645"** %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = icmp ugt i64 %79, 2
  %81 = bitcast %"class.std::__1::unique_ptr.645"** %75 to i8**
  br i1 %80, label %71, label %82

82:                                               ; preds = %71, %38
  %83 = phi i64 [ %45, %38 ], [ %79, %71 ]
  switch i64 %83, label %87 [
    i64 1, label %85
    i64 2, label %84
  ]

84:                                               ; preds = %82
  br label %85

85:                                               ; preds = %82, %84
  %86 = phi i64 [ 512, %84 ], [ 256, %82 ]
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %85, %82
  ret void
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN12v8_inspector8protocol7Runtime12RemoteObjectENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.35"*, %"class.std::__1::unique_ptr.37"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.37"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.37"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.37"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.37"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.37"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.37"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.37"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.37"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.37"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.37"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8_inspector::protocol::Runtime::RemoteObject"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.37"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.37"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.37"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.37"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !183

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.37"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.37"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.37"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.37"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.37"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.37"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.37"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.37"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.37"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.37"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.37"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.37"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.37"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.37"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.37"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.37"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.37"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.37"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.37"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.37"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.37"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.37"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.37"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.37"*, %"class.std::__1::unique_ptr.37"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.37"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.37"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.37"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.37"*
  %138 = icmp eq %"class.std::__1::unique_ptr.37"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.37"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.37"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8_inspector::protocol::Runtime::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %142, align 8
  store %"class.v8_inspector::protocol::Runtime::RemoteObject"* null, %"class.v8_inspector::protocol::Runtime::RemoteObject"** %142, align 8
  %144 = icmp eq %"class.v8_inspector::protocol::Runtime::RemoteObject"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8_inspector::protocol::Runtime::RemoteObject"* %143 to void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)***
  %147 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %147, i64 2
  %149 = load void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::RemoteObject"*)** %148, align 8
  tail call void %149(%"class.v8_inspector::protocol::Runtime::RemoteObject"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.37"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN2v82V822AnnotateStrongRetainerEPmPKc(i64*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2v86GlobalINS2_5ValueEEENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.9"*, %"class.std::__1::unique_ptr.11"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.11"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.11"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.11"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.11"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.11"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.11"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.11"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.11"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.11"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.11"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8::Global"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.11"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.11"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.11"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.11"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !184

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.11"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.11"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.11"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.11"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.11"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.11"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.11"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.11"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.11"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.11"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.11"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.11"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.11"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.11"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.11"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.11"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.11"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.11"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.11"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.11"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.11"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.11"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.11"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.11"*, %"class.std::__1::unique_ptr.11"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.11"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.11"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.11"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.11"*
  %138 = icmp eq %"class.std::__1::unique_ptr.11"* %133, %137
  br i1 %138, label %155, label %139

139:                                              ; preds = %132, %153
  %140 = phi %"class.std::__1::unique_ptr.11"* [ %141, %153 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.11"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8::Global"*, %"class.v8::Global"** %142, align 8
  store %"class.v8::Global"* null, %"class.v8::Global"** %142, align 8
  %144 = icmp eq %"class.v8::Global"* %143, null
  br i1 %144, label %153, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.v8::Global", %"class.v8::Global"* %143, i64 0, i32 0, i32 0
  %147 = load %"class.v8::Value"*, %"class.v8::Value"** %146, align 8
  %148 = icmp eq %"class.v8::Value"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.v8::Value"* %147 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %150) #10
  br label %151

151:                                              ; preds = %149, %145
  %152 = bitcast %"class.v8::Global"* %143 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %151, %139
  %154 = icmp eq %"class.std::__1::unique_ptr.11"* %141, %137
  br i1 %154, label %155, label %139

155:                                              ; preds = %153, %132
  %156 = icmp eq i64 %135, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %155, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.669"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.801"**
  %13 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.698"* %10, %"class.std::__1::__tree_node.801"* %13) #10
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node.803"**
  %17 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %16, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.689"* %14, %"class.std::__1::__tree_node.803"* %17) #10
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node.806"**
  %21 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %20, align 8
  tail call void @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.680"* %18, %"class.std::__1::__tree_node.806"* %21) #10
  %22 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  ret void

23:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.698"*, %"class.std::__1::__tree_node.801"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.801"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.801"* %1 to %"class.std::__1::__tree_node.801"**
  %6 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.698"* %0, %"class.std::__1::__tree_node.801"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.801"**
  %9 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.698"* %0, %"class.std::__1::__tree_node.801"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %1, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.std::__1::pair.708"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"struct.std::__1::pair.708"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.801"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.689"*, %"class.std::__1::__tree_node.803"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.803"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.803"* %1 to %"class.std::__1::__tree_node.803"**
  %6 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.689"* %0, %"class.std::__1::__tree_node.803"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.803"**
  %9 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.689"* %0, %"class.std::__1::__tree_node.803"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %1, i64 0, i32 2, i32 0
  %11 = bitcast %"struct.std::__1::pair.805"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"struct.std::__1::pair.805"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.803"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.680"*, %"class.std::__1::__tree_node.806"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.806"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.806"* %1 to %"class.std::__1::__tree_node.806"**
  %6 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %5, align 8
  tail call void @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.680"* %0, %"class.std::__1::__tree_node.806"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.806"**
  %9 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %8, align 8
  tail call void @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.680"* %0, %"class.std::__1::__tree_node.806"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %1, i64 0, i32 1
  %11 = bitcast %"class.v8_inspector::String16"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = bitcast %"class.v8_inspector::String16"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.806"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN12v8_inspector22V8InspectorSessionImplEEE11__call_implINS0_20__default_alloc_funcIZNS2_23V8ConsoleMessageStorage10addMessageENS_10unique_ptrINS2_16V8ConsoleMessageENS_14default_deleteISB_EEEEE3$_0S5_EEEEvPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8_inspector::V8InspectorSessionImpl"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unique_ptr.645"**
  %4 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %5, align 8
  %7 = getelementptr inbounds %"class.v8_inspector::V8ConsoleMessage", %"class.v8_inspector::V8ConsoleMessage"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %1, i64 0, i32 14, i32 0, i32 0, i32 0
  %12 = load %"class.v8_inspector::V8ConsoleAgentImpl"*, %"class.v8_inspector::V8ConsoleAgentImpl"** %11, align 8
  tail call void @_ZN12v8_inspector18V8ConsoleAgentImpl12messageAddedEPNS_16V8ConsoleMessageE(%"class.v8_inspector::V8ConsoleAgentImpl"* %12, %"class.v8_inspector::V8ConsoleMessage"* %6) #10
  %13 = load %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %3, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.645", %"class.std::__1::unique_ptr.645"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.v8_inspector::V8ConsoleMessage"*, %"class.v8_inspector::V8ConsoleMessage"** %14, align 8
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi %"class.v8_inspector::V8ConsoleMessage"* [ %15, %10 ], [ %6, %2 ]
  %18 = getelementptr inbounds %"class.v8_inspector::V8InspectorSessionImpl", %"class.v8_inspector::V8InspectorSessionImpl"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %19 = load %"class.v8_inspector::V8RuntimeAgentImpl"*, %"class.v8_inspector::V8RuntimeAgentImpl"** %18, align 8
  tail call void @_ZN12v8_inspector18V8RuntimeAgentImpl12messageAddedEPNS_16V8ConsoleMessageE(%"class.v8_inspector::V8RuntimeAgentImpl"* %19, %"class.v8_inspector::V8ConsoleMessage"* %17) #10
  ret void
}

declare void @_ZN12v8_inspector18V8ConsoleAgentImpl12messageAddedEPNS_16V8ConsoleMessageE(%"class.v8_inspector::V8ConsoleAgentImpl"*, %"class.v8_inspector::V8ConsoleMessage"*) local_unnamed_addr #2

declare void @_ZN12v8_inspector18V8RuntimeAgentImpl12messageAddedEPNS_16V8ConsoleMessageE(%"class.v8_inspector::V8RuntimeAgentImpl"*, %"class.v8_inspector::V8ConsoleMessage"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.645"*, align 8
  %3 = alloca %"class.std::__1::unique_ptr.645"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 511
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -512
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %9, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.645"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %10, i64 1
  store %"class.std::__1::unique_ptr.645"** %13, %"class.std::__1::unique_ptr.645"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.645"** %15, %17
  %19 = ptrtoint %"class.std::__1::unique_ptr.645"** %17 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.645"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %22, align 8
  %24 = icmp ugt %"class.std::__1::unique_ptr.645"** %13, %23
  %25 = ptrtoint %"class.std::__1::unique_ptr.645"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"class.std::__1::unique_ptr.645"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %13, i64 %31
  %33 = ptrtoint %"class.std::__1::unique_ptr.645"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.std::__1::unique_ptr.645"** %32 to i8*
  %39 = bitcast %"class.std::__1::unique_ptr.645"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #10
  %40 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"class.std::__1::unique_ptr.645"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %32, i64 %35
  store %"class.std::__1::unique_ptr.645"** %43, %"class.std::__1::unique_ptr.645"*** %14, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %42, i64 %31
  store %"class.std::__1::unique_ptr.645"** %44, %"class.std::__1::unique_ptr.645"*** %9, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.645"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"class.std::__1::unique_ptr.645"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #12
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.645"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.645"** %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.645"** %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.645"** %13 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.645"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.645"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.645"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"class.std::__1::unique_ptr.645"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %78, i64 1
  %86 = ptrtoint %"class.std::__1::unique_ptr.645"** %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !185

90:                                               ; preds = %77
  %91 = ptrtoint %"class.std::__1::unique_ptr.645"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"class.std::__1::unique_ptr.645"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"class.std::__1::unique_ptr.645"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.std::__1::unique_ptr.645"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"class.std::__1::unique_ptr.645"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"class.std::__1::unique_ptr.645"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 1
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 1
  %106 = bitcast %"class.std::__1::unique_ptr.645"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.645"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 2
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 2
  %111 = bitcast %"class.std::__1::unique_ptr.645"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.645"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 3
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 3
  %116 = bitcast %"class.std::__1::unique_ptr.645"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.645"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 4
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 4
  %121 = bitcast %"class.std::__1::unique_ptr.645"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.645"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 5
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 5
  %126 = bitcast %"class.std::__1::unique_ptr.645"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::unique_ptr.645"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 6
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 6
  %131 = bitcast %"class.std::__1::unique_ptr.645"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.std::__1::unique_ptr.645"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 7
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 7
  %136 = bitcast %"class.std::__1::unique_ptr.645"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.std::__1::unique_ptr.645"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %98, i64 8
  %140 = ptrtoint %"class.std::__1::unique_ptr.645"** %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %100, i64 8
  %142 = icmp eq %"class.std::__1::unique_ptr.645"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"class.std::__1::unique_ptr.645"** %69 to i64
  %145 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"class.std::__1::unique_ptr.645"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"class.std::__1::unique_ptr.645"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.645"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"class.std::__1::unique_ptr.645"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.std::__1::unique_ptr.645"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #12
  %155 = bitcast %"class.std::__1::unique_ptr.645"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %14, align 8
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %159, i64 1
  store %"class.std::__1::unique_ptr.645"** %160, %"class.std::__1::unique_ptr.645"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"class.std::__1::unique_ptr.645"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"class.std::__1::unique_ptr.645"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.std::__1::unique_ptr.645"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"class.std::__1::unique_ptr.645"**
  %180 = inttoptr i64 %168 to %"class.std::__1::unique_ptr.645"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::unique_ptr.645"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #10
  %185 = tail call i8* @_Znwm(i64 4096) #12
  %186 = bitcast %"class.std::__1::unique_ptr.645"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"* %162, %"class.std::__1::unique_ptr.645"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #10
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"class.std::__1::unique_ptr.645"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #10
  %189 = tail call i8* @_Znwm(i64 4096) #12
  %190 = bitcast %"class.std::__1::unique_ptr.645"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"* %162, %"class.std::__1::unique_ptr.645"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #10
  %191 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %166, align 8
  %192 = bitcast %"class.std::__1::unique_ptr.645"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %191, i64 1
  store %"class.std::__1::unique_ptr.645"** %194, %"class.std::__1::unique_ptr.645"*** %166, align 8
  %195 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %163, align 8
  %196 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %171, align 8
  %197 = icmp eq %"class.std::__1::unique_ptr.645"** %195, %196
  %198 = ptrtoint %"class.std::__1::unique_ptr.645"** %196 to i64
  %199 = bitcast %"class.std::__1::unique_ptr.645"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %201, align 8
  %203 = icmp ugt %"class.std::__1::unique_ptr.645"** %194, %202
  %204 = ptrtoint %"class.std::__1::unique_ptr.645"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"class.std::__1::unique_ptr.645"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %194, i64 %210
  %212 = ptrtoint %"class.std::__1::unique_ptr.645"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"class.std::__1::unique_ptr.645"** %211 to i8*
  %218 = bitcast %"class.std::__1::unique_ptr.645"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #10
  %219 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"class.std::__1::unique_ptr.645"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %211, i64 %214
  store %"class.std::__1::unique_ptr.645"** %222, %"class.std::__1::unique_ptr.645"*** %163, align 8
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %221, i64 %210
  store %"class.std::__1::unique_ptr.645"** %223, %"class.std::__1::unique_ptr.645"*** %166, align 8
  %224 = bitcast %"class.std::__1::unique_ptr.645"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #11
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #12
  %236 = bitcast i8* %235 to %"class.std::__1::unique_ptr.645"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %236, i64 %233
  %239 = ptrtoint %"class.std::__1::unique_ptr.645"** %238 to i64
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %236, i64 %229
  %241 = ptrtoint %"class.std::__1::unique_ptr.645"** %240 to i64
  %242 = ptrtoint %"class.std::__1::unique_ptr.645"** %194 to i64
  %243 = ptrtoint %"class.std::__1::unique_ptr.645"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"class.std::__1::unique_ptr.645"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"class.std::__1::unique_ptr.645"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"class.std::__1::unique_ptr.645"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %255, i64 1
  %263 = ptrtoint %"class.std::__1::unique_ptr.645"** %262 to i64
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !186

267:                                              ; preds = %254
  %268 = ptrtoint %"class.std::__1::unique_ptr.645"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"class.std::__1::unique_ptr.645"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"class.std::__1::unique_ptr.645"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"class.std::__1::unique_ptr.645"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"class.std::__1::unique_ptr.645"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"class.std::__1::unique_ptr.645"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 1
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 1
  %283 = bitcast %"class.std::__1::unique_ptr.645"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.std::__1::unique_ptr.645"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 2
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 2
  %288 = bitcast %"class.std::__1::unique_ptr.645"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.std::__1::unique_ptr.645"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 3
  %292 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 3
  %293 = bitcast %"class.std::__1::unique_ptr.645"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.std::__1::unique_ptr.645"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 4
  %297 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 4
  %298 = bitcast %"class.std::__1::unique_ptr.645"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.std::__1::unique_ptr.645"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 5
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 5
  %303 = bitcast %"class.std::__1::unique_ptr.645"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.std::__1::unique_ptr.645"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 6
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 6
  %308 = bitcast %"class.std::__1::unique_ptr.645"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.645"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 7
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 7
  %313 = bitcast %"class.std::__1::unique_ptr.645"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.std::__1::unique_ptr.645"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %275, i64 8
  %317 = ptrtoint %"class.std::__1::unique_ptr.645"** %316 to i64
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %277, i64 8
  %319 = icmp eq %"class.std::__1::unique_ptr.645"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"class.std::__1::unique_ptr.645"** %246 to i64
  %322 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"class.std::__1::unique_ptr.645"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"class.std::__1::unique_ptr.645"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.std::__1::unique_ptr.645"** %324 to i8*
  call void @_ZdlPv(i8* %329) #12
  %330 = bitcast %"class.std::__1::unique_ptr.645"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %163, align 8
  %335 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %334, i64 1
  store %"class.std::__1::unique_ptr.645"** %335, %"class.std::__1::unique_ptr.645"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #11
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #12
  %345 = bitcast i8* %344 to %"class.std::__1::unique_ptr.645"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %345, i64 %170
  %348 = ptrtoint %"class.std::__1::unique_ptr.645"** %347 to i64
  %349 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %345, i64 %339
  %350 = ptrtoint %"class.std::__1::unique_ptr.645"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4096) #12
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"class.std::__1::unique_ptr.645"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %347, i64 %360
  %362 = ptrtoint %"class.std::__1::unique_ptr.645"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #11
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #12
  %374 = bitcast i8* %373 to %"class.std::__1::unique_ptr.645"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %374, i64 %371
  %377 = ptrtoint %"class.std::__1::unique_ptr.645"** %376 to i64
  %378 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %374, i64 %367
  %379 = ptrtoint %"class.std::__1::unique_ptr.645"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #12
  %380 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %163, align 8
  %381 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"class.std::__1::unique_ptr.645"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"class.std::__1::unique_ptr.645"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"class.std::__1::unique_ptr.645"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"class.std::__1::unique_ptr.645"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %387, i64 1
  %391 = ptrtoint %"class.std::__1::unique_ptr.645"** %390 to i64
  %392 = icmp eq %"class.std::__1::unique_ptr.645"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"class.std::__1::unique_ptr.645"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"class.std::__1::unique_ptr.645"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"class.std::__1::unique_ptr.645"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #12
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"class.std::__1::unique_ptr.645"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"class.std::__1::unique_ptr.645"**
  %413 = inttoptr i64 %410 to %"class.std::__1::unique_ptr.645"**
  %414 = icmp eq %"class.std::__1::unique_ptr.645"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"class.std::__1::unique_ptr.645"**
  %417 = inttoptr i64 %407 to %"class.std::__1::unique_ptr.645"**
  %418 = icmp ult %"class.std::__1::unique_ptr.645"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %424, i64 %429
  %431 = bitcast %"class.std::__1::unique_ptr.645"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #10
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"class.std::__1::unique_ptr.645"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"class.std::__1::unique_ptr.645"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #11
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #12
  %448 = bitcast i8* %447 to %"class.std::__1::unique_ptr.645"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %448, i64 %445
  %451 = ptrtoint %"class.std::__1::unique_ptr.645"** %450 to i64
  %452 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %448, i64 %440
  %453 = ptrtoint %"class.std::__1::unique_ptr.645"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"class.std::__1::unique_ptr.645"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"class.std::__1::unique_ptr.645"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"class.std::__1::unique_ptr.645"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %465, i64 1
  %473 = ptrtoint %"class.std::__1::unique_ptr.645"** %472 to i64
  %474 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !187

477:                                              ; preds = %464
  %478 = ptrtoint %"class.std::__1::unique_ptr.645"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"class.std::__1::unique_ptr.645"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"class.std::__1::unique_ptr.645"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"class.std::__1::unique_ptr.645"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"class.std::__1::unique_ptr.645"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"class.std::__1::unique_ptr.645"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 1
  %492 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 1
  %493 = bitcast %"class.std::__1::unique_ptr.645"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.std::__1::unique_ptr.645"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 2
  %497 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 2
  %498 = bitcast %"class.std::__1::unique_ptr.645"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.std::__1::unique_ptr.645"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 3
  %502 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 3
  %503 = bitcast %"class.std::__1::unique_ptr.645"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.std::__1::unique_ptr.645"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 4
  %507 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 4
  %508 = bitcast %"class.std::__1::unique_ptr.645"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.std::__1::unique_ptr.645"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 5
  %512 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 5
  %513 = bitcast %"class.std::__1::unique_ptr.645"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.std::__1::unique_ptr.645"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 6
  %517 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 6
  %518 = bitcast %"class.std::__1::unique_ptr.645"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.std::__1::unique_ptr.645"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 7
  %522 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 7
  %523 = bitcast %"class.std::__1::unique_ptr.645"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.std::__1::unique_ptr.645"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %485, i64 8
  %527 = ptrtoint %"class.std::__1::unique_ptr.645"** %526 to i64
  %528 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %487, i64 8
  %529 = icmp eq %"class.std::__1::unique_ptr.645"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"class.std::__1::unique_ptr.645"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #12
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"class.std::__1::unique_ptr.645"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %541, i64 -1
  %543 = bitcast %"class.std::__1::unique_ptr.645"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"class.std::__1::unique_ptr.645"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"class.std::__1::unique_ptr.645"** %542 to i64
  %547 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %166, align 8
  %548 = icmp eq %"class.std::__1::unique_ptr.645"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.645"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.645"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.645"** %6 to i64
  %9 = bitcast %"class.std::__1::unique_ptr.645"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %13, align 8
  %15 = icmp ugt %"class.std::__1::unique_ptr.645"** %12, %14
  %16 = ptrtoint %"class.std::__1::unique_ptr.645"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.std::__1::unique_ptr.645"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %12, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.645"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.std::__1::unique_ptr.645"** %23 to i8*
  %30 = bitcast %"class.std::__1::unique_ptr.645"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.std::__1::unique_ptr.645"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %23, i64 %26
  store %"class.std::__1::unique_ptr.645"** %34, %"class.std::__1::unique_ptr.645"*** %3, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %33, i64 %22
  store %"class.std::__1::unique_ptr.645"** %35, %"class.std::__1::unique_ptr.645"*** %11, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.645"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.std::__1::unique_ptr.645"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"class.std::__1::unique_ptr.645"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %50, i64 %47
  %53 = ptrtoint %"class.std::__1::unique_ptr.645"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %50, i64 %43
  %55 = ptrtoint %"class.std::__1::unique_ptr.645"** %54 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.645"** %12 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.645"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.std::__1::unique_ptr.645"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.std::__1::unique_ptr.645"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.std::__1::unique_ptr.645"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %69, i64 1
  %77 = ptrtoint %"class.std::__1::unique_ptr.645"** %76 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !188

81:                                               ; preds = %68
  %82 = ptrtoint %"class.std::__1::unique_ptr.645"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.std::__1::unique_ptr.645"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.std::__1::unique_ptr.645"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.std::__1::unique_ptr.645"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.std::__1::unique_ptr.645"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.std::__1::unique_ptr.645"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 1
  %97 = bitcast %"class.std::__1::unique_ptr.645"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.645"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 2
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 2
  %102 = bitcast %"class.std::__1::unique_ptr.645"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.645"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 3
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 3
  %107 = bitcast %"class.std::__1::unique_ptr.645"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::unique_ptr.645"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 4
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 4
  %112 = bitcast %"class.std::__1::unique_ptr.645"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.645"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 5
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 5
  %117 = bitcast %"class.std::__1::unique_ptr.645"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.645"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 6
  %122 = bitcast %"class.std::__1::unique_ptr.645"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.645"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 7
  %127 = bitcast %"class.std::__1::unique_ptr.645"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.645"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %89, i64 8
  %131 = ptrtoint %"class.std::__1::unique_ptr.645"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %91, i64 8
  %133 = icmp eq %"class.std::__1::unique_ptr.645"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.std::__1::unique_ptr.645"** %60 to i64
  %136 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.std::__1::unique_ptr.645"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.645"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.645"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.std::__1::unique_ptr.645"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.std::__1::unique_ptr.645"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"class.std::__1::unique_ptr.645"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.std::__1::unique_ptr.645"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %3, align 8
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %152, i64 1
  store %"class.std::__1::unique_ptr.645"** %153, %"class.std::__1::unique_ptr.645"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_10unique_ptrIN12v8_inspector16V8ConsoleMessageENS_14default_deleteIS3_EEEENS_9allocatorIS7_EEE10push_frontEOS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr.645"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.645"** %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.645"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %12, align 8
  %14 = icmp ult %"class.std::__1::unique_ptr.645"** %11, %13
  %15 = bitcast %"class.std::__1::unique_ptr.645"*** %12 to i64*
  %16 = ptrtoint %"class.std::__1::unique_ptr.645"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.std::__1::unique_ptr.645"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %11, i64 %22
  %24 = ptrtoint %"class.std::__1::unique_ptr.645"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %23, i64 %29
  %31 = bitcast %"class.std::__1::unique_ptr.645"** %30 to i8*
  %32 = bitcast %"class.std::__1::unique_ptr.645"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.std::__1::unique_ptr.645"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.std::__1::unique_ptr.645"** [ %30, %27 ], [ %23, %17 ]
  store %"class.std::__1::unique_ptr.645"** %36, %"class.std::__1::unique_ptr.645"*** %3, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %35, i64 %22
  store %"class.std::__1::unique_ptr.645"** %37, %"class.std::__1::unique_ptr.645"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.std::__1::unique_ptr.645"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %51, i64 %48
  %54 = ptrtoint %"class.std::__1::unique_ptr.645"** %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %51, i64 %43
  %56 = ptrtoint %"class.std::__1::unique_ptr.645"** %55 to i64
  %57 = ptrtoint %"class.std::__1::unique_ptr.645"** %4 to i64
  %58 = ptrtoint %"class.std::__1::unique_ptr.645"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.std::__1::unique_ptr.645"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.std::__1::unique_ptr.645"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.std::__1::unique_ptr.645"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %70, i64 1
  %78 = ptrtoint %"class.std::__1::unique_ptr.645"** %77 to i64
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !189

82:                                               ; preds = %69
  %83 = ptrtoint %"class.std::__1::unique_ptr.645"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.std::__1::unique_ptr.645"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.std::__1::unique_ptr.645"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.std::__1::unique_ptr.645"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.std::__1::unique_ptr.645"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.std::__1::unique_ptr.645"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 1
  %98 = bitcast %"class.std::__1::unique_ptr.645"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.645"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 2
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 2
  %103 = bitcast %"class.std::__1::unique_ptr.645"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.645"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 3
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 3
  %108 = bitcast %"class.std::__1::unique_ptr.645"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.645"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 4
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 4
  %113 = bitcast %"class.std::__1::unique_ptr.645"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::unique_ptr.645"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 5
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 5
  %118 = bitcast %"class.std::__1::unique_ptr.645"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.645"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 6
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 6
  %123 = bitcast %"class.std::__1::unique_ptr.645"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.645"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 7
  %128 = bitcast %"class.std::__1::unique_ptr.645"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.645"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %90, i64 8
  %132 = ptrtoint %"class.std::__1::unique_ptr.645"** %131 to i64
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %92, i64 8
  %134 = icmp eq %"class.std::__1::unique_ptr.645"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.std::__1::unique_ptr.645"** %61 to i64
  %137 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.std::__1::unique_ptr.645"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.645"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.std::__1::unique_ptr.645"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.std::__1::unique_ptr.645"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::unique_ptr.645"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.std::__1::unique_ptr.645"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %148, i64 -1
  %150 = bitcast %"class.std::__1::unique_ptr.645"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::unique_ptr.645"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.std::__1::unique_ptr.645"**, %"class.std::__1::unique_ptr.645"*** %3, align 8
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.645"*, %"class.std::__1::unique_ptr.645"** %153, i64 -1
  store %"class.std::__1::unique_ptr.645"** %154, %"class.std::__1::unique_ptr.645"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN12v8_inspector22V8InspectorSessionImplEEE11__call_implINS0_20__default_alloc_funcIZNS2_23V8ConsoleMessageStorage5clearEvE3$_1S5_EEEEvPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.v8_inspector::V8InspectorSessionImpl"*) #0 align 2 {
  %3 = alloca %"class.v8_inspector::String16", align 8
  %4 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  call void @_ZN12v8_inspector8String16C1EPKc(%"class.v8_inspector::String16"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #10
  call void @_ZN12v8_inspector22V8InspectorSessionImpl18releaseObjectGroupERKNS_8String16E(%"class.v8_inspector::V8InspectorSessionImpl"* %1, %"class.v8_inspector::String16"* nonnull dereferenceable(32) %3) #10
  %5 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.v8_inspector::String16"* %3 to i8**
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret void
}

declare void @_ZN12v8_inspector22V8InspectorSessionImpl18releaseObjectGroupERKNS_8String16E(%"class.v8_inspector::V8InspectorSessionImpl"*, %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !43
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !43
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !43
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE30__emplace_hint_unique_key_argsIS2_JRKS2_EEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEENS_21__tree_const_iteratorIS2_SG_lEERKT_DpOT0_(%"class.std::__1::__tree.680"*, %"class.std::__1::__tree_end_node"*, %"class.v8_inspector::String16"* dereferenceable(32), %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_(%"class.std::__1::__tree.680"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.v8_inspector::String16"* dereferenceable(32) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node.806"**
  %11 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.806"* %11, null
  br i1 %12, label %13, label %229

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 64) #12, !noalias !190
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"class.v8_inspector::String16"* %3 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1, !noalias !190
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.v8_inspector::String16"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #10, !noalias !190
  br label %201

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8, !noalias !190
  %25 = bitcast i16* %24 to i8*
  %26 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !190
  %28 = icmp ult i64 %27, 11
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = trunc i64 %27 to i8
  %31 = getelementptr inbounds i8, i8* %14, i64 55
  store i8 %30, i8* %31, align 1, !noalias !190
  br label %50

32:                                               ; preds = %22
  %33 = icmp ugt i64 %27, 9223372036854775791
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = bitcast i8* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %35) #11, !noalias !190
  unreachable

36:                                               ; preds = %32
  %37 = add nuw nsw i64 %27, 8
  %38 = and i64 %37, -8
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  call void @abort() #11, !noalias !190
  unreachable

41:                                               ; preds = %36
  %42 = shl i64 %38, 1
  %43 = call i8* @_Znwm(i64 %42) #12, !noalias !190
  %44 = bitcast i8* %15 to i8**
  store i8* %43, i8** %44, align 8, !noalias !190
  %45 = or i64 %38, -9223372036854775808
  %46 = getelementptr inbounds i8, i8* %14, i64 48
  %47 = bitcast i8* %46 to i64*
  store i64 %45, i64* %47, align 8, !noalias !190
  %48 = getelementptr inbounds i8, i8* %14, i64 40
  %49 = bitcast i8* %48 to i64*
  store i64 %27, i64* %49, align 8, !noalias !190
  br label %50

50:                                               ; preds = %41, %29
  %51 = phi i8* [ %15, %29 ], [ %43, %41 ]
  %52 = bitcast i8* %51 to i16*
  %53 = add nuw nsw i64 %27, 1
  %54 = add i64 %27, 1
  %55 = icmp ult i64 %54, 16
  br i1 %55, label %148, label %56

56:                                               ; preds = %50
  %57 = shl i64 %27, 1
  %58 = add i64 %57, 2
  %59 = getelementptr i8, i8* %51, i64 %58
  %60 = add i64 %27, 1
  %61 = getelementptr i16, i16* %24, i64 %60
  %62 = bitcast i16* %61 to i8*
  %63 = icmp ult i8* %51, %62
  %64 = icmp ugt i8* %59, %25
  %65 = and i1 %63, %64
  br i1 %65, label %148, label %66

66:                                               ; preds = %56
  %67 = and i64 %54, -16
  %68 = getelementptr i16, i16* %52, i64 %67
  %69 = sub i64 %53, %67
  %70 = getelementptr i16, i16* %24, i64 %67
  %71 = add i64 %67, -16
  %72 = lshr exact i64 %71, 4
  %73 = add nuw nsw i64 %72, 1
  %74 = and i64 %73, 3
  %75 = icmp ult i64 %71, 48
  br i1 %75, label %127, label %76

76:                                               ; preds = %66
  %77 = sub nsw i64 %73, %74
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ 0, %76 ], [ %124, %78 ]
  %80 = phi i64 [ %77, %76 ], [ %125, %78 ]
  %81 = getelementptr i16, i16* %52, i64 %79
  %82 = getelementptr i16, i16* %24, i64 %79
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !193, !noalias !190
  %85 = getelementptr i16, i16* %82, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !193, !noalias !190
  %88 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !196, !noalias !198
  %89 = getelementptr i16, i16* %81, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !196, !noalias !198
  %91 = or i64 %79, 16
  %92 = getelementptr i16, i16* %52, i64 %91
  %93 = getelementptr i16, i16* %24, i64 %91
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !193, !noalias !190
  %96 = getelementptr i16, i16* %93, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !193, !noalias !190
  %99 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !196, !noalias !198
  %100 = getelementptr i16, i16* %92, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !196, !noalias !198
  %102 = or i64 %79, 32
  %103 = getelementptr i16, i16* %52, i64 %102
  %104 = getelementptr i16, i16* %24, i64 %102
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !193, !noalias !190
  %107 = getelementptr i16, i16* %104, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !193, !noalias !190
  %110 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !196, !noalias !198
  %111 = getelementptr i16, i16* %103, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !196, !noalias !198
  %113 = or i64 %79, 48
  %114 = getelementptr i16, i16* %52, i64 %113
  %115 = getelementptr i16, i16* %24, i64 %113
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !193, !noalias !190
  %118 = getelementptr i16, i16* %115, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !193, !noalias !190
  %121 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !196, !noalias !198
  %122 = getelementptr i16, i16* %114, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !196, !noalias !198
  %124 = add i64 %79, 64
  %125 = add i64 %80, -4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %78, !llvm.loop !199

127:                                              ; preds = %78, %66
  %128 = phi i64 [ 0, %66 ], [ %124, %78 ]
  %129 = icmp eq i64 %74, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %127, %130
  %131 = phi i64 [ %143, %130 ], [ %128, %127 ]
  %132 = phi i64 [ %144, %130 ], [ %74, %127 ]
  %133 = getelementptr i16, i16* %52, i64 %131
  %134 = getelementptr i16, i16* %24, i64 %131
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !193, !noalias !190
  %137 = getelementptr i16, i16* %134, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !193, !noalias !190
  %140 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %140, align 2, !alias.scope !196, !noalias !198
  %141 = getelementptr i16, i16* %133, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %142, align 2, !alias.scope !196, !noalias !198
  %143 = add i64 %131, 16
  %144 = add i64 %132, -1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %130, !llvm.loop !200

146:                                              ; preds = %130, %127
  %147 = icmp eq i64 %54, %67
  br i1 %147, label %201, label %148

148:                                              ; preds = %146, %56, %50
  %149 = phi i16* [ %52, %56 ], [ %52, %50 ], [ %68, %146 ]
  %150 = phi i64 [ %53, %56 ], [ %53, %50 ], [ %69, %146 ]
  %151 = phi i16* [ %24, %56 ], [ %24, %50 ], [ %70, %146 ]
  %152 = add i64 %150, -1
  %153 = and i64 %150, 7
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %148, %155
  %156 = phi i16* [ %162, %155 ], [ %149, %148 ]
  %157 = phi i64 [ %161, %155 ], [ %150, %148 ]
  %158 = phi i16* [ %163, %155 ], [ %151, %148 ]
  %159 = phi i64 [ %164, %155 ], [ %153, %148 ]
  %160 = load i16, i16* %158, align 2, !noalias !190
  store i16 %160, i16* %156, align 2, !noalias !190
  %161 = add i64 %157, -1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = getelementptr inbounds i16, i16* %158, i64 1
  %164 = add i64 %159, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %155, !llvm.loop !201

166:                                              ; preds = %155, %148
  %167 = phi i16* [ %149, %148 ], [ %162, %155 ]
  %168 = phi i64 [ %150, %148 ], [ %161, %155 ]
  %169 = phi i16* [ %151, %148 ], [ %163, %155 ]
  %170 = icmp ult i64 %152, 7
  br i1 %170, label %201, label %171

171:                                              ; preds = %166, %171
  %172 = phi i16* [ %198, %171 ], [ %167, %166 ]
  %173 = phi i64 [ %197, %171 ], [ %168, %166 ]
  %174 = phi i16* [ %199, %171 ], [ %169, %166 ]
  %175 = load i16, i16* %174, align 2, !noalias !190
  store i16 %175, i16* %172, align 2, !noalias !190
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = getelementptr inbounds i16, i16* %174, i64 1
  %178 = load i16, i16* %177, align 2, !noalias !190
  store i16 %178, i16* %176, align 2, !noalias !190
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = getelementptr inbounds i16, i16* %174, i64 2
  %181 = load i16, i16* %180, align 2, !noalias !190
  store i16 %181, i16* %179, align 2, !noalias !190
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = getelementptr inbounds i16, i16* %174, i64 3
  %184 = load i16, i16* %183, align 2, !noalias !190
  store i16 %184, i16* %182, align 2, !noalias !190
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = getelementptr inbounds i16, i16* %174, i64 4
  %187 = load i16, i16* %186, align 2, !noalias !190
  store i16 %187, i16* %185, align 2, !noalias !190
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = getelementptr inbounds i16, i16* %174, i64 5
  %190 = load i16, i16* %189, align 2, !noalias !190
  store i16 %190, i16* %188, align 2, !noalias !190
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = getelementptr inbounds i16, i16* %174, i64 6
  %193 = load i16, i16* %192, align 2, !noalias !190
  store i16 %193, i16* %191, align 2, !noalias !190
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = getelementptr inbounds i16, i16* %174, i64 7
  %196 = load i16, i16* %195, align 2, !noalias !190
  store i16 %196, i16* %194, align 2, !noalias !190
  %197 = add i64 %173, -8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = getelementptr inbounds i16, i16* %174, i64 8
  %200 = icmp eq i64 %197, 0
  br i1 %200, label %201, label %171, !llvm.loop !202

201:                                              ; preds = %166, %171, %146, %20
  %202 = getelementptr inbounds i8, i8* %14, i64 56
  %203 = bitcast i8* %202 to i64*
  %204 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %3, i64 0, i32 1
  %205 = load i64, i64* %204, align 8, !noalias !190
  store i64 %205, i64* %203, align 8, !noalias !190
  %206 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast i8* %14 to %"class.std::__1::__tree_node.806"*
  %209 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %210 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #10
  %211 = bitcast i8* %210 to i64*
  store i64 %207, i64* %211, align 8
  %212 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 0
  %214 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %214, i64 0, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  %217 = icmp eq %"class.std::__1::__tree_node_base"* %216, null
  br i1 %217, label %222, label %218

218:                                              ; preds = %201
  %219 = ptrtoint %"class.std::__1::__tree_node_base"* %216 to i64
  %220 = bitcast %"class.std::__1::__tree.680"* %0 to i64*
  store i64 %219, i64* %220, align 8
  %221 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %222

222:                                              ; preds = %218, %201
  %223 = phi %"class.std::__1::__tree_node_base"* [ %209, %201 ], [ %221, %218 ]
  %224 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %225, %"class.std::__1::__tree_node_base"* %223) #10
  %226 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 2, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %227, 1
  store i64 %228, i64* %226, align 8
  br label %229

229:                                              ; preds = %222, %4
  %230 = phi i8 [ 1, %222 ], [ 0, %4 ]
  %231 = phi %"class.std::__1::__tree_node.806"* [ %208, %222 ], [ %11, %4 ]
  %232 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %231, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %233 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %232, 0
  %234 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %233, i8 %230, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %234
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_SA_EElEERPNS_15__tree_end_nodeISC_EESD_RKT_(%"class.std::__1::__tree.680"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.v8_inspector::String16"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %56, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %35 = select i1 %23, i16* %33, i16* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i16**
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i16*
  %39 = select i1 %14, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %49, %31
  %41 = phi i64 [ %50, %49 ], [ %29, %31 ]
  %42 = phi i16* [ %52, %49 ], [ %39, %31 ]
  %43 = phi i16* [ %51, %49 ], [ %35, %31 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %40
  %48 = icmp ult i16 %45, %44
  br i1 %48, label %226, label %49

49:                                               ; preds = %47
  %50 = add i64 %41, -1
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = getelementptr inbounds i16, i16* %42, i64 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %49, %9
  %55 = icmp ult i64 %27, %19
  br i1 %55, label %56, label %226

56:                                               ; preds = %40, %5, %54
  %57 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %58, %1
  br i1 %59, label %129, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60, %64
  %65 = phi %"class.std::__1::__tree_node_base"* [ %67, %64 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %65, i64 0, i32 1
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %80, label %64

69:                                               ; preds = %60, %69
  %70 = phi %"class.std::__1::__tree_end_node"* [ %74, %69 ], [ %1, %60 ]
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 2
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"class.std::__1::__tree_end_node"**
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, %71
  br i1 %77, label %69, label %78

78:                                               ; preds = %69
  %79 = bitcast %"class.std::__1::__tree_end_node"* %74 to %"class.std::__1::__tree_node_base"*
  br label %80

80:                                               ; preds = %64, %78
  %81 = phi %"class.std::__1::__tree_node_base"* [ %79, %78 ], [ %65, %64 ]
  %82 = ptrtoint %"class.std::__1::__tree_node_base"* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 1
  %84 = bitcast %"class.v8_inspector::String16"* %4 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  %88 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = zext i8 %86 to i64
  %91 = select i1 %87, i64 %89, i64 %90
  %92 = bitcast %"class.std::__1::__tree_node_base"* %83 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 1, i32 1
  %97 = bitcast %"class.std::__1::__tree_node_base"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %94 to i64
  %100 = select i1 %95, i64 %98, i64 %99
  %101 = icmp ult i64 %91, %100
  %102 = select i1 %101, i64 %91, i64 %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %127, label %104

104:                                              ; preds = %80
  %105 = bitcast %"class.std::__1::__tree_node_base"* %83 to i16**
  %106 = load i16*, i16** %105, align 8
  %107 = bitcast %"class.std::__1::__tree_node_base"* %83 to i16*
  %108 = select i1 %95, i16* %106, i16* %107
  %109 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i16*, i16** %109, align 8
  %111 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %112 = select i1 %87, i16* %110, i16* %111
  br label %113

113:                                              ; preds = %122, %104
  %114 = phi i64 [ %123, %122 ], [ %102, %104 ]
  %115 = phi i16* [ %125, %122 ], [ %112, %104 ]
  %116 = phi i16* [ %124, %122 ], [ %108, %104 ]
  %117 = load i16, i16* %116, align 2
  %118 = load i16, i16* %115, align 2
  %119 = icmp ult i16 %117, %118
  br i1 %119, label %129, label %120

120:                                              ; preds = %113
  %121 = icmp ult i16 %118, %117
  br i1 %121, label %139, label %122

122:                                              ; preds = %120
  %123 = add i64 %114, -1
  %124 = getelementptr inbounds i16, i16* %116, i64 1
  %125 = getelementptr inbounds i16, i16* %115, i64 1
  %126 = icmp eq i64 %123, 0
  br i1 %126, label %127, label %113

127:                                              ; preds = %122, %80
  %128 = icmp ult i64 %100, %91
  br i1 %128, label %129, label %139

129:                                              ; preds = %113, %56, %127
  %130 = phi i64 [ %82, %127 ], [ %6, %56 ], [ %82, %113 ]
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node_base"* %132, null
  br i1 %133, label %134, label %135

134:                                              ; preds = %129
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %130, i64* %136, align 8
  %137 = inttoptr i64 %130 to %"class.std::__1::__tree_node_base"*
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 1
  br label %416

139:                                              ; preds = %120, %127
  %140 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.806"**
  %141 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node.806"* %141, null
  br i1 %142, label %224, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i16*, i16** %145, align 8
  %147 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %148 = select i1 %87, i16* %146, i16* %147
  br label %149

149:                                              ; preds = %220, %143
  %150 = phi %"class.std::__1::__tree_node.806"* [ %223, %220 ], [ %141, %143 ]
  %151 = phi %"class.std::__1::__tree_node_base"** [ %222, %220 ], [ %144, %143 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 1
  %153 = bitcast %"class.v8_inspector::String16"* %152 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %154 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %153, i64 0, i32 1, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = icmp slt i8 %155, 0
  %157 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = zext i8 %155 to i64
  %160 = select i1 %156, i64 %158, i64 %159
  %161 = icmp ult i64 %160, %91
  %162 = select i1 %161, i64 %160, i64 %91
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %183, label %164

164:                                              ; preds = %149
  %165 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i16*, i16** %165, align 8
  %167 = bitcast %"class.v8_inspector::String16"* %152 to i16*
  %168 = select i1 %156, i16* %166, i16* %167
  br label %169

169:                                              ; preds = %178, %164
  %170 = phi i64 [ %179, %178 ], [ %162, %164 ]
  %171 = phi i16* [ %181, %178 ], [ %168, %164 ]
  %172 = phi i16* [ %180, %178 ], [ %148, %164 ]
  %173 = load i16, i16* %172, align 2
  %174 = load i16, i16* %171, align 2
  %175 = icmp ult i16 %173, %174
  br i1 %175, label %185, label %176

176:                                              ; preds = %169
  %177 = icmp ult i16 %174, %173
  br i1 %177, label %191, label %178

178:                                              ; preds = %176
  %179 = add i64 %170, -1
  %180 = getelementptr inbounds i16, i16* %172, i64 1
  %181 = getelementptr inbounds i16, i16* %171, i64 1
  %182 = icmp eq i64 %179, 0
  br i1 %182, label %183, label %169

183:                                              ; preds = %178, %149
  %184 = icmp ult i64 %91, %160
  br i1 %184, label %185, label %191

185:                                              ; preds = %169, %183
  %186 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, null
  br i1 %188, label %189, label %220

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %190, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

191:                                              ; preds = %176, %183
  br i1 %163, label %211, label %192

192:                                              ; preds = %191
  %193 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i16*, i16** %193, align 8
  %195 = bitcast %"class.v8_inspector::String16"* %152 to i16*
  %196 = select i1 %156, i16* %194, i16* %195
  br label %197

197:                                              ; preds = %206, %192
  %198 = phi i64 [ %207, %206 ], [ %162, %192 ]
  %199 = phi i16* [ %209, %206 ], [ %148, %192 ]
  %200 = phi i16* [ %208, %206 ], [ %196, %192 ]
  %201 = load i16, i16* %200, align 2
  %202 = load i16, i16* %199, align 2
  %203 = icmp ult i16 %201, %202
  br i1 %203, label %212, label %204

204:                                              ; preds = %197
  %205 = icmp ult i16 %202, %201
  br i1 %205, label %218, label %206

206:                                              ; preds = %204
  %207 = add i64 %198, -1
  %208 = getelementptr inbounds i16, i16* %200, i64 1
  %209 = getelementptr inbounds i16, i16* %199, i64 1
  %210 = icmp eq i64 %207, 0
  br i1 %210, label %211, label %197

211:                                              ; preds = %206, %191
  br i1 %161, label %212, label %218

212:                                              ; preds = %197, %211
  %213 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 0, i32 1
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = icmp eq %"class.std::__1::__tree_node_base"* %214, null
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %217, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

218:                                              ; preds = %211, %204
  %219 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %150, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %219, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

220:                                              ; preds = %212, %185
  %221 = phi %"class.std::__1::__tree_node_base"* [ %187, %185 ], [ %214, %212 ]
  %222 = phi %"class.std::__1::__tree_node_base"** [ %186, %185 ], [ %213, %212 ]
  %223 = bitcast %"class.std::__1::__tree_node_base"* %221 to %"class.std::__1::__tree_node.806"*
  br label %149

224:                                              ; preds = %139
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %416

226:                                              ; preds = %47, %54
  br i1 %30, label %250, label %227

227:                                              ; preds = %226
  %228 = bitcast %"class.std::__1::__tree_end_node"* %10 to i16**
  %229 = load i16*, i16** %228, align 8
  %230 = bitcast %"class.std::__1::__tree_end_node"* %10 to i16*
  %231 = select i1 %14, i16* %229, i16* %230
  %232 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i16*, i16** %232, align 8
  %234 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %235 = select i1 %23, i16* %233, i16* %234
  br label %236

236:                                              ; preds = %245, %227
  %237 = phi i64 [ %246, %245 ], [ %29, %227 ]
  %238 = phi i16* [ %248, %245 ], [ %235, %227 ]
  %239 = phi i16* [ %247, %245 ], [ %231, %227 ]
  %240 = load i16, i16* %239, align 2
  %241 = load i16, i16* %238, align 2
  %242 = icmp ult i16 %240, %241
  br i1 %242, label %251, label %243

243:                                              ; preds = %236
  %244 = icmp ult i16 %241, %240
  br i1 %244, label %413, label %245

245:                                              ; preds = %243
  %246 = add i64 %237, -1
  %247 = getelementptr inbounds i16, i16* %239, i64 1
  %248 = getelementptr inbounds i16, i16* %238, i64 1
  %249 = icmp eq i64 %246, 0
  br i1 %249, label %250, label %236

250:                                              ; preds = %245, %226
  br i1 %28, label %251, label %413

251:                                              ; preds = %236, %250
  %252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, null
  br i1 %254, label %255, label %263

255:                                              ; preds = %251
  %256 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %257 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %258 = bitcast %"class.std::__1::__tree_end_node"* %257 to %"class.std::__1::__tree_end_node"**
  %259 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %259, i64 0, i32 0
  %261 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %260, align 8
  %262 = icmp eq %"class.std::__1::__tree_node_base"* %261, %256
  br i1 %262, label %279, label %270

263:                                              ; preds = %251, %263
  %264 = phi %"class.std::__1::__tree_node_base"* [ %266, %263 ], [ %253, %251 ]
  %265 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %264, i64 0, i32 0, i32 0
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %265, align 8
  %267 = icmp eq %"class.std::__1::__tree_node_base"* %266, null
  br i1 %267, label %268, label %263

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %264, i64 0, i32 0
  br label %279

270:                                              ; preds = %255, %270
  %271 = phi %"class.std::__1::__tree_end_node"** [ %274, %270 ], [ %258, %255 ]
  %272 = bitcast %"class.std::__1::__tree_end_node"** %271 to %"class.std::__1::__tree_node_base"**
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %273, i64 0, i32 2
  %275 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %274, align 8
  %276 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %275, i64 0, i32 0
  %277 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %276, align 8
  %278 = icmp eq %"class.std::__1::__tree_node_base"* %277, %273
  br i1 %278, label %279, label %270

279:                                              ; preds = %270, %268, %255
  %280 = phi %"class.std::__1::__tree_end_node"* [ %269, %268 ], [ %259, %255 ], [ %275, %270 ]
  %281 = icmp eq %"class.std::__1::__tree_end_node"* %280, %7
  br i1 %281, label %321, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %280, i64 4
  %284 = bitcast %"class.std::__1::__tree_end_node"* %283 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %284, i64 0, i32 1, i32 1
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  %288 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %280, i64 5
  %289 = bitcast %"class.std::__1::__tree_end_node"* %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = zext i8 %286 to i64
  %292 = select i1 %287, i64 %290, i64 %291
  %293 = icmp ult i64 %292, %27
  %294 = select i1 %293, i64 %292, i64 %27
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %319, label %296

296:                                              ; preds = %282
  %297 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load i16*, i16** %297, align 8
  %299 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %300 = select i1 %23, i16* %298, i16* %299
  %301 = bitcast %"class.std::__1::__tree_end_node"* %283 to i16**
  %302 = load i16*, i16** %301, align 8
  %303 = bitcast %"class.std::__1::__tree_end_node"* %283 to i16*
  %304 = select i1 %287, i16* %302, i16* %303
  br label %305

305:                                              ; preds = %314, %296
  %306 = phi i64 [ %315, %314 ], [ %294, %296 ]
  %307 = phi i16* [ %317, %314 ], [ %304, %296 ]
  %308 = phi i16* [ %316, %314 ], [ %300, %296 ]
  %309 = load i16, i16* %308, align 2
  %310 = load i16, i16* %307, align 2
  %311 = icmp ult i16 %309, %310
  br i1 %311, label %321, label %312

312:                                              ; preds = %305
  %313 = icmp ult i16 %310, %309
  br i1 %313, label %326, label %314

314:                                              ; preds = %312
  %315 = add i64 %306, -1
  %316 = getelementptr inbounds i16, i16* %308, i64 1
  %317 = getelementptr inbounds i16, i16* %307, i64 1
  %318 = icmp eq i64 %315, 0
  br i1 %318, label %319, label %305

319:                                              ; preds = %314, %282
  %320 = icmp ult i64 %27, %292
  br i1 %320, label %321, label %326

321:                                              ; preds = %305, %279, %319
  br i1 %254, label %322, label %324

322:                                              ; preds = %321
  %323 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %323, align 8
  br label %416

324:                                              ; preds = %321
  store %"class.std::__1::__tree_end_node"* %280, %"class.std::__1::__tree_end_node"** %2, align 8
  %325 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %280, i64 0, i32 0
  br label %416

326:                                              ; preds = %312, %319
  %327 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.806"**
  %328 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %327, align 8
  %329 = icmp eq %"class.std::__1::__tree_node.806"* %328, null
  br i1 %329, label %411, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.std::__1::__tree.680", %"class.std::__1::__tree.680"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load i16*, i16** %332, align 8
  %334 = bitcast %"class.v8_inspector::String16"* %4 to i16*
  %335 = select i1 %23, i16* %333, i16* %334
  br label %336

336:                                              ; preds = %407, %330
  %337 = phi %"class.std::__1::__tree_node.806"* [ %410, %407 ], [ %328, %330 ]
  %338 = phi %"class.std::__1::__tree_node_base"** [ %409, %407 ], [ %331, %330 ]
  %339 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 1
  %340 = bitcast %"class.v8_inspector::String16"* %339 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %341 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %340, i64 0, i32 1, i32 1
  %342 = load i8, i8* %341, align 1
  %343 = icmp slt i8 %342, 0
  %344 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = zext i8 %342 to i64
  %347 = select i1 %343, i64 %345, i64 %346
  %348 = icmp ult i64 %347, %27
  %349 = select i1 %348, i64 %347, i64 %27
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %370, label %351

351:                                              ; preds = %336
  %352 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load i16*, i16** %352, align 8
  %354 = bitcast %"class.v8_inspector::String16"* %339 to i16*
  %355 = select i1 %343, i16* %353, i16* %354
  br label %356

356:                                              ; preds = %365, %351
  %357 = phi i64 [ %366, %365 ], [ %349, %351 ]
  %358 = phi i16* [ %368, %365 ], [ %355, %351 ]
  %359 = phi i16* [ %367, %365 ], [ %335, %351 ]
  %360 = load i16, i16* %359, align 2
  %361 = load i16, i16* %358, align 2
  %362 = icmp ult i16 %360, %361
  br i1 %362, label %372, label %363

363:                                              ; preds = %356
  %364 = icmp ult i16 %361, %360
  br i1 %364, label %378, label %365

365:                                              ; preds = %363
  %366 = add i64 %357, -1
  %367 = getelementptr inbounds i16, i16* %359, i64 1
  %368 = getelementptr inbounds i16, i16* %358, i64 1
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %356

370:                                              ; preds = %365, %336
  %371 = icmp ult i64 %27, %347
  br i1 %371, label %372, label %378

372:                                              ; preds = %356, %370
  %373 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 0, i32 0, i32 0
  %374 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %373, align 8
  %375 = icmp eq %"class.std::__1::__tree_node_base"* %374, null
  br i1 %375, label %376, label %407

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %377, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

378:                                              ; preds = %363, %370
  br i1 %350, label %398, label %379

379:                                              ; preds = %378
  %380 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %381 = load i16*, i16** %380, align 8
  %382 = bitcast %"class.v8_inspector::String16"* %339 to i16*
  %383 = select i1 %343, i16* %381, i16* %382
  br label %384

384:                                              ; preds = %393, %379
  %385 = phi i64 [ %394, %393 ], [ %349, %379 ]
  %386 = phi i16* [ %396, %393 ], [ %335, %379 ]
  %387 = phi i16* [ %395, %393 ], [ %383, %379 ]
  %388 = load i16, i16* %387, align 2
  %389 = load i16, i16* %386, align 2
  %390 = icmp ult i16 %388, %389
  br i1 %390, label %399, label %391

391:                                              ; preds = %384
  %392 = icmp ult i16 %389, %388
  br i1 %392, label %405, label %393

393:                                              ; preds = %391
  %394 = add i64 %385, -1
  %395 = getelementptr inbounds i16, i16* %387, i64 1
  %396 = getelementptr inbounds i16, i16* %386, i64 1
  %397 = icmp eq i64 %394, 0
  br i1 %397, label %398, label %384

398:                                              ; preds = %393, %378
  br i1 %348, label %399, label %405

399:                                              ; preds = %384, %398
  %400 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 0, i32 1
  %401 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %400, align 8
  %402 = icmp eq %"class.std::__1::__tree_node_base"* %401, null
  br i1 %402, label %403, label %407

403:                                              ; preds = %399
  %404 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %404, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

405:                                              ; preds = %398, %391
  %406 = getelementptr inbounds %"class.std::__1::__tree_node.806", %"class.std::__1::__tree_node.806"* %337, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %406, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %416

407:                                              ; preds = %399, %372
  %408 = phi %"class.std::__1::__tree_node_base"* [ %374, %372 ], [ %401, %399 ]
  %409 = phi %"class.std::__1::__tree_node_base"** [ %373, %372 ], [ %400, %399 ]
  %410 = bitcast %"class.std::__1::__tree_node_base"* %408 to %"class.std::__1::__tree_node.806"*
  br label %336

411:                                              ; preds = %326
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %412 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %416

413:                                              ; preds = %243, %250
  %414 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %414, align 8
  %415 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %415, align 8
  br label %416

416:                                              ; preds = %322, %324, %376, %403, %405, %411, %134, %135, %189, %216, %218, %224, %413
  %417 = phi %"class.std::__1::__tree_node_base"** [ %3, %413 ], [ %131, %134 ], [ %138, %135 ], [ %186, %189 ], [ %213, %216 ], [ %151, %218 ], [ %225, %224 ], [ %252, %322 ], [ %325, %324 ], [ %373, %376 ], [ %400, %403 ], [ %338, %405 ], [ %412, %411 ]
  ret %"class.std::__1::__tree_node_base"** %417
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.689"*, %"class.v8_inspector::String16"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.836"* dereferenceable(8), %"class.std::__1::tuple.818"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.689", %"class.std::__1::__tree.689"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.803"**
  %8 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.803"* %8, null
  br i1 %9, label %99, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.689", %"class.std::__1::__tree.689"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %23 = select i1 %15, i16* %21, i16* %22
  br label %24

24:                                               ; preds = %95, %10
  %25 = phi %"class.std::__1::__tree_node.803"* [ %98, %95 ], [ %8, %10 ]
  %26 = phi %"class.std::__1::__tree_node_base"** [ %97, %95 ], [ %11, %10 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 2
  %28 = bitcast %"struct.std::__1::__value_type.804"* %27 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i64 %33, i64 %34
  %36 = icmp ult i64 %35, %19
  %37 = select i1 %36, i64 %35, i64 %19
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"struct.std::__1::__value_type.804", %"struct.std::__1::__value_type.804"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = bitcast %"struct.std::__1::__value_type.804"* %27 to i16*
  %43 = select i1 %31, i16* %41, i16* %42
  br label %44

44:                                               ; preds = %53, %39
  %45 = phi i64 [ %54, %53 ], [ %37, %39 ]
  %46 = phi i16* [ %56, %53 ], [ %43, %39 ]
  %47 = phi i16* [ %55, %53 ], [ %23, %39 ]
  %48 = load i16, i16* %47, align 2
  %49 = load i16, i16* %46, align 2
  %50 = icmp ult i16 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = icmp ult i16 %49, %48
  br i1 %52, label %66, label %53

53:                                               ; preds = %51
  %54 = add i64 %45, -1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = getelementptr inbounds i16, i16* %46, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %58, label %44

58:                                               ; preds = %53, %24
  %59 = icmp ult i64 %19, %35
  br i1 %59, label %60, label %66

60:                                               ; preds = %44, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %95

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 0, i32 0
  br label %101

66:                                               ; preds = %51, %58
  br i1 %38, label %86, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"struct.std::__1::__value_type.804", %"struct.std::__1::__value_type.804"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"struct.std::__1::__value_type.804"* %27 to i16*
  %71 = select i1 %31, i16* %69, i16* %70
  br label %72

72:                                               ; preds = %81, %67
  %73 = phi i64 [ %82, %81 ], [ %37, %67 ]
  %74 = phi i16* [ %84, %81 ], [ %23, %67 ]
  %75 = phi i16* [ %83, %81 ], [ %71, %67 ]
  %76 = load i16, i16* %75, align 2
  %77 = load i16, i16* %74, align 2
  %78 = icmp ult i16 %76, %77
  br i1 %78, label %87, label %79

79:                                               ; preds = %72
  %80 = icmp ult i16 %77, %76
  br i1 %80, label %93, label %81

81:                                               ; preds = %79
  %82 = add i64 %73, -1
  %83 = getelementptr inbounds i16, i16* %75, i64 1
  %84 = getelementptr inbounds i16, i16* %74, i64 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %86, label %72

86:                                               ; preds = %81, %66
  br i1 %36, label %87, label %93

87:                                               ; preds = %72, %86
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 0, i32 0
  br label %101

93:                                               ; preds = %86, %79
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %25, i64 0, i32 0, i32 0
  br label %101

95:                                               ; preds = %87, %60
  %96 = phi %"class.std::__1::__tree_node_base"* [ %62, %60 ], [ %89, %87 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %88, %87 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"* %96 to %"class.std::__1::__tree_node.803"*
  br label %24

99:                                               ; preds = %5
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %101

101:                                              ; preds = %64, %91, %93, %99
  %102 = phi %"class.std::__1::__tree_end_node"* [ %6, %99 ], [ %65, %64 ], [ %92, %91 ], [ %94, %93 ]
  %103 = phi %"class.std::__1::__tree_node_base"** [ %100, %99 ], [ %61, %64 ], [ %88, %91 ], [ %26, %93 ]
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.803"**
  %105 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node.803"* %105, null
  br i1 %106, label %107, label %325

107:                                              ; preds = %101
  %108 = tail call i8* @_Znwm(i64 72) #12, !noalias !203
  %109 = getelementptr inbounds i8, i8* %108, i64 32
  %110 = getelementptr inbounds %"class.std::__1::tuple.836", %"class.std::__1::tuple.836"* %3, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %110, align 8, !noalias !203
  %112 = bitcast %"class.v8_inspector::String16"* %111 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1, !noalias !203
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %107
  %117 = bitcast %"class.v8_inspector::String16"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %117, i64 24, i1 false) #10, !noalias !203
  br label %297

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8, !noalias !203
  %121 = bitcast i16* %120 to i8*
  %122 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8, !noalias !203
  %124 = icmp ult i64 %123, 11
  br i1 %124, label %125, label %128

125:                                              ; preds = %118
  %126 = trunc i64 %123 to i8
  %127 = getelementptr inbounds i8, i8* %108, i64 55
  store i8 %126, i8* %127, align 1, !noalias !203
  br label %146

128:                                              ; preds = %118
  %129 = icmp ugt i64 %123, 9223372036854775791
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = bitcast i8* %109 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %131) #11, !noalias !203
  unreachable

132:                                              ; preds = %128
  %133 = add nuw nsw i64 %123, 8
  %134 = and i64 %133, -8
  %135 = icmp slt i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  tail call void @abort() #11, !noalias !203
  unreachable

137:                                              ; preds = %132
  %138 = shl i64 %134, 1
  %139 = tail call i8* @_Znwm(i64 %138) #12, !noalias !203
  %140 = bitcast i8* %109 to i8**
  store i8* %139, i8** %140, align 8, !noalias !203
  %141 = or i64 %134, -9223372036854775808
  %142 = getelementptr inbounds i8, i8* %108, i64 48
  %143 = bitcast i8* %142 to i64*
  store i64 %141, i64* %143, align 8, !noalias !203
  %144 = getelementptr inbounds i8, i8* %108, i64 40
  %145 = bitcast i8* %144 to i64*
  store i64 %123, i64* %145, align 8, !noalias !203
  br label %146

146:                                              ; preds = %137, %125
  %147 = phi i8* [ %109, %125 ], [ %139, %137 ]
  %148 = bitcast i8* %147 to i16*
  %149 = add nuw nsw i64 %123, 1
  %150 = add i64 %123, 1
  %151 = icmp ult i64 %150, 16
  br i1 %151, label %244, label %152

152:                                              ; preds = %146
  %153 = shl i64 %123, 1
  %154 = add i64 %153, 2
  %155 = getelementptr i8, i8* %147, i64 %154
  %156 = add i64 %123, 1
  %157 = getelementptr i16, i16* %120, i64 %156
  %158 = bitcast i16* %157 to i8*
  %159 = icmp ult i8* %147, %158
  %160 = icmp ugt i8* %155, %121
  %161 = and i1 %159, %160
  br i1 %161, label %244, label %162

162:                                              ; preds = %152
  %163 = and i64 %150, -16
  %164 = getelementptr i16, i16* %148, i64 %163
  %165 = sub i64 %149, %163
  %166 = getelementptr i16, i16* %120, i64 %163
  %167 = add i64 %163, -16
  %168 = lshr exact i64 %167, 4
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp ult i64 %167, 48
  br i1 %171, label %223, label %172

172:                                              ; preds = %162
  %173 = sub nsw i64 %169, %170
  br label %174

174:                                              ; preds = %174, %172
  %175 = phi i64 [ 0, %172 ], [ %220, %174 ]
  %176 = phi i64 [ %173, %172 ], [ %221, %174 ]
  %177 = getelementptr i16, i16* %148, i64 %175
  %178 = getelementptr i16, i16* %120, i64 %175
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !206, !noalias !203
  %181 = getelementptr i16, i16* %178, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !206, !noalias !203
  %184 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !209, !noalias !211
  %185 = getelementptr i16, i16* %177, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !209, !noalias !211
  %187 = or i64 %175, 16
  %188 = getelementptr i16, i16* %148, i64 %187
  %189 = getelementptr i16, i16* %120, i64 %187
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !206, !noalias !203
  %192 = getelementptr i16, i16* %189, i64 8
  %193 = bitcast i16* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !206, !noalias !203
  %195 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %195, align 2, !alias.scope !209, !noalias !211
  %196 = getelementptr i16, i16* %188, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %197, align 2, !alias.scope !209, !noalias !211
  %198 = or i64 %175, 32
  %199 = getelementptr i16, i16* %148, i64 %198
  %200 = getelementptr i16, i16* %120, i64 %198
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !206, !noalias !203
  %203 = getelementptr i16, i16* %200, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !206, !noalias !203
  %206 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %206, align 2, !alias.scope !209, !noalias !211
  %207 = getelementptr i16, i16* %199, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %208, align 2, !alias.scope !209, !noalias !211
  %209 = or i64 %175, 48
  %210 = getelementptr i16, i16* %148, i64 %209
  %211 = getelementptr i16, i16* %120, i64 %209
  %212 = bitcast i16* %211 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !206, !noalias !203
  %214 = getelementptr i16, i16* %211, i64 8
  %215 = bitcast i16* %214 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !206, !noalias !203
  %217 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %217, align 2, !alias.scope !209, !noalias !211
  %218 = getelementptr i16, i16* %210, i64 8
  %219 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %219, align 2, !alias.scope !209, !noalias !211
  %220 = add i64 %175, 64
  %221 = add i64 %176, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %174, !llvm.loop !212

223:                                              ; preds = %174, %162
  %224 = phi i64 [ 0, %162 ], [ %220, %174 ]
  %225 = icmp eq i64 %170, 0
  br i1 %225, label %242, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %239, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %240, %226 ], [ %170, %223 ]
  %229 = getelementptr i16, i16* %148, i64 %227
  %230 = getelementptr i16, i16* %120, i64 %227
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !206, !noalias !203
  %233 = getelementptr i16, i16* %230, i64 8
  %234 = bitcast i16* %233 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !206, !noalias !203
  %236 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %236, align 2, !alias.scope !209, !noalias !211
  %237 = getelementptr i16, i16* %229, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %238, align 2, !alias.scope !209, !noalias !211
  %239 = add i64 %227, 16
  %240 = add i64 %228, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %226, !llvm.loop !213

242:                                              ; preds = %226, %223
  %243 = icmp eq i64 %150, %163
  br i1 %243, label %297, label %244

244:                                              ; preds = %242, %152, %146
  %245 = phi i16* [ %148, %152 ], [ %148, %146 ], [ %164, %242 ]
  %246 = phi i64 [ %149, %152 ], [ %149, %146 ], [ %165, %242 ]
  %247 = phi i16* [ %120, %152 ], [ %120, %146 ], [ %166, %242 ]
  %248 = add i64 %246, -1
  %249 = and i64 %246, 7
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %262, label %251

251:                                              ; preds = %244, %251
  %252 = phi i16* [ %258, %251 ], [ %245, %244 ]
  %253 = phi i64 [ %257, %251 ], [ %246, %244 ]
  %254 = phi i16* [ %259, %251 ], [ %247, %244 ]
  %255 = phi i64 [ %260, %251 ], [ %249, %244 ]
  %256 = load i16, i16* %254, align 2, !noalias !203
  store i16 %256, i16* %252, align 2, !noalias !203
  %257 = add i64 %253, -1
  %258 = getelementptr inbounds i16, i16* %252, i64 1
  %259 = getelementptr inbounds i16, i16* %254, i64 1
  %260 = add i64 %255, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %251, !llvm.loop !214

262:                                              ; preds = %251, %244
  %263 = phi i16* [ %245, %244 ], [ %258, %251 ]
  %264 = phi i64 [ %246, %244 ], [ %257, %251 ]
  %265 = phi i16* [ %247, %244 ], [ %259, %251 ]
  %266 = icmp ult i64 %248, 7
  br i1 %266, label %297, label %267

267:                                              ; preds = %262, %267
  %268 = phi i16* [ %294, %267 ], [ %263, %262 ]
  %269 = phi i64 [ %293, %267 ], [ %264, %262 ]
  %270 = phi i16* [ %295, %267 ], [ %265, %262 ]
  %271 = load i16, i16* %270, align 2, !noalias !203
  store i16 %271, i16* %268, align 2, !noalias !203
  %272 = getelementptr inbounds i16, i16* %268, i64 1
  %273 = getelementptr inbounds i16, i16* %270, i64 1
  %274 = load i16, i16* %273, align 2, !noalias !203
  store i16 %274, i16* %272, align 2, !noalias !203
  %275 = getelementptr inbounds i16, i16* %268, i64 2
  %276 = getelementptr inbounds i16, i16* %270, i64 2
  %277 = load i16, i16* %276, align 2, !noalias !203
  store i16 %277, i16* %275, align 2, !noalias !203
  %278 = getelementptr inbounds i16, i16* %268, i64 3
  %279 = getelementptr inbounds i16, i16* %270, i64 3
  %280 = load i16, i16* %279, align 2, !noalias !203
  store i16 %280, i16* %278, align 2, !noalias !203
  %281 = getelementptr inbounds i16, i16* %268, i64 4
  %282 = getelementptr inbounds i16, i16* %270, i64 4
  %283 = load i16, i16* %282, align 2, !noalias !203
  store i16 %283, i16* %281, align 2, !noalias !203
  %284 = getelementptr inbounds i16, i16* %268, i64 5
  %285 = getelementptr inbounds i16, i16* %270, i64 5
  %286 = load i16, i16* %285, align 2, !noalias !203
  store i16 %286, i16* %284, align 2, !noalias !203
  %287 = getelementptr inbounds i16, i16* %268, i64 6
  %288 = getelementptr inbounds i16, i16* %270, i64 6
  %289 = load i16, i16* %288, align 2, !noalias !203
  store i16 %289, i16* %287, align 2, !noalias !203
  %290 = getelementptr inbounds i16, i16* %268, i64 7
  %291 = getelementptr inbounds i16, i16* %270, i64 7
  %292 = load i16, i16* %291, align 2, !noalias !203
  store i16 %292, i16* %290, align 2, !noalias !203
  %293 = add i64 %269, -8
  %294 = getelementptr inbounds i16, i16* %268, i64 8
  %295 = getelementptr inbounds i16, i16* %270, i64 8
  %296 = icmp eq i64 %293, 0
  br i1 %296, label %297, label %267, !llvm.loop !215

297:                                              ; preds = %262, %267, %242, %116
  %298 = getelementptr inbounds i8, i8* %108, i64 56
  %299 = bitcast i8* %298 to i64*
  %300 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %111, i64 0, i32 1
  %301 = load i64, i64* %300, align 8, !noalias !203
  store i64 %301, i64* %299, align 8, !noalias !203
  %302 = getelementptr inbounds i8, i8* %108, i64 64
  %303 = bitcast i8* %302 to i32*
  store i32 0, i32* %303, align 8, !noalias !203
  %304 = bitcast i8* %108 to %"class.std::__1::__tree_node.803"*
  %305 = bitcast i8* %108 to %"class.std::__1::__tree_node_base"*
  %306 = getelementptr inbounds i8, i8* %108, i64 16
  %307 = bitcast i8* %306 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %307, align 8
  %308 = bitcast %"class.std::__1::__tree_node_base"** %103 to i8**
  store i8* %108, i8** %308, align 8
  %309 = getelementptr inbounds %"class.std::__1::__tree.689", %"class.std::__1::__tree.689"* %0, i64 0, i32 0
  %310 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %309, align 8
  %311 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %310, i64 0, i32 0
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, null
  br i1 %313, label %318, label %314

314:                                              ; preds = %297
  %315 = ptrtoint %"class.std::__1::__tree_node_base"* %312 to i64
  %316 = bitcast %"class.std::__1::__tree.689"* %0 to i64*
  store i64 %315, i64* %316, align 8
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  br label %318

318:                                              ; preds = %314, %297
  %319 = phi %"class.std::__1::__tree_node_base"* [ %305, %297 ], [ %317, %314 ]
  %320 = getelementptr inbounds %"class.std::__1::__tree.689", %"class.std::__1::__tree.689"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %320, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %321, %"class.std::__1::__tree_node_base"* %319) #10
  %322 = getelementptr inbounds %"class.std::__1::__tree.689", %"class.std::__1::__tree.689"* %0, i64 0, i32 2, i32 0, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = add i64 %323, 1
  store i64 %324, i64* %322, align 8
  br label %325

325:                                              ; preds = %318, %101
  %326 = phi i8 [ 1, %318 ], [ 0, %101 ]
  %327 = phi %"class.std::__1::__tree_node.803"* [ %304, %318 ], [ %105, %101 ]
  %328 = getelementptr inbounds %"class.std::__1::__tree_node.803", %"class.std::__1::__tree_node.803"* %327, i64 0, i32 0, i32 0
  %329 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %328, 0
  %330 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %329, i8 %326, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_4pairINS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.698"*, %"class.v8_inspector::String16"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.836"* dereferenceable(8), %"class.std::__1::tuple.818"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree.698", %"class.std::__1::__tree.698"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node.801"**
  %8 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node.801"* %8, null
  br i1 %9, label %99, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree.698", %"class.std::__1::__tree.698"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.v8_inspector::String16"* %1 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = bitcast %"class.v8_inspector::String16"* %1 to i16*
  %23 = select i1 %15, i16* %21, i16* %22
  br label %24

24:                                               ; preds = %95, %10
  %25 = phi %"class.std::__1::__tree_node.801"* [ %98, %95 ], [ %8, %10 ]
  %26 = phi %"class.std::__1::__tree_node_base"** [ %97, %95 ], [ %11, %10 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 1
  %28 = bitcast %"struct.std::__1::__value_type.802"* %27 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i64 %33, i64 %34
  %36 = icmp ult i64 %35, %19
  %37 = select i1 %36, i64 %35, i64 %19
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"struct.std::__1::__value_type.802", %"struct.std::__1::__value_type.802"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = bitcast %"struct.std::__1::__value_type.802"* %27 to i16*
  %43 = select i1 %31, i16* %41, i16* %42
  br label %44

44:                                               ; preds = %53, %39
  %45 = phi i64 [ %54, %53 ], [ %37, %39 ]
  %46 = phi i16* [ %56, %53 ], [ %43, %39 ]
  %47 = phi i16* [ %55, %53 ], [ %23, %39 ]
  %48 = load i16, i16* %47, align 2
  %49 = load i16, i16* %46, align 2
  %50 = icmp ult i16 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = icmp ult i16 %49, %48
  br i1 %52, label %66, label %53

53:                                               ; preds = %51
  %54 = add i64 %45, -1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = getelementptr inbounds i16, i16* %46, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %58, label %44

58:                                               ; preds = %53, %24
  %59 = icmp ult i64 %19, %35
  br i1 %59, label %60, label %66

60:                                               ; preds = %44, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %95

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 0, i32 0
  br label %101

66:                                               ; preds = %51, %58
  br i1 %38, label %86, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"struct.std::__1::__value_type.802", %"struct.std::__1::__value_type.802"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = bitcast %"struct.std::__1::__value_type.802"* %27 to i16*
  %71 = select i1 %31, i16* %69, i16* %70
  br label %72

72:                                               ; preds = %81, %67
  %73 = phi i64 [ %82, %81 ], [ %37, %67 ]
  %74 = phi i16* [ %84, %81 ], [ %23, %67 ]
  %75 = phi i16* [ %83, %81 ], [ %71, %67 ]
  %76 = load i16, i16* %75, align 2
  %77 = load i16, i16* %74, align 2
  %78 = icmp ult i16 %76, %77
  br i1 %78, label %87, label %79

79:                                               ; preds = %72
  %80 = icmp ult i16 %77, %76
  br i1 %80, label %93, label %81

81:                                               ; preds = %79
  %82 = add i64 %73, -1
  %83 = getelementptr inbounds i16, i16* %75, i64 1
  %84 = getelementptr inbounds i16, i16* %74, i64 1
  %85 = icmp eq i64 %82, 0
  br i1 %85, label %86, label %72

86:                                               ; preds = %81, %66
  br i1 %36, label %87, label %93

87:                                               ; preds = %72, %86
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 0, i32 0
  br label %101

93:                                               ; preds = %86, %79
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %25, i64 0, i32 0, i32 0
  br label %101

95:                                               ; preds = %87, %60
  %96 = phi %"class.std::__1::__tree_node_base"* [ %62, %60 ], [ %89, %87 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %88, %87 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"* %96 to %"class.std::__1::__tree_node.801"*
  br label %24

99:                                               ; preds = %5
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %101

101:                                              ; preds = %64, %91, %93, %99
  %102 = phi %"class.std::__1::__tree_end_node"* [ %6, %99 ], [ %65, %64 ], [ %92, %91 ], [ %94, %93 ]
  %103 = phi %"class.std::__1::__tree_node_base"** [ %100, %99 ], [ %61, %64 ], [ %88, %91 ], [ %26, %93 ]
  %104 = bitcast %"class.std::__1::__tree_node_base"** %103 to %"class.std::__1::__tree_node.801"**
  %105 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node.801"* %105, null
  br i1 %106, label %107, label %325

107:                                              ; preds = %101
  %108 = tail call i8* @_Znwm(i64 72) #12, !noalias !216
  %109 = getelementptr inbounds i8, i8* %108, i64 32
  %110 = getelementptr inbounds %"class.std::__1::tuple.836", %"class.std::__1::tuple.836"* %3, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.v8_inspector::String16"*, %"class.v8_inspector::String16"** %110, align 8, !noalias !216
  %112 = bitcast %"class.v8_inspector::String16"* %111 to %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short", %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1, !noalias !216
  %115 = icmp slt i8 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %107
  %117 = bitcast %"class.v8_inspector::String16"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %117, i64 24, i1 false) #10, !noalias !216
  br label %297

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8, !noalias !216
  %121 = bitcast i16* %120 to i8*
  %122 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8, !noalias !216
  %124 = icmp ult i64 %123, 11
  br i1 %124, label %125, label %128

125:                                              ; preds = %118
  %126 = trunc i64 %123 to i8
  %127 = getelementptr inbounds i8, i8* %108, i64 55
  store i8 %126, i8* %127, align 1, !noalias !216
  br label %146

128:                                              ; preds = %118
  %129 = icmp ugt i64 %123, 9223372036854775791
  br i1 %129, label %130, label %132

130:                                              ; preds = %128
  %131 = bitcast i8* %109 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %131) #11, !noalias !216
  unreachable

132:                                              ; preds = %128
  %133 = add nuw nsw i64 %123, 8
  %134 = and i64 %133, -8
  %135 = icmp slt i64 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  tail call void @abort() #11, !noalias !216
  unreachable

137:                                              ; preds = %132
  %138 = shl i64 %134, 1
  %139 = tail call i8* @_Znwm(i64 %138) #12, !noalias !216
  %140 = bitcast i8* %109 to i8**
  store i8* %139, i8** %140, align 8, !noalias !216
  %141 = or i64 %134, -9223372036854775808
  %142 = getelementptr inbounds i8, i8* %108, i64 48
  %143 = bitcast i8* %142 to i64*
  store i64 %141, i64* %143, align 8, !noalias !216
  %144 = getelementptr inbounds i8, i8* %108, i64 40
  %145 = bitcast i8* %144 to i64*
  store i64 %123, i64* %145, align 8, !noalias !216
  br label %146

146:                                              ; preds = %137, %125
  %147 = phi i8* [ %109, %125 ], [ %139, %137 ]
  %148 = bitcast i8* %147 to i16*
  %149 = add nuw nsw i64 %123, 1
  %150 = add i64 %123, 1
  %151 = icmp ult i64 %150, 16
  br i1 %151, label %244, label %152

152:                                              ; preds = %146
  %153 = shl i64 %123, 1
  %154 = add i64 %153, 2
  %155 = getelementptr i8, i8* %147, i64 %154
  %156 = add i64 %123, 1
  %157 = getelementptr i16, i16* %120, i64 %156
  %158 = bitcast i16* %157 to i8*
  %159 = icmp ult i8* %147, %158
  %160 = icmp ugt i8* %155, %121
  %161 = and i1 %159, %160
  br i1 %161, label %244, label %162

162:                                              ; preds = %152
  %163 = and i64 %150, -16
  %164 = getelementptr i16, i16* %148, i64 %163
  %165 = sub i64 %149, %163
  %166 = getelementptr i16, i16* %120, i64 %163
  %167 = add i64 %163, -16
  %168 = lshr exact i64 %167, 4
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 3
  %171 = icmp ult i64 %167, 48
  br i1 %171, label %223, label %172

172:                                              ; preds = %162
  %173 = sub nsw i64 %169, %170
  br label %174

174:                                              ; preds = %174, %172
  %175 = phi i64 [ 0, %172 ], [ %220, %174 ]
  %176 = phi i64 [ %173, %172 ], [ %221, %174 ]
  %177 = getelementptr i16, i16* %148, i64 %175
  %178 = getelementptr i16, i16* %120, i64 %175
  %179 = bitcast i16* %178 to <8 x i16>*
  %180 = load <8 x i16>, <8 x i16>* %179, align 2, !alias.scope !219, !noalias !216
  %181 = getelementptr i16, i16* %178, i64 8
  %182 = bitcast i16* %181 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !219, !noalias !216
  %184 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %180, <8 x i16>* %184, align 2, !alias.scope !222, !noalias !224
  %185 = getelementptr i16, i16* %177, i64 8
  %186 = bitcast i16* %185 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %186, align 2, !alias.scope !222, !noalias !224
  %187 = or i64 %175, 16
  %188 = getelementptr i16, i16* %148, i64 %187
  %189 = getelementptr i16, i16* %120, i64 %187
  %190 = bitcast i16* %189 to <8 x i16>*
  %191 = load <8 x i16>, <8 x i16>* %190, align 2, !alias.scope !219, !noalias !216
  %192 = getelementptr i16, i16* %189, i64 8
  %193 = bitcast i16* %192 to <8 x i16>*
  %194 = load <8 x i16>, <8 x i16>* %193, align 2, !alias.scope !219, !noalias !216
  %195 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %191, <8 x i16>* %195, align 2, !alias.scope !222, !noalias !224
  %196 = getelementptr i16, i16* %188, i64 8
  %197 = bitcast i16* %196 to <8 x i16>*
  store <8 x i16> %194, <8 x i16>* %197, align 2, !alias.scope !222, !noalias !224
  %198 = or i64 %175, 32
  %199 = getelementptr i16, i16* %148, i64 %198
  %200 = getelementptr i16, i16* %120, i64 %198
  %201 = bitcast i16* %200 to <8 x i16>*
  %202 = load <8 x i16>, <8 x i16>* %201, align 2, !alias.scope !219, !noalias !216
  %203 = getelementptr i16, i16* %200, i64 8
  %204 = bitcast i16* %203 to <8 x i16>*
  %205 = load <8 x i16>, <8 x i16>* %204, align 2, !alias.scope !219, !noalias !216
  %206 = bitcast i16* %199 to <8 x i16>*
  store <8 x i16> %202, <8 x i16>* %206, align 2, !alias.scope !222, !noalias !224
  %207 = getelementptr i16, i16* %199, i64 8
  %208 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %205, <8 x i16>* %208, align 2, !alias.scope !222, !noalias !224
  %209 = or i64 %175, 48
  %210 = getelementptr i16, i16* %148, i64 %209
  %211 = getelementptr i16, i16* %120, i64 %209
  %212 = bitcast i16* %211 to <8 x i16>*
  %213 = load <8 x i16>, <8 x i16>* %212, align 2, !alias.scope !219, !noalias !216
  %214 = getelementptr i16, i16* %211, i64 8
  %215 = bitcast i16* %214 to <8 x i16>*
  %216 = load <8 x i16>, <8 x i16>* %215, align 2, !alias.scope !219, !noalias !216
  %217 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %213, <8 x i16>* %217, align 2, !alias.scope !222, !noalias !224
  %218 = getelementptr i16, i16* %210, i64 8
  %219 = bitcast i16* %218 to <8 x i16>*
  store <8 x i16> %216, <8 x i16>* %219, align 2, !alias.scope !222, !noalias !224
  %220 = add i64 %175, 64
  %221 = add i64 %176, -4
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %174, !llvm.loop !225

223:                                              ; preds = %174, %162
  %224 = phi i64 [ 0, %162 ], [ %220, %174 ]
  %225 = icmp eq i64 %170, 0
  br i1 %225, label %242, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %239, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %240, %226 ], [ %170, %223 ]
  %229 = getelementptr i16, i16* %148, i64 %227
  %230 = getelementptr i16, i16* %120, i64 %227
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !219, !noalias !216
  %233 = getelementptr i16, i16* %230, i64 8
  %234 = bitcast i16* %233 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !219, !noalias !216
  %236 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %236, align 2, !alias.scope !222, !noalias !224
  %237 = getelementptr i16, i16* %229, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %238, align 2, !alias.scope !222, !noalias !224
  %239 = add i64 %227, 16
  %240 = add i64 %228, -1
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %226, !llvm.loop !226

242:                                              ; preds = %226, %223
  %243 = icmp eq i64 %150, %163
  br i1 %243, label %297, label %244

244:                                              ; preds = %242, %152, %146
  %245 = phi i16* [ %148, %152 ], [ %148, %146 ], [ %164, %242 ]
  %246 = phi i64 [ %149, %152 ], [ %149, %146 ], [ %165, %242 ]
  %247 = phi i16* [ %120, %152 ], [ %120, %146 ], [ %166, %242 ]
  %248 = add i64 %246, -1
  %249 = and i64 %246, 7
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %262, label %251

251:                                              ; preds = %244, %251
  %252 = phi i16* [ %258, %251 ], [ %245, %244 ]
  %253 = phi i64 [ %257, %251 ], [ %246, %244 ]
  %254 = phi i16* [ %259, %251 ], [ %247, %244 ]
  %255 = phi i64 [ %260, %251 ], [ %249, %244 ]
  %256 = load i16, i16* %254, align 2, !noalias !216
  store i16 %256, i16* %252, align 2, !noalias !216
  %257 = add i64 %253, -1
  %258 = getelementptr inbounds i16, i16* %252, i64 1
  %259 = getelementptr inbounds i16, i16* %254, i64 1
  %260 = add i64 %255, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %251, !llvm.loop !227

262:                                              ; preds = %251, %244
  %263 = phi i16* [ %245, %244 ], [ %258, %251 ]
  %264 = phi i64 [ %246, %244 ], [ %257, %251 ]
  %265 = phi i16* [ %247, %244 ], [ %259, %251 ]
  %266 = icmp ult i64 %248, 7
  br i1 %266, label %297, label %267

267:                                              ; preds = %262, %267
  %268 = phi i16* [ %294, %267 ], [ %263, %262 ]
  %269 = phi i64 [ %293, %267 ], [ %264, %262 ]
  %270 = phi i16* [ %295, %267 ], [ %265, %262 ]
  %271 = load i16, i16* %270, align 2, !noalias !216
  store i16 %271, i16* %268, align 2, !noalias !216
  %272 = getelementptr inbounds i16, i16* %268, i64 1
  %273 = getelementptr inbounds i16, i16* %270, i64 1
  %274 = load i16, i16* %273, align 2, !noalias !216
  store i16 %274, i16* %272, align 2, !noalias !216
  %275 = getelementptr inbounds i16, i16* %268, i64 2
  %276 = getelementptr inbounds i16, i16* %270, i64 2
  %277 = load i16, i16* %276, align 2, !noalias !216
  store i16 %277, i16* %275, align 2, !noalias !216
  %278 = getelementptr inbounds i16, i16* %268, i64 3
  %279 = getelementptr inbounds i16, i16* %270, i64 3
  %280 = load i16, i16* %279, align 2, !noalias !216
  store i16 %280, i16* %278, align 2, !noalias !216
  %281 = getelementptr inbounds i16, i16* %268, i64 4
  %282 = getelementptr inbounds i16, i16* %270, i64 4
  %283 = load i16, i16* %282, align 2, !noalias !216
  store i16 %283, i16* %281, align 2, !noalias !216
  %284 = getelementptr inbounds i16, i16* %268, i64 5
  %285 = getelementptr inbounds i16, i16* %270, i64 5
  %286 = load i16, i16* %285, align 2, !noalias !216
  store i16 %286, i16* %284, align 2, !noalias !216
  %287 = getelementptr inbounds i16, i16* %268, i64 6
  %288 = getelementptr inbounds i16, i16* %270, i64 6
  %289 = load i16, i16* %288, align 2, !noalias !216
  store i16 %289, i16* %287, align 2, !noalias !216
  %290 = getelementptr inbounds i16, i16* %268, i64 7
  %291 = getelementptr inbounds i16, i16* %270, i64 7
  %292 = load i16, i16* %291, align 2, !noalias !216
  store i16 %292, i16* %290, align 2, !noalias !216
  %293 = add i64 %269, -8
  %294 = getelementptr inbounds i16, i16* %268, i64 8
  %295 = getelementptr inbounds i16, i16* %270, i64 8
  %296 = icmp eq i64 %293, 0
  br i1 %296, label %297, label %267, !llvm.loop !228

297:                                              ; preds = %262, %267, %242, %116
  %298 = getelementptr inbounds i8, i8* %108, i64 56
  %299 = bitcast i8* %298 to i64*
  %300 = getelementptr inbounds %"class.v8_inspector::String16", %"class.v8_inspector::String16"* %111, i64 0, i32 1
  %301 = load i64, i64* %300, align 8, !noalias !216
  store i64 %301, i64* %299, align 8, !noalias !216
  %302 = getelementptr inbounds i8, i8* %108, i64 64
  %303 = bitcast i8* %302 to double*
  store double 0.000000e+00, double* %303, align 8, !noalias !216
  %304 = bitcast i8* %108 to %"class.std::__1::__tree_node.801"*
  %305 = bitcast i8* %108 to %"class.std::__1::__tree_node_base"*
  %306 = getelementptr inbounds i8, i8* %108, i64 16
  %307 = bitcast i8* %306 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"** %307, align 8
  %308 = bitcast %"class.std::__1::__tree_node_base"** %103 to i8**
  store i8* %108, i8** %308, align 8
  %309 = getelementptr inbounds %"class.std::__1::__tree.698", %"class.std::__1::__tree.698"* %0, i64 0, i32 0
  %310 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %309, align 8
  %311 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %310, i64 0, i32 0
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node_base"* %312, null
  br i1 %313, label %318, label %314

314:                                              ; preds = %297
  %315 = ptrtoint %"class.std::__1::__tree_node_base"* %312 to i64
  %316 = bitcast %"class.std::__1::__tree.698"* %0 to i64*
  store i64 %315, i64* %316, align 8
  %317 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  br label %318

318:                                              ; preds = %314, %297
  %319 = phi %"class.std::__1::__tree_node_base"* [ %305, %297 ], [ %317, %314 ]
  %320 = getelementptr inbounds %"class.std::__1::__tree.698", %"class.std::__1::__tree.698"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %320, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %321, %"class.std::__1::__tree_node_base"* %319) #10
  %322 = getelementptr inbounds %"class.std::__1::__tree.698", %"class.std::__1::__tree.698"* %0, i64 0, i32 2, i32 0, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = add i64 %323, 1
  store i64 %324, i64* %322, align 8
  br label %325

325:                                              ; preds = %318, %101
  %326 = phi i8 [ 1, %318 ], [ 0, %101 ]
  %327 = phi %"class.std::__1::__tree_node.801"* [ %304, %318 ], [ %105, %101 ]
  %328 = getelementptr inbounds %"class.std::__1::__tree_node.801", %"class.std::__1::__tree_node.801"* %327, i64 0, i32 0, i32 0
  %329 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %328, 0
  %330 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %329, i8 %326, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !43
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !43
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !43
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !43
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !43
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !43
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !43
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !43
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !43
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !43
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !43
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !43
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !43
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE5eraseENS_21__tree_const_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEE(%"class.std::__1::__tree.669"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.669", %"class.std::__1::__tree.669"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.669"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.669", %"class.std::__1::__tree.669"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.669", %"class.std::__1::__tree.669"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #10
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 11
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree.698"*
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 12
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.801"**
  %49 = load %"class.std::__1::__tree_node.801"*, %"class.std::__1::__tree_node.801"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.698"* %46, %"class.std::__1::__tree_node.801"* %49) #10
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 8
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree.689"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 9
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_node.803"**
  %54 = load %"class.std::__1::__tree_node.803"*, %"class.std::__1::__tree_node.803"** %53, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.689"* %51, %"class.std::__1::__tree_node.803"* %54) #10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree.680"*
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 6
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_node.806"**
  %59 = load %"class.std::__1::__tree_node.806"*, %"class.std::__1::__tree_node.806"** %58, align 8
  tail call void @_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.680"* %56, %"class.std::__1::__tree_node.806"* %59) #10
  %60 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %60) #12
  ret %"class.std::__1::__tree_end_node"* %31
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNKSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE6substrEmm: argument 0"}
!15 = distinct !{!15, !"_ZNKSt3__112basic_stringItNS_11char_traitsItEENS_9allocatorItEEE6substrEmm"}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !10}
!23 = distinct !{!23, !10}
!24 = distinct !{!24, !8}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !8}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !10}
!33 = distinct !{!33, !8}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !8}
!40 = distinct !{!40, !10}
!41 = distinct !{!41, !10}
!42 = distinct !{!42, !8}
!43 = !{i8 0, i8 2}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !8}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !8}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !8}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !8}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !10}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !8}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !8}
!77 = distinct !{!77, !10}
!78 = distinct !{!78, !10}
!79 = distinct !{!79, !8}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder8toStringEN2v85LocalINS2_5ValueEEENS3_INS2_7ContextEEE: argument 0"}
!82 = distinct !{!82, !"_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder8toStringEN2v85LocalINS2_5ValueEEENS3_INS2_7ContextEEE"}
!83 = !{!84, !81}
!84 = distinct !{!84, !85, !"_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder8toStringEv: argument 0"}
!85 = distinct !{!85, !"_ZN12v8_inspector12_GLOBAL__N_120V8ValueStringBuilder8toStringEv"}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !8}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !10}
!94 = distinct !{!94, !8}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !8}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !10}
!103 = distinct !{!103, !8}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !8}
!110 = distinct !{!110, !10}
!111 = distinct !{!111, !10}
!112 = distinct !{!112, !8}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__16__treeINS_12__value_typeIiN12v8_inspector23V8ConsoleMessageStorage14PerContextDataEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !8}
!140 = distinct !{!140, !10}
!141 = distinct !{!141, !10}
!142 = distinct !{!142, !8}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !8}
!149 = distinct !{!149, !10}
!150 = distinct !{!150, !10}
!151 = distinct !{!151, !8}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !8}
!158 = distinct !{!158, !10}
!159 = distinct !{!159, !10}
!160 = distinct !{!160, !8}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165}
!165 = distinct !{!165, !163}
!166 = distinct !{!166, !8}
!167 = distinct !{!167, !10}
!168 = distinct !{!168, !10}
!169 = distinct !{!169, !8}
!170 = distinct !{!170, !8}
!171 = distinct !{!171, !10}
!172 = distinct !{!172, !173, !8}
!173 = !{!"llvm.loop.unroll.runtime.disable"}
!174 = !{!175}
!175 = distinct !{!175, !176}
!176 = distinct !{!176, !"LVerDomain"}
!177 = !{!178}
!178 = distinct !{!178, !176}
!179 = distinct !{!179, !8}
!180 = distinct !{!180, !10}
!181 = distinct !{!181, !10}
!182 = distinct !{!182, !8}
!183 = distinct !{!183, !10}
!184 = distinct !{!184, !10}
!185 = distinct !{!185, !10}
!186 = distinct !{!186, !10}
!187 = distinct !{!187, !10}
!188 = distinct !{!188, !10}
!189 = distinct !{!189, !10}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!192 = distinct !{!192, !"_ZNSt3__16__treeIN12v8_inspector8String16ENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!193 = !{!194}
!194 = distinct !{!194, !195}
!195 = distinct !{!195, !"LVerDomain"}
!196 = !{!197}
!197 = distinct !{!197, !195}
!198 = !{!191, !194}
!199 = distinct !{!199, !8}
!200 = distinct !{!200, !10}
!201 = distinct !{!201, !10}
!202 = distinct !{!202, !8}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!205 = distinct !{!205, !"_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!206 = !{!207}
!207 = distinct !{!207, !208}
!208 = distinct !{!208, !"LVerDomain"}
!209 = !{!210}
!210 = distinct !{!210, !208}
!211 = !{!204, !207}
!212 = distinct !{!212, !8}
!213 = distinct !{!213, !10}
!214 = distinct !{!214, !10}
!215 = distinct !{!215, !8}
!216 = !{!217}
!217 = distinct !{!217, !218, !"_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!218 = distinct !{!218, !"_ZNSt3__16__treeINS_12__value_typeIN12v8_inspector8String16EdEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
!219 = !{!220}
!220 = distinct !{!220, !221}
!221 = distinct !{!221, !"LVerDomain"}
!222 = !{!223}
!223 = distinct !{!223, !221}
!224 = !{!217, !220}
!225 = distinct !{!225, !8}
!226 = distinct !{!226, !10}
!227 = distinct !{!227, !10}
!228 = distinct !{!228, !8}
