; ModuleID = '../../third_party/icu/source/i18n/collationdata.cpp'
source_filename = "../../third_party/icu/source/i18n/collationdata.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.icu_69::CollationData" = type <{ %struct.UTrie2*, i32*, i64*, i16*, %"struct.icu_69::CollationData"*, i32*, %"class.icu_69::Normalizer2Impl"*, i32, i32, i32, i32, i8*, %"class.icu_69::UnicodeSet"*, i16*, i32, i32, i16*, i16*, i32, [4 x i8], i32*, i32, [4 x i8] }>
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData15getIndirectCE32Ej(%"struct.icu_69::CollationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, 15
  switch i32 %3, label %15 [
    i32 10, label %4
    i32 13, label %16
    i32 11, label %11
  ]

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = lshr i32 %1, 13
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i32, i32* %6, i64 %8
  %10 = load i32, i32* %9, align 4
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = load i32, i32* %13, align 4
  br label %16

15:                                               ; preds = %2
  br label %16

16:                                               ; preds = %2, %15, %11, %4
  %17 = phi i32 [ %10, %4 ], [ %14, %11 ], [ -1, %2 ], [ %1, %15 ]
  ret i32 %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData12getFinalCE32Ej(%"struct.icu_69::CollationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, 192
  %4 = icmp eq i32 %3, 192
  br i1 %4, label %5, label %19

5:                                                ; preds = %2
  %6 = and i32 %1, 15
  switch i32 %6, label %18 [
    i32 10, label %7
    i32 13, label %19
    i32 11, label %14
  ]

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 1
  %9 = load i32*, i32** %8, align 8
  %10 = lshr i32 %1, 13
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %9, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %19

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 1
  %16 = load i32*, i32** %15, align 8
  %17 = load i32, i32* %16, align 4
  br label %19

18:                                               ; preds = %5
  br label %19

19:                                               ; preds = %2, %18, %14, %7, %5
  %20 = phi i32 [ %1, %2 ], [ %13, %7 ], [ %17, %14 ], [ -1, %5 ], [ %1, %18 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6icu_6913CollationData11getSingleCEEiR10UErrorCode(%"struct.icu_69::CollationData"* nocapture readonly, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %222

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 0
  %8 = load %struct.UTrie2*, %struct.UTrie2** %7, align 8
  %9 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %8, i64 0, i32 2
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32 %1, 55296
  br i1 %11, label %12, label %23

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %8, i64 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = lshr i32 %1, 5
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i16, i16* %14, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = shl nuw nsw i32 %19, 2
  %21 = and i32 %1, 31
  %22 = add nuw nsw i32 %20, %21
  br label %67

23:                                               ; preds = %6
  %24 = icmp ult i32 %1, 65536
  br i1 %24, label %25, label %39

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %8, i64 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = icmp slt i32 %1, 56320
  %29 = select i1 %28, i32 320, i32 0
  %30 = lshr i32 %1, 5
  %31 = add nuw nsw i32 %29, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %27, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = shl nuw nsw i32 %35, 2
  %37 = and i32 %1, 31
  %38 = add nuw nsw i32 %36, %37
  br label %67

39:                                               ; preds = %23
  %40 = icmp ugt i32 %1, 1114111
  br i1 %40, label %67, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %8, i64 0, i32 9
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, %1
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %8, i64 0, i32 10
  %47 = load i32, i32* %46, align 8
  br label %67

48:                                               ; preds = %41
  %49 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %8, i64 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = lshr i32 %1, 11
  %52 = add nuw nsw i32 %51, 2080
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i16, i16* %50, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = lshr i32 %1, 5
  %58 = and i32 %57, 63
  %59 = add nuw nsw i32 %58, %56
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %50, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = shl nuw nsw i32 %63, 2
  %65 = and i32 %1, 31
  %66 = add nuw nsw i32 %64, %65
  br label %67

67:                                               ; preds = %12, %25, %39, %45, %48
  %68 = phi i32 [ %22, %12 ], [ %38, %25 ], [ 128, %39 ], [ %47, %45 ], [ %66, %48 ]
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %10, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 192
  br i1 %72, label %73, label %140

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 4
  %75 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %74, align 8
  %76 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %75, i64 0, i32 0
  %77 = load %struct.UTrie2*, %struct.UTrie2** %76, align 8
  %78 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %77, i64 0, i32 2
  %79 = load i32*, i32** %78, align 8
  br i1 %11, label %80, label %91

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %77, i64 0, i32 0
  %82 = load i16*, i16** %81, align 8
  %83 = lshr i32 %1, 5
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %82, i64 %84
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = shl nuw nsw i32 %87, 2
  %89 = and i32 %1, 31
  %90 = add nuw nsw i32 %88, %89
  br label %135

91:                                               ; preds = %73
  %92 = icmp ult i32 %1, 65536
  br i1 %92, label %93, label %107

93:                                               ; preds = %91
  %94 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %77, i64 0, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = icmp slt i32 %1, 56320
  %97 = select i1 %96, i32 320, i32 0
  %98 = lshr i32 %1, 5
  %99 = add nuw nsw i32 %97, %98
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds i16, i16* %95, i64 %100
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = shl nuw nsw i32 %103, 2
  %105 = and i32 %1, 31
  %106 = add nuw nsw i32 %104, %105
  br label %135

107:                                              ; preds = %91
  %108 = icmp ugt i32 %1, 1114111
  br i1 %108, label %135, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %77, i64 0, i32 9
  %111 = load i32, i32* %110, align 4
  %112 = icmp sgt i32 %111, %1
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %77, i64 0, i32 10
  %115 = load i32, i32* %114, align 8
  br label %135

116:                                              ; preds = %109
  %117 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %77, i64 0, i32 0
  %118 = load i16*, i16** %117, align 8
  %119 = lshr i32 %1, 11
  %120 = add nuw nsw i32 %119, 2080
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i16, i16* %118, i64 %121
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = lshr i32 %1, 5
  %126 = and i32 %125, 63
  %127 = add nuw nsw i32 %126, %124
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i16, i16* %118, i64 %128
  %130 = load i16, i16* %129, align 2
  %131 = zext i16 %130 to i32
  %132 = shl nuw nsw i32 %131, 2
  %133 = and i32 %1, 31
  %134 = add nuw nsw i32 %132, %133
  br label %135

135:                                              ; preds = %80, %93, %107, %113, %116
  %136 = phi i32 [ %90, %80 ], [ %106, %93 ], [ 128, %107 ], [ %115, %113 ], [ %134, %116 ]
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %79, i64 %137
  %139 = load i32, i32* %138, align 4
  br label %140

140:                                              ; preds = %67, %135
  %141 = phi %"struct.icu_69::CollationData"* [ %75, %135 ], [ %0, %67 ]
  %142 = phi i32 [ %139, %135 ], [ %71, %67 ]
  %143 = and i32 %142, 192
  %144 = icmp eq i32 %143, 192
  br i1 %144, label %145, label %209

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %141, i64 0, i32 1
  br label %147

147:                                              ; preds = %145, %204
  %148 = phi i32 [ %142, %145 ], [ %206, %204 ]
  %149 = and i32 %148, 15
  switch i32 %149, label %203 [
    i32 4, label %150
    i32 7, label %150
    i32 8, label %150
    i32 9, label %150
    i32 12, label %150
    i32 13, label %150
    i32 0, label %151
    i32 3, label %151
    i32 1, label %152
    i32 2, label %157
    i32 5, label %160
    i32 6, label %169
    i32 10, label %180
    i32 11, label %185
    i32 14, label %187
    i32 15, label %198
  ]

150:                                              ; preds = %147, %147, %147, %147, %147, %147
  store i32 16, i32* %2, align 4
  br label %222

151:                                              ; preds = %147, %147
  store i32 5, i32* %2, align 4
  br label %222

152:                                              ; preds = %147
  %153 = and i32 %148, -256
  %154 = zext i32 %153 to i64
  %155 = shl nuw i64 %154, 32
  %156 = or i64 %155, 83887360
  br label %222

157:                                              ; preds = %147
  %158 = and i32 %148, -256
  %159 = zext i32 %158 to i64
  br label %222

160:                                              ; preds = %147
  %161 = and i32 %148, 7936
  %162 = icmp eq i32 %161, 256
  br i1 %162, label %163, label %168

163:                                              ; preds = %160
  %164 = load i32*, i32** %146, align 8
  %165 = lshr i32 %148, 13
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %164, i64 %166
  br label %204

168:                                              ; preds = %160
  store i32 16, i32* %2, align 4
  br label %222

169:                                              ; preds = %147
  %170 = and i32 %148, 7936
  %171 = icmp eq i32 %170, 256
  br i1 %171, label %172, label %179

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %141, i64 0, i32 2
  %174 = load i64*, i64** %173, align 8
  %175 = lshr i32 %148, 13
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds i64, i64* %174, i64 %176
  %178 = load i64, i64* %177, align 8
  br label %222

179:                                              ; preds = %169
  store i32 16, i32* %2, align 4
  br label %222

180:                                              ; preds = %147
  %181 = load i32*, i32** %146, align 8
  %182 = lshr i32 %148, 13
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds i32, i32* %181, i64 %183
  br label %204

185:                                              ; preds = %147
  %186 = load i32*, i32** %146, align 8
  br label %204

187:                                              ; preds = %147
  %188 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %141, i64 0, i32 2
  %189 = load i64*, i64** %188, align 8
  %190 = lshr i32 %148, 13
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i64, i64* %189, i64 %191
  %193 = load i64, i64* %192, align 8
  %194 = tail call i32 @_ZN6icu_699Collation32getThreeBytePrimaryForOffsetDataEil(i32 %1, i64 %193) #5
  %195 = zext i32 %194 to i64
  %196 = shl nuw i64 %195, 32
  %197 = or i64 %196, 83887360
  br label %222

198:                                              ; preds = %147
  %199 = tail call i32 @_ZN6icu_699Collation30unassignedPrimaryFromCodePointEi(i32 %1) #5
  %200 = zext i32 %199 to i64
  %201 = shl nuw i64 %200, 32
  %202 = or i64 %201, 83887360
  br label %222

203:                                              ; preds = %147
  unreachable

204:                                              ; preds = %185, %180, %163
  %205 = phi i32* [ %186, %185 ], [ %184, %180 ], [ %167, %163 ]
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, 192
  %208 = icmp eq i32 %207, 192
  br i1 %208, label %147, label %209

209:                                              ; preds = %204, %140
  %210 = phi i32 [ %142, %140 ], [ %206, %204 ]
  %211 = and i32 %210, -65536
  %212 = zext i32 %211 to i64
  %213 = shl nuw i64 %212, 32
  %214 = shl i32 %210, 16
  %215 = and i32 %214, -16777216
  %216 = zext i32 %215 to i64
  %217 = or i64 %213, %216
  %218 = shl i32 %210, 8
  %219 = and i32 %218, 65280
  %220 = zext i32 %219 to i64
  %221 = or i64 %217, %220
  br label %222

222:                                              ; preds = %150, %151, %152, %157, %168, %172, %179, %187, %198, %209, %3
  %223 = phi i64 [ 0, %3 ], [ %202, %198 ], [ %197, %187 ], [ %178, %172 ], [ 0, %179 ], [ 0, %168 ], [ %159, %157 ], [ %156, %152 ], [ 0, %151 ], [ 0, %150 ], [ %221, %209 ]
  ret i64 %223
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData23getFirstPrimaryForGroupEi(%"struct.icu_69::CollationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %31, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp slt i32 %1, 4096
  br i1 %9, label %31, label %10

10:                                               ; preds = %8
  %11 = add nsw i32 %1, -4096
  %12 = icmp slt i32 %11, 8
  br i1 %12, label %13, label %31

13:                                               ; preds = %10
  %14 = add nsw i32 %6, %11
  br label %15

15:                                               ; preds = %4, %13
  %16 = phi i32 [ %14, %13 ], [ %1, %4 ]
  %17 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %18 = load i16*, i16** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i16, i16* %18, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 17
  %25 = load i16*, i16** %24, align 8
  %26 = zext i16 %21 to i64
  %27 = getelementptr inbounds i16, i16* %25, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = shl nuw i32 %29, 16
  br label %31

31:                                               ; preds = %10, %8, %2, %15, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %15 ], [ 0, %2 ], [ 0, %8 ], [ 0, %10 ]
  ret i32 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData14getScriptIndexEi(%"struct.icu_69::CollationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %10 = load i16*, i16** %9, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds i16, i16* %10, i64 %11
  %13 = load i16, i16* %12, align 2
  br label %26

14:                                               ; preds = %4
  %15 = icmp slt i32 %1, 4096
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = add nsw i32 %1, -4096
  %18 = icmp slt i32 %17, 8
  br i1 %18, label %19, label %26

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %21 = load i16*, i16** %20, align 8
  %22 = add nsw i32 %6, %17
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i16, i16* %21, i64 %23
  %25 = load i16, i16* %24, align 2
  br label %26

26:                                               ; preds = %16, %14, %2, %19, %8
  %27 = phi i16 [ %13, %8 ], [ %25, %19 ], [ 0, %2 ], [ 0, %14 ], [ 0, %16 ]
  %28 = zext i16 %27 to i32
  ret i32 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData22getLastPrimaryForGroupEi(%"struct.icu_69::CollationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 15
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp slt i32 %1, 4096
  br i1 %9, label %33, label %10

10:                                               ; preds = %8
  %11 = add nsw i32 %1, -4096
  %12 = icmp slt i32 %11, 8
  br i1 %12, label %13, label %33

13:                                               ; preds = %10
  %14 = add nsw i32 %6, %11
  br label %15

15:                                               ; preds = %4, %13
  %16 = phi i32 [ %14, %13 ], [ %1, %4 ]
  %17 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %18 = load i16*, i16** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i16, i16* %18, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %15
  %24 = zext i16 %21 to i64
  %25 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 17
  %26 = load i16*, i16** %25, align 8
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i16, i16* %26, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = shl nuw i32 %30, 16
  %32 = add i32 %31, -1
  br label %33

33:                                               ; preds = %10, %8, %2, %15, %23
  %34 = phi i32 [ %32, %23 ], [ 0, %15 ], [ 0, %2 ], [ 0, %8 ], [ 0, %10 ]
  ret i32 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData18getGroupForPrimaryEj(%"struct.icu_69::CollationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = lshr i32 %1, 16
  %4 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 17
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds i16, i16* %5, i64 1
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = icmp ult i32 %3, %8
  br i1 %9, label %59, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 18
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, -1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %5, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = icmp ult i32 %3, %17
  br i1 %18, label %19, label %59

19:                                               ; preds = %10, %19
  %20 = phi i64 [ %21, %19 ], [ 1, %10 ]
  %21 = add nuw i64 %20, 1
  %22 = getelementptr inbounds i16, i16* %5, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = icmp ult i32 %3, %24
  br i1 %25, label %26, label %19

26:                                               ; preds = %19
  %27 = trunc i64 %20 to i32
  %28 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 15
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 0
  %31 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %32 = load i16*, i16** %31, align 8
  %33 = sext i32 %29 to i64
  br i1 %30, label %42, label %36

34:                                               ; preds = %48
  %35 = sext i32 %29 to i64
  br label %36

36:                                               ; preds = %26, %34
  %37 = phi i64 [ %35, %34 ], [ %33, %26 ]
  %38 = getelementptr inbounds i16, i16* %32, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %27, %40
  br i1 %41, label %59, label %51

42:                                               ; preds = %26, %48
  %43 = phi i64 [ %49, %48 ], [ 0, %26 ]
  %44 = getelementptr inbounds i16, i16* %32, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = icmp eq i32 %27, %46
  br i1 %47, label %57, label %48

48:                                               ; preds = %42
  %49 = add nuw nsw i64 %43, 1
  %50 = icmp slt i64 %49, %33
  br i1 %50, label %42, label %34

51:                                               ; preds = %36
  %52 = add nsw i64 %37, 1
  %53 = getelementptr inbounds i16, i16* %32, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = icmp eq i32 %27, %55
  br i1 %56, label %59, label %61

57:                                               ; preds = %42
  %58 = trunc i64 %43 to i32
  br label %59

59:                                               ; preds = %36, %51, %61, %67, %73, %79, %85, %57, %10, %2
  %60 = phi i32 [ -1, %10 ], [ -1, %2 ], [ %58, %57 ], [ 4096, %36 ], [ 4097, %51 ], [ 4098, %61 ], [ 4099, %67 ], [ 4100, %73 ], [ 4101, %79 ], [ 4102, %85 ]
  ret i32 %60

61:                                               ; preds = %51
  %62 = add nsw i64 %37, 2
  %63 = getelementptr inbounds i16, i16* %32, i64 %62
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp eq i32 %27, %65
  br i1 %66, label %59, label %67

67:                                               ; preds = %61
  %68 = add nsw i64 %37, 3
  %69 = getelementptr inbounds i16, i16* %32, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = zext i16 %70 to i32
  %72 = icmp eq i32 %27, %71
  br i1 %72, label %59, label %73

73:                                               ; preds = %67
  %74 = add nsw i64 %37, 4
  %75 = getelementptr inbounds i16, i16* %32, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %27, %77
  br i1 %78, label %59, label %79

79:                                               ; preds = %73
  %80 = add nsw i64 %37, 5
  %81 = getelementptr inbounds i16, i16* %32, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = icmp eq i32 %27, %83
  br i1 %84, label %59, label %85

85:                                               ; preds = %79
  %86 = add nsw i64 %37, 6
  %87 = getelementptr inbounds i16, i16* %32, i64 %86
  %88 = load i16, i16* %87, align 2
  %89 = zext i16 %88 to i32
  %90 = icmp eq i32 %27, %89
  br i1 %90, label %59, label %91

91:                                               ; preds = %85
  %92 = add nsw i64 %37, 7
  %93 = getelementptr inbounds i16, i16* %32, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = icmp eq i32 %27, %95
  %97 = select i1 %96, i32 4103, i32 -1
  ret i32 %97
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData20getEquivalentScriptsEiPiiR10UErrorCode(%"struct.icu_69::CollationData"* nocapture readonly, i32, i32* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp sgt i32 %6, 0
  %8 = icmp slt i32 %1, 0
  %9 = or i1 %8, %7
  br i1 %9, label %71, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 15
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = icmp slt i32 %1, 4096
  br i1 %15, label %71, label %16

16:                                               ; preds = %14
  %17 = add nsw i32 %1, -4096
  %18 = icmp slt i32 %17, 8
  br i1 %18, label %19, label %71

19:                                               ; preds = %16
  %20 = add nsw i32 %12, %17
  br label %21

21:                                               ; preds = %10, %19
  %22 = phi i32 [ %20, %19 ], [ %1, %10 ]
  %23 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %24 = load i16*, i16** %23, align 8
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %71, label %29

29:                                               ; preds = %21
  %30 = icmp sgt i32 %1, 4095
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = icmp sgt i32 %12, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  br label %42

35:                                               ; preds = %29
  %36 = icmp sgt i32 %3, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  store i32 %1, i32* %2, align 4
  br label %71

38:                                               ; preds = %35
  store i32 15, i32* %4, align 4
  br label %71

39:                                               ; preds = %61, %31
  %40 = phi i32 [ 0, %31 ], [ %64, %61 ]
  %41 = icmp sgt i32 %40, %3
  br i1 %41, label %70, label %71

42:                                               ; preds = %68, %33
  %43 = phi i32 [ %12, %33 ], [ %62, %68 ]
  %44 = phi i32 [ %12, %33 ], [ %63, %68 ]
  %45 = phi i16* [ %24, %33 ], [ %69, %68 ]
  %46 = phi i64 [ 0, %33 ], [ %65, %68 ]
  %47 = phi i32 [ 0, %33 ], [ %64, %68 ]
  %48 = getelementptr inbounds i16, i16* %45, i64 %46
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %27, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %42
  %52 = icmp slt i32 %47, %3
  br i1 %52, label %53, label %58

53:                                               ; preds = %51
  %54 = sext i32 %47 to i64
  %55 = getelementptr inbounds i32, i32* %2, i64 %54
  %56 = trunc i64 %46 to i32
  store i32 %56, i32* %55, align 4
  %57 = load i32, i32* %11, align 4
  br label %58

58:                                               ; preds = %53, %51
  %59 = phi i32 [ %57, %53 ], [ %43, %51 ]
  %60 = add nsw i32 %47, 1
  br label %61

61:                                               ; preds = %42, %58
  %62 = phi i32 [ %59, %58 ], [ %43, %42 ]
  %63 = phi i32 [ %59, %58 ], [ %44, %42 ]
  %64 = phi i32 [ %60, %58 ], [ %47, %42 ]
  %65 = add nuw nsw i64 %46, 1
  %66 = sext i32 %63 to i64
  %67 = icmp slt i64 %65, %66
  br i1 %67, label %68, label %39

68:                                               ; preds = %61
  %69 = load i16*, i16** %34, align 8
  br label %42

70:                                               ; preds = %39
  store i32 15, i32* %4, align 4
  br label %71

71:                                               ; preds = %5, %16, %14, %21, %38, %37, %70, %39
  %72 = phi i32 [ 0, %5 ], [ 0, %21 ], [ 1, %38 ], [ 1, %37 ], [ %40, %70 ], [ %40, %39 ], [ 0, %14 ], [ 0, %16 ]
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6913CollationData17makeReorderRangesEPKiiRNS_9UVector32ER10UErrorCode(%"struct.icu_69::CollationData"* nocapture readonly, i32* nocapture readonly, i32, %"class.icu_69::UVector32"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #2 align 2 {
  tail call void @_ZNK6icu_6913CollationData17makeReorderRangesEPKiiaRNS_9UVector32ER10UErrorCode(%"struct.icu_69::CollationData"* %0, i32* %1, i32 %2, i8 signext 0, %"class.icu_69::UVector32"* dereferenceable(32) %3, i32* dereferenceable(4) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6icu_6913CollationData17makeReorderRangesEPKiiaRNS_9UVector32ER10UErrorCode(%"struct.icu_69::CollationData"* nocapture readonly, i32* nocapture readonly, i32, i8 signext, %"class.icu_69::UVector32"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #2 align 2 {
  %7 = alloca [256 x i8], align 16
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %461

10:                                               ; preds = %6
  tail call void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"* %4) #5
  switch i32 %2, label %14 [
    i32 0, label %461
    i32 1, label %11
  ]

11:                                               ; preds = %10
  %12 = load i32, i32* %1, align 4
  %13 = icmp eq i32 %12, 103
  br i1 %13, label %461, label %14

14:                                               ; preds = %10, %11
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 0, i64 256, i1 false)
  %16 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 16
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 15
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 14
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %17, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %14
  %26 = zext i16 %23 to i64
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %26
  store i8 -1, i8* %27, align 1
  br label %28

28:                                               ; preds = %14, %25
  %29 = add nsw i32 %19, 15
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %17, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = zext i16 %32 to i64
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %35
  store i8 -1, i8* %36, align 1
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 17
  %39 = load i16*, i16** %38, align 8
  %40 = getelementptr inbounds i16, i16* %39, i64 1
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 18
  %44 = load i32, i32* %43, align 8
  %45 = add nsw i32 %44, -1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %39, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp sgt i32 %2, 0
  br i1 %50, label %51, label %141

51:                                               ; preds = %37
  %52 = zext i32 %2 to i64
  %53 = icmp ult i32 %2, 8
  br i1 %53, label %54, label %57

54:                                               ; preds = %131, %51
  %55 = phi i64 [ 0, %51 ], [ %58, %131 ]
  %56 = phi i32 [ 0, %51 ], [ %139, %131 ]
  br label %144

57:                                               ; preds = %51
  %58 = and i64 %52, 4294967288
  %59 = add nsw i64 %58, -8
  %60 = lshr exact i64 %59, 3
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %59, 0
  br i1 %63, label %107, label %64

64:                                               ; preds = %57
  %65 = sub nuw nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %104, %66 ]
  %68 = phi <4 x i32> [ zeroinitializer, %64 ], [ %102, %66 ]
  %69 = phi <4 x i32> [ zeroinitializer, %64 ], [ %103, %66 ]
  %70 = phi i64 [ %65, %64 ], [ %105, %66 ]
  %71 = getelementptr inbounds i32, i32* %1, i64 %67
  %72 = bitcast i32* %71 to <4 x i32>*
  %73 = load <4 x i32>, <4 x i32>* %72, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  %76 = load <4 x i32>, <4 x i32>* %75, align 4
  %77 = add nsw <4 x i32> %73, <i32 -4096, i32 -4096, i32 -4096, i32 -4096>
  %78 = add nsw <4 x i32> %76, <i32 -4096, i32 -4096, i32 -4096, i32 -4096>
  %79 = icmp ult <4 x i32> %77, <i32 8, i32 8, i32 8, i32 8>
  %80 = icmp ult <4 x i32> %78, <i32 8, i32 8, i32 8, i32 8>
  %81 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %77
  %82 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %78
  %83 = select <4 x i1> %79, <4 x i32> %81, <4 x i32> zeroinitializer
  %84 = select <4 x i1> %80, <4 x i32> %82, <4 x i32> zeroinitializer
  %85 = or <4 x i32> %83, %68
  %86 = or <4 x i32> %84, %69
  %87 = or i64 %67, 8
  %88 = getelementptr inbounds i32, i32* %1, i64 %87
  %89 = bitcast i32* %88 to <4 x i32>*
  %90 = load <4 x i32>, <4 x i32>* %89, align 4
  %91 = getelementptr inbounds i32, i32* %88, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4
  %94 = add nsw <4 x i32> %90, <i32 -4096, i32 -4096, i32 -4096, i32 -4096>
  %95 = add nsw <4 x i32> %93, <i32 -4096, i32 -4096, i32 -4096, i32 -4096>
  %96 = icmp ult <4 x i32> %94, <i32 8, i32 8, i32 8, i32 8>
  %97 = icmp ult <4 x i32> %95, <i32 8, i32 8, i32 8, i32 8>
  %98 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %94
  %99 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %95
  %100 = select <4 x i1> %96, <4 x i32> %98, <4 x i32> zeroinitializer
  %101 = select <4 x i1> %97, <4 x i32> %99, <4 x i32> zeroinitializer
  %102 = or <4 x i32> %100, %85
  %103 = or <4 x i32> %101, %86
  %104 = add i64 %67, 16
  %105 = add i64 %70, -2
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %66, !llvm.loop !2

107:                                              ; preds = %66, %57
  %108 = phi <4 x i32> [ undef, %57 ], [ %102, %66 ]
  %109 = phi <4 x i32> [ undef, %57 ], [ %103, %66 ]
  %110 = phi i64 [ 0, %57 ], [ %104, %66 ]
  %111 = phi <4 x i32> [ zeroinitializer, %57 ], [ %102, %66 ]
  %112 = phi <4 x i32> [ zeroinitializer, %57 ], [ %103, %66 ]
  %113 = icmp eq i64 %62, 0
  br i1 %113, label %131, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds i32, i32* %1, i64 %110
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = add nsw <4 x i32> %117, <i32 -4096, i32 -4096, i32 -4096, i32 -4096>
  %122 = add nsw <4 x i32> %120, <i32 -4096, i32 -4096, i32 -4096, i32 -4096>
  %123 = icmp ult <4 x i32> %122, <i32 8, i32 8, i32 8, i32 8>
  %124 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %122
  %125 = select <4 x i1> %123, <4 x i32> %124, <4 x i32> zeroinitializer
  %126 = or <4 x i32> %125, %112
  %127 = icmp ult <4 x i32> %121, <i32 8, i32 8, i32 8, i32 8>
  %128 = shl <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %121
  %129 = select <4 x i1> %127, <4 x i32> %128, <4 x i32> zeroinitializer
  %130 = or <4 x i32> %129, %111
  br label %131

131:                                              ; preds = %107, %114
  %132 = phi <4 x i32> [ %108, %107 ], [ %130, %114 ]
  %133 = phi <4 x i32> [ %109, %107 ], [ %126, %114 ]
  %134 = or <4 x i32> %133, %132
  %135 = shufflevector <4 x i32> %134, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %136 = or <4 x i32> %134, %135
  %137 = shufflevector <4 x i32> %136, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %138 = or <4 x i32> %136, %137
  %139 = extractelement <4 x i32> %138, i32 0
  %140 = icmp eq i64 %58, %52
  br i1 %140, label %141, label %54

141:                                              ; preds = %144, %131, %37
  %142 = phi i32 [ 0, %37 ], [ %139, %131 ], [ %153, %144 ]
  %143 = sext i32 %19 to i64
  br label %158

144:                                              ; preds = %54, %144
  %145 = phi i64 [ %154, %144 ], [ %55, %54 ]
  %146 = phi i32 [ %153, %144 ], [ %56, %54 ]
  %147 = getelementptr inbounds i32, i32* %1, i64 %145
  %148 = load i32, i32* %147, align 4
  %149 = add nsw i32 %148, -4096
  %150 = icmp ult i32 %149, 8
  %151 = shl i32 1, %149
  %152 = select i1 %150, i32 %151, i32 0
  %153 = or i32 %152, %146
  %154 = add nuw nsw i64 %145, 1
  %155 = icmp eq i64 %154, %52
  br i1 %155, label %141, label %144, !llvm.loop !4

156:                                              ; preds = %194
  %157 = icmp eq i32 %142, 0
  br i1 %157, label %198, label %212

158:                                              ; preds = %194, %141
  %159 = phi i64 [ 0, %141 ], [ %196, %194 ]
  %160 = phi i32 [ %42, %141 ], [ %195, %194 ]
  %161 = add nsw i64 %159, %143
  %162 = getelementptr inbounds i16, i16* %17, i64 %161
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i64
  %165 = icmp eq i16 %163, 0
  br i1 %165, label %194, label %166

166:                                              ; preds = %158
  %167 = trunc i64 %159 to i32
  %168 = shl i32 1, %167
  %169 = and i32 %168, %142
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %194

171:                                              ; preds = %166
  %172 = getelementptr inbounds i16, i16* %39, i64 %164
  %173 = load i16, i16* %172, align 2
  %174 = zext i16 %173 to i32
  %175 = and i32 %174, 255
  %176 = and i32 %160, 255
  %177 = icmp ult i32 %175, %176
  %178 = add nsw i32 %160, 256
  %179 = select i1 %177, i32 %178, i32 %160
  %180 = lshr i32 %179, 8
  %181 = trunc i32 %180 to i8
  %182 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %164
  store i8 %181, i8* %182, align 1
  %183 = add nuw nsw i64 %164, 1
  %184 = getelementptr inbounds i16, i16* %39, i64 %183
  %185 = load i16, i16* %184, align 2
  %186 = zext i16 %185 to i32
  %187 = and i32 %179, 65280
  %188 = and i32 %186, 65280
  %189 = and i32 %174, 65280
  %190 = sub nsw i32 %188, %189
  %191 = add nsw i32 %190, %187
  %192 = and i32 %186, 255
  %193 = or i32 %191, %192
  br label %194

194:                                              ; preds = %158, %171, %166
  %195 = phi i32 [ %193, %171 ], [ %160, %166 ], [ %160, %158 ]
  %196 = add nuw nsw i64 %159, 1
  %197 = icmp eq i64 %196, 8
  br i1 %197, label %156, label %158

198:                                              ; preds = %156
  %199 = load i32, i32* %1, align 4
  %200 = icmp ne i32 %199, 25
  %201 = icmp ne i8 %3, 0
  %202 = or i1 %201, %200
  br i1 %202, label %212, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds i16, i16* %17, i64 25
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i64
  %207 = getelementptr inbounds i16, i16* %39, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = zext i16 %208 to i32
  %210 = sub nsw i32 %209, %195
  %211 = and i32 %210, 65280
  br label %212

212:                                              ; preds = %198, %203, %156
  %213 = phi i32 [ 0, %198 ], [ %211, %203 ], [ 0, %156 ]
  %214 = phi i32 [ %195, %198 ], [ %209, %203 ], [ %195, %156 ]
  br i1 %50, label %215, label %334

215:                                              ; preds = %212
  %216 = zext i32 %2 to i64
  br label %217

217:                                              ; preds = %331, %215
  %218 = phi i64 [ 0, %215 ], [ %220, %331 ]
  %219 = phi i32 [ %214, %215 ], [ %332, %331 ]
  %220 = add nuw nsw i64 %218, 1
  %221 = getelementptr inbounds i32, i32* %1, i64 %218
  %222 = load i32, i32* %221, align 4
  switch i32 %222, label %286 [
    i32 103, label %223
    i32 -1, label %285
  ]

223:                                              ; preds = %217
  %224 = trunc i64 %220 to i32
  %225 = icmp slt i32 %224, %2
  br i1 %225, label %226, label %334

226:                                              ; preds = %223
  %227 = sext i32 %2 to i64
  %228 = shl i64 %220, 32
  %229 = ashr exact i64 %228, 32
  br label %230

230:                                              ; preds = %226, %282
  %231 = phi i64 [ %227, %226 ], [ %233, %282 ]
  %232 = phi i32 [ %49, %226 ], [ %283, %282 ]
  %233 = add nsw i64 %231, -1
  %234 = getelementptr inbounds i32, i32* %1, i64 %233
  %235 = load i32, i32* %234, align 4
  switch i32 %235, label %237 [
    i32 -1, label %236
    i32 103, label %236
  ]

236:                                              ; preds = %230, %230
  store i32 1, i32* %5, align 4
  br label %460

237:                                              ; preds = %230
  %238 = icmp slt i32 %235, 0
  br i1 %238, label %282, label %239

239:                                              ; preds = %237
  %240 = icmp sgt i32 %19, %235
  br i1 %240, label %248, label %241

241:                                              ; preds = %239
  %242 = icmp slt i32 %235, 4096
  br i1 %242, label %282, label %243

243:                                              ; preds = %241
  %244 = add nsw i32 %235, -4096
  %245 = icmp slt i32 %244, 8
  br i1 %245, label %246, label %282

246:                                              ; preds = %243
  %247 = add nsw i32 %19, %244
  br label %248

248:                                              ; preds = %239, %246
  %249 = phi i32 [ %247, %246 ], [ %235, %239 ]
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i16, i16* %17, i64 %250
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i64
  %254 = icmp eq i16 %252, 0
  br i1 %254, label %282, label %255

255:                                              ; preds = %248
  %256 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %253
  %257 = load i8, i8* %256, align 1
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %260, label %259

259:                                              ; preds = %255
  store i32 1, i32* %5, align 4
  br label %460

260:                                              ; preds = %255
  %261 = add nuw nsw i64 %253, 1
  %262 = getelementptr inbounds i16, i16* %39, i64 %261
  %263 = load i16, i16* %262, align 2
  %264 = zext i16 %263 to i32
  %265 = and i32 %264, 255
  %266 = and i32 %232, 255
  %267 = icmp ugt i32 %265, %266
  %268 = add i32 %232, 65280
  %269 = select i1 %267, i32 %268, i32 %232
  %270 = getelementptr inbounds i16, i16* %39, i64 %253
  %271 = load i16, i16* %270, align 2
  %272 = zext i16 %271 to i32
  %273 = and i32 %269, 65280
  %274 = and i32 %264, 65280
  %275 = and i32 %272, 65280
  %276 = sub nsw i32 %275, %274
  %277 = add nsw i32 %273, %276
  %278 = and i32 %272, 255
  %279 = or i32 %277, %278
  %280 = lshr exact i32 %277, 8
  %281 = trunc i32 %280 to i8
  store i8 %281, i8* %256, align 1
  br label %282

282:                                              ; preds = %243, %241, %237, %248, %260
  %283 = phi i32 [ %279, %260 ], [ %232, %248 ], [ %232, %237 ], [ %232, %241 ], [ %232, %243 ]
  %284 = icmp slt i64 %229, %233
  br i1 %284, label %230, label %334

285:                                              ; preds = %217
  store i32 1, i32* %5, align 4
  br label %460

286:                                              ; preds = %217
  %287 = icmp slt i32 %222, 0
  br i1 %287, label %331, label %288

288:                                              ; preds = %286
  %289 = icmp sgt i32 %19, %222
  br i1 %289, label %297, label %290

290:                                              ; preds = %288
  %291 = icmp slt i32 %222, 4096
  br i1 %291, label %331, label %292

292:                                              ; preds = %290
  %293 = add nsw i32 %222, -4096
  %294 = icmp slt i32 %293, 8
  br i1 %294, label %295, label %331

295:                                              ; preds = %292
  %296 = add nsw i32 %19, %293
  br label %297

297:                                              ; preds = %288, %295
  %298 = phi i32 [ %296, %295 ], [ %222, %288 ]
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds i16, i16* %17, i64 %299
  %301 = load i16, i16* %300, align 2
  %302 = zext i16 %301 to i64
  %303 = icmp eq i16 %301, 0
  br i1 %303, label %331, label %304

304:                                              ; preds = %297
  %305 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %302
  %306 = load i8, i8* %305, align 1
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %309, label %308

308:                                              ; preds = %304
  store i32 1, i32* %5, align 4
  br label %460

309:                                              ; preds = %304
  %310 = getelementptr inbounds i16, i16* %39, i64 %302
  %311 = load i16, i16* %310, align 2
  %312 = zext i16 %311 to i32
  %313 = and i32 %312, 255
  %314 = and i32 %219, 255
  %315 = icmp ult i32 %313, %314
  %316 = add nsw i32 %219, 256
  %317 = select i1 %315, i32 %316, i32 %219
  %318 = lshr i32 %317, 8
  %319 = trunc i32 %318 to i8
  store i8 %319, i8* %305, align 1
  %320 = add nuw nsw i64 %302, 1
  %321 = getelementptr inbounds i16, i16* %39, i64 %320
  %322 = load i16, i16* %321, align 2
  %323 = zext i16 %322 to i32
  %324 = and i32 %317, 65280
  %325 = and i32 %323, 65280
  %326 = and i32 %312, 65280
  %327 = sub nsw i32 %325, %326
  %328 = add nsw i32 %327, %324
  %329 = and i32 %323, 255
  %330 = or i32 %328, %329
  br label %331

331:                                              ; preds = %292, %290, %286, %309, %297
  %332 = phi i32 [ %330, %309 ], [ %219, %297 ], [ %219, %286 ], [ %219, %290 ], [ %219, %292 ]
  %333 = icmp eq i64 %220, %216
  br i1 %333, label %334, label %217

334:                                              ; preds = %331, %282, %212, %223
  %335 = phi i32 [ %219, %223 ], [ %214, %212 ], [ %219, %282 ], [ %332, %331 ]
  %336 = phi i32 [ %49, %223 ], [ %49, %212 ], [ %283, %282 ], [ %49, %331 ]
  %337 = phi i8 [ 1, %223 ], [ 0, %212 ], [ 1, %282 ], [ 0, %331 ]
  %338 = icmp sgt i32 %44, 2
  br i1 %338, label %339, label %341

339:                                              ; preds = %334
  %340 = icmp eq i8 %337, 0
  br label %348

341:                                              ; preds = %381, %334
  %342 = phi i32 [ %335, %334 ], [ %383, %381 ]
  %343 = icmp sgt i32 %342, %336
  br i1 %343, label %385, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %4, i64 0, i32 1
  %346 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %4, i64 0, i32 2
  %347 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %4, i64 0, i32 4
  br label %390

348:                                              ; preds = %339, %381
  %349 = phi i64 [ 1, %339 ], [ %382, %381 ]
  %350 = phi i32 [ %335, %339 ], [ %383, %381 ]
  %351 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %349
  %352 = load i8, i8* %351, align 1
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %356, label %354

354:                                              ; preds = %348
  %355 = add nuw nsw i64 %349, 1
  br label %381

356:                                              ; preds = %348
  %357 = getelementptr inbounds i16, i16* %39, i64 %349
  %358 = load i16, i16* %357, align 2
  %359 = zext i16 %358 to i32
  %360 = icmp slt i32 %350, %359
  %361 = and i1 %340, %360
  %362 = select i1 %361, i32 %359, i32 %350
  %363 = and i32 %359, 255
  %364 = and i32 %362, 255
  %365 = icmp ult i32 %363, %364
  %366 = add nsw i32 %362, 256
  %367 = select i1 %365, i32 %366, i32 %362
  %368 = lshr i32 %367, 8
  %369 = trunc i32 %368 to i8
  store i8 %369, i8* %351, align 1
  %370 = add nuw nsw i64 %349, 1
  %371 = getelementptr inbounds i16, i16* %39, i64 %370
  %372 = load i16, i16* %371, align 2
  %373 = zext i16 %372 to i32
  %374 = and i32 %367, 65280
  %375 = and i32 %373, 65280
  %376 = and i32 %359, 65280
  %377 = sub nsw i32 %375, %376
  %378 = add nsw i32 %377, %374
  %379 = and i32 %373, 255
  %380 = or i32 %378, %379
  br label %381

381:                                              ; preds = %354, %356
  %382 = phi i64 [ %355, %354 ], [ %370, %356 ]
  %383 = phi i32 [ %350, %354 ], [ %380, %356 ]
  %384 = icmp slt i64 %382, %46
  br i1 %384, label %348, label %341

385:                                              ; preds = %341
  %386 = sub nsw i32 %342, %213
  %387 = icmp sgt i32 %386, %336
  br i1 %387, label %389, label %388

388:                                              ; preds = %385
  tail call void @_ZNK6icu_6913CollationData17makeReorderRangesEPKiiaRNS_9UVector32ER10UErrorCode(%"struct.icu_69::CollationData"* %0, i32* %1, i32 %2, i8 signext 1, %"class.icu_69::UVector32"* dereferenceable(32) %4, i32* dereferenceable(4) %5)
  br label %460

389:                                              ; preds = %385
  store i32 15, i32* %5, align 4
  br label %460

390:                                              ; preds = %455, %344
  %391 = phi i32 [ %456, %455 ], [ %44, %344 ]
  %392 = phi i32 [ %424, %455 ], [ 0, %344 ]
  %393 = phi i32 [ %459, %455 ], [ 1, %344 ]
  %394 = add nsw i32 %391, -1
  %395 = icmp slt i32 %393, %394
  br i1 %395, label %396, label %422

396:                                              ; preds = %390
  %397 = sext i32 %393 to i64
  %398 = sext i32 %394 to i64
  br label %399

399:                                              ; preds = %396, %415
  %400 = phi i64 [ %397, %396 ], [ %417, %415 ]
  %401 = phi i32 [ %392, %396 ], [ %416, %415 ]
  %402 = phi i32 [ %393, %396 ], [ %418, %415 ]
  %403 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %400
  %404 = load i8, i8* %403, align 1
  %405 = icmp eq i8 %404, -1
  br i1 %405, label %415, label %406

406:                                              ; preds = %399
  %407 = zext i8 %404 to i32
  %408 = load i16*, i16** %38, align 8
  %409 = getelementptr inbounds i16, i16* %408, i64 %400
  %410 = load i16, i16* %409, align 2
  %411 = lshr i16 %410, 8
  %412 = zext i16 %411 to i32
  %413 = sub nsw i32 %407, %412
  %414 = icmp eq i32 %413, %392
  br i1 %414, label %415, label %420

415:                                              ; preds = %399, %406
  %416 = phi i32 [ %401, %399 ], [ %392, %406 ]
  %417 = add nsw i64 %400, 1
  %418 = add nsw i32 %402, 1
  %419 = icmp slt i64 %417, %398
  br i1 %419, label %399, label %422

420:                                              ; preds = %406
  %421 = trunc i64 %400 to i32
  br label %422

422:                                              ; preds = %415, %420, %390
  %423 = phi i32 [ %393, %390 ], [ %421, %420 ], [ %418, %415 ]
  %424 = phi i32 [ %392, %390 ], [ %413, %420 ], [ %416, %415 ]
  %425 = icmp ne i32 %392, 0
  %426 = icmp slt i32 %423, %394
  %427 = or i1 %425, %426
  br i1 %427, label %428, label %455

428:                                              ; preds = %422
  %429 = load i16*, i16** %38, align 8
  %430 = sext i32 %423 to i64
  %431 = getelementptr inbounds i16, i16* %429, i64 %430
  %432 = load i16, i16* %431, align 2
  %433 = zext i16 %432 to i32
  %434 = shl nuw i32 %433, 16
  %435 = and i32 %392, 65535
  %436 = or i32 %434, %435
  %437 = load i32, i32* %345, align 8
  %438 = icmp sgt i32 %437, -2
  %439 = load i32, i32* %346, align 4
  %440 = icmp sgt i32 %439, %437
  %441 = and i1 %438, %440
  br i1 %441, label %448, label %442

442:                                              ; preds = %428
  %443 = add nsw i32 %437, 1
  %444 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %4, i32 %443, i32* dereferenceable(4) %5) #5
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %455, label %446

446:                                              ; preds = %442
  %447 = load i32, i32* %345, align 8
  br label %448

448:                                              ; preds = %428, %446
  %449 = phi i32 [ %447, %446 ], [ %437, %428 ]
  %450 = load i32*, i32** %347, align 8
  %451 = sext i32 %449 to i64
  %452 = getelementptr inbounds i32, i32* %450, i64 %451
  store i32 %436, i32* %452, align 4
  %453 = load i32, i32* %345, align 8
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %345, align 8
  br label %455

455:                                              ; preds = %422, %448, %442
  %456 = load i32, i32* %43, align 8
  %457 = add nsw i32 %456, -1
  %458 = icmp eq i32 %423, %457
  %459 = add nsw i32 %423, 1
  br i1 %458, label %460, label %390

460:                                              ; preds = %455, %236, %285, %308, %259, %389, %388
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %15) #5
  br label %461

461:                                              ; preds = %10, %6, %11, %460
  ret void
}

declare void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData17addLowScriptRangeEPhii(%"struct.icu_69::CollationData"* nocapture readonly, i8* nocapture, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 17
  %6 = load i16*, i16** %5, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr inbounds i16, i16* %6, i64 %7
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = and i32 %10, 255
  %12 = and i32 %3, 255
  %13 = icmp ult i32 %11, %12
  %14 = add nsw i32 %3, 256
  %15 = select i1 %13, i32 %14, i32 %3
  %16 = lshr i32 %15, 8
  %17 = trunc i32 %16 to i8
  %18 = getelementptr inbounds i8, i8* %1, i64 %7
  store i8 %17, i8* %18, align 1
  %19 = load i16*, i16** %5, align 8
  %20 = add nsw i32 %2, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16, i16* %19, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = and i32 %15, 65280
  %26 = and i32 %24, 65280
  %27 = and i32 %10, 65280
  %28 = sub nsw i32 %26, %27
  %29 = add nsw i32 %28, %25
  %30 = and i32 %24, 255
  %31 = or i32 %29, %30
  ret i32 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6icu_6913CollationData18addHighScriptRangeEPhii(%"struct.icu_69::CollationData"* nocapture readonly, i8* nocapture, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %0, i64 0, i32 17
  %6 = load i16*, i16** %5, align 8
  %7 = add nsw i32 %2, 1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i16, i16* %6, i64 %8
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = and i32 %11, 255
  %13 = and i32 %3, 255
  %14 = icmp ugt i32 %12, %13
  %15 = add i32 %3, 65280
  %16 = select i1 %14, i32 %15, i32 %3
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds i16, i16* %6, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %16, 65280
  %22 = and i32 %11, 65280
  %23 = and i32 %20, 65280
  %24 = sub nsw i32 %23, %22
  %25 = add nsw i32 %21, %24
  %26 = and i32 %20, 255
  %27 = or i32 %25, %26
  %28 = lshr exact i32 %25, 8
  %29 = trunc i32 %28 to i8
  %30 = getelementptr inbounds i8, i8* %1, i64 %17
  store i8 %29, i8* %30, align 1
  ret i32 %27
}

declare i32 @_ZN6icu_699Collation32getThreeBytePrimaryForOffsetDataEil(i32, i64) local_unnamed_addr #4

declare i32 @_ZN6icu_699Collation30unassignedPrimaryFromCodePointEi(i32) local_unnamed_addr #4

declare signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
